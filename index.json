{
  "api/Exiled.API.Enums.AdminToyType.html": {
    "href": "api/Exiled.API.Enums.AdminToyType.html",
    "title": "Enum AdminToyType | EXILED Docs",
    "keywords": "Enum AdminToyType Unique identifier for the different types of admin toys. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum AdminToyType Fields Name Description LightSource Light source toy. PrimitiveObject Primitive Object toy. ShootingTarget Primitive Object toy. See Also ToyType Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.AmmoType.html": {
    "href": "api/Exiled.API.Enums.AmmoType.html",
    "title": "Enum AmmoType | EXILED Docs",
    "keywords": "Enum AmmoType Ammo types present in the game. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum AmmoType Fields Name Description Ammo12Gauge 12 gauge shotgun ammo. Used by ItemType.GunShotgun Ammo44Cal 44 caliber. Nato556 5.56mm Ammunition. Used by ItemType.GunE11SR . Nato762 7.62mm Ammunition. Used by and ItemType.GunLogicer . Nato9 9mm Ammunition. Used by ItemType.GunCOM15 ,. None Not ammo. See Also GetAmmoType(ItemType) GetItemType ( AmmoType ) GetWeaponAmmoType ( FirearmType ) Extension Methods ItemExtensions.GetItemType() ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.AuthenticationType.html": {
    "href": "api/Exiled.API.Enums.AuthenticationType.html",
    "title": "Enum AuthenticationType | EXILED Docs",
    "keywords": "Enum AuthenticationType Players authentication types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum AuthenticationType Fields Name Description Discord Indicates that the player has been authenticated through Discord. Northwood Indicates that the player has been authenticated as a Northwood staffer. Patreon Indicates that the player has been authenticated as a Patreon. Steam Indicates that the player has been authenticated through Steam. Unknown Indicates that the player has been authenticated through an unknown provider. See Also AuthenticationType Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.BloodType.html": {
    "href": "api/Exiled.API.Enums.BloodType.html",
    "title": "Enum BloodType | EXILED Docs",
    "keywords": "Enum BloodType Unique identifier for the different types of blood decals. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum BloodType Fields Name Description Default The default blood decal. Faded The faded blood decal. Scp106 The blood decal placed after Scp106 sends someone to the pocket dimension. Spreaded The spreaded blood decal. See Also PlaceBlood(Vector3, Vector3) PlaceBlood(Vector3) Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.CameraType.html": {
    "href": "api/Exiled.API.Enums.CameraType.html",
    "title": "Enum CameraType | EXILED Docs",
    "keywords": "Enum CameraType Unique identifier for the different types of SCP-079 cameras. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum CameraType Fields Name Description ExitPassage EzChkptHall EzCrossing EzCurve EzGateA EzGateB EzHallway EzIntercomBottom EzIntercomHall EzIntercomPanel EzIntercomStairs EzLargeOffice EzLoadingDock EzMinorOffice EzThreeWay EzTwoStoryOffice GateASurface GateBSurface Hcz049Armory Hcz049ContChamber Hcz049ElevTop Hcz049Hallway Hcz049TopFloor Hcz049Tunnel Hcz079Airlock Hcz079ContChamber Hcz079Hallway Hcz079KillSwitch Hcz096ContChamber Hcz106Bridge Hcz106Catwalk Hcz106Recontainment Hcz939 HczArmory HczArmoryInterior HczChkptEz HczChkptHcz HczCrossing HczElevSysA HczElevSysB HczHallway HczHIDChamber HczHIDHallway HczServersBottom HczServersStairs HczServersTop HczTeslaGate HczTestroomBridge HczTestroomMain HczTestroomOffice HczThreeWay HczWarheadArmory HczWarheadControl HczWarheadHallway HczWarheadTop Lcz173Bottom Lcz173ContChamber Lcz173Hall Lcz173Stairs Lcz914Airlock Lcz914ContChamber LczAirlock LczArmory LczCellblockBack LczCellblockEntry LczChkptAEntry LczChkptAInner LczChkptBEntry LczChkptBInner LczCrossing LczCurve LczElevSysA LczElevSysB LczGlassroom LczGlassroomEntry LczGreenhouse LczHallway LczPcOffice LczRestrooms LczTcHallway LczTestChamber LczThreeWay MainStreet SurfaceAirlock SurfaceBridge TunnelEntrance Unknown Represents an unknown camera. See Also Type Get(CameraType) Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.ConfigType.html": {
    "href": "api/Exiled.API.Enums.ConfigType.html",
    "title": "Enum ConfigType | EXILED Docs",
    "keywords": "Enum ConfigType The different types of configuration files distribution. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum ConfigType Fields Name Description Default Default distribution, every plugin will share the same config file. Separated Separated distribution, each plugin will have an individual config file. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.DamageType.html": {
    "href": "api/Exiled.API.Enums.DamageType.html",
    "title": "Enum DamageType | EXILED Docs",
    "keywords": "Enum DamageType Identifiers for types of damage. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum DamageType Fields Name Description AK Damage caused by ItemType.GunAK . Asphyxiation Asphyxiated . Bleeding Bleeding . CardiacArrest Damage caused by CardiacArrest . Com15 Damage caused by ItemType.GunCOM15 . Com18 Damage caused by ItemType.GunCOM18 . Com45 Damage caused by ItemType.GunCom45 . Crossvec Damage caused by ItemType.GunCrossvec . Crushed Crushed by the checkpoint killer trigger. Custom Damage caused by a custom source. Decontamination LCZ Decontamination. E11Sr Damage caused by ItemType.GunE11SR . Explosion Damage dealt by frag grenades. Falldown Fall damage. FemurBreaker Damage caused by the femur breaker. Firearm Damage dealt by a Firearm when the ItemType used is not available. FriendlyFireDetector Damage caused by the friendly fire detector. Fsp9 Damage caused by ItemType.GunFSP9 . Hypothermia Hypothermia . Jailbird Damage caused by ItemType.Jailbird . Logicer Damage caused by ItemType.GunLogicer . MicroHid Damage dealt by a MicroHid . ParticleDisruptor Damage caused by ItemType.ParticleDisruptor . PocketDimension Damage caused by the pocket dimension. Poison Poisoned . Recontainment Damage is dealt by SCP Recontainment procedure. Revolver Damage caused by ItemType.GunRevolver . Scp Damage is dealt by a Scp when the PlayerRoles.RoleTypeId used is not available. Scp018 Damage dealt by SCP-018. Scp049 Damage caused by PlayerRoles.RoleTypeId.Scp049 . Scp0492 Damage caused by PlayerRoles.RoleTypeId.Scp0492 . Scp096 Damage caused by PlayerRoles.RoleTypeId.Scp096 . Scp106 Damage caused by PlayerRoles.RoleTypeId.Scp106 . Scp173 Damage caused by PlayerRoles.RoleTypeId.Scp173 . Scp207 Scp207 . Scp939 Damage caused by PlayerRoles.RoleTypeId.Scp939 . SeveredHands Damage caused by severed hands. Shotgun Damage caused by ItemType.GunShotgun . Tesla Damage dealt by a Tesla Gate. Unknown Unknown damage source. Warhead Alpha Warhead. See Also Hurt(Single, DamageType, String) Hurt(Player, Single, DamageType, DamageHandlerBase.CassieAnnouncement) Hurt(Player, Single, DamageType, DamageHandlerBase.CassieAnnouncement, String) Kill(DamageType, String) Extension Methods DamageTypeExtensions.IsWeapon(Boolean) DamageTypeExtensions.IsScp(Boolean) DamageTypeExtensions.IsStatusEffect() ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.DoorBeepType.html": {
    "href": "api/Exiled.API.Enums.DoorBeepType.html",
    "title": "Enum DoorBeepType | EXILED Docs",
    "keywords": "Enum DoorBeepType Door beep types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum DoorBeepType Fields Name Description InteractionAllowed Interaction allowed. InteractionDenied Interaction denied. LockBypassDenied Lock bypass is denied. PermissionDenied Permission denied beep. See Also PlaySound(DoorBeepType) Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.DoorLockType.html": {
    "href": "api/Exiled.API.Enums.DoorLockType.html",
    "title": "Enum DoorLockType | EXILED Docs",
    "keywords": "Enum DoorLockType All possible door locks. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax [Flags] public enum DoorLockType Fields Name Description AdminCommand Locked via admin command. DecontEvacuate Locked by decontamination evacuation (during final countdown to decon). DecontLockdown Locked by decontamination lockdown (after decon starts). Isolation Isloation. Lockdown079 SCP-079 lockdown room lock. Lockdown2176 Locked down by SCP-2176. None Unlocked. NoPower Door has no power. Regular079 Regular SCP-079 door lock. SpecialDoorFeature Special door features. Warhead Alpha Warhead detonation lock. See Also LockAll(Single, DoorLockType) ChangeLock(DoorLockType) Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.DoorType.html": {
    "href": "api/Exiled.API.Enums.DoorType.html",
    "title": "Enum DoorType | EXILED Docs",
    "keywords": "Enum DoorType Unique identifier for the different types of doors. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum DoorType Fields Name Description Airlock Represents the door inside LczAirlock with Interactables.Interobjects.AirlockController component. CheckpointArmoryA Represents the Armory door in HczEzCheckpointA . CheckpointArmoryB Represents the Armory door in HczEzCheckpointB . CheckpointEzHczA Represents the CHECKPOINT_EZ_HCZ_A door. CheckpointEzHczB Represents the CHECKPOINT_EZ_HCZ_B door. CheckpointGate Represents the Gate in the Checkpoint between EZ and HCZ. CheckpointLczA Represents the CHECKPOINT_LCZ_A door. CheckpointLczB Represents the CHECKPOINT_LCZ_B door. ElevatorGateA Represents the Elevator door for Interactables.Interobjects.ElevatorManager.ElevatorGroup.GateA . ElevatorGateB Represents the Elevator door for Interactables.Interobjects.ElevatorManager.ElevatorGroup.GateB . ElevatorLczA Represents the Elevator door for Interactables.Interobjects.ElevatorManager.ElevatorGroup.LczA01 and Interactables.Interobjects.ElevatorManager.ElevatorGroup.LczA02 . ElevatorLczB Represents the Elevator door for Interactables.Interobjects.ElevatorManager.ElevatorGroup.LczB01 and Interactables.Interobjects.ElevatorManager.ElevatorGroup.LczB02 . ElevatorNuke Represents the Elevator door for Interactables.Interobjects.ElevatorManager.ElevatorGroup.Nuke . ElevatorScp049 Represents the Elevator door for Interactables.Interobjects.ElevatorManager.ElevatorGroup.Scp049 . EntranceDoor Represents any entrance zone styled door. EscapePrimary Represents the ESCAPE_PRIMARY door. EscapeSecondary Represents the ESCAPE_SECONDARY door. GateA Represents the GATE_A door. GateB Represents the GATE_B door. GR18Gate Represents the GR18 gate. GR18Inner Represents the GR18_INNER door. HczArmory Represents the HCZ_ARMORY door. HeavyContainmentDoor Represents any heavy containment styled door. HID Represents the HID door. HIDLeft Represents the HID_LEFT door. HIDRight Represents the HID_RIGHT door. Intercom Represents the INTERCOM door. LczArmory Represents the LCZ_ARMORY door. LczCafe Represents the LCZ_CAFE door. LczWc Represents the LCZ_WC door. LightContainmentDoor Represents any light containment styled door. NukeArmory Represents the NUKE_ARMORY door. NukeSurface Represents the NUKE_SURFACE door. PrisonDoor Represents any of the Class-D cell doors. Scp049Armory Represents the 049_ARMORY door. Scp049Gate Represents the Unsecured door. Scp079First Represents the 079_FIRST door. Scp079Second Represents the 079_SECOND door. Scp096 Represents the 096 door. Scp106Bottom Represents the 106_BOTTOM door. Scp106Primary Represents the 106_PRIMARY door. Scp106Secondary Represents the 106_SECONDARY door. Scp173Armory Represents the 173_ARMORY door. Scp173Bottom Represents the 173_BOTTOM door. Scp173Connector Represents the door between the 173 gate and the 173 armory. Scp173Gate Represents the 173 gate. Scp330 Represents the 330 door. Scp330Chamber Represents the 330_CHAMBER door. Scp914Door Represents the 914 door. Scp914Gate Represents the 914 gate. Scp939Cryo Represents the 939_CRYO door. ServersBottom Represents the SERVERS_BOTTOM door. SurfaceDoor Represents the Gate in the Checkpoint between EZ and HCZ. SurfaceGate Represents the SURFACE_GATE door. UnknownDoor Represents an unknown door. UnknownElevator Represents an unknown Elevator. UnknownGate Represents an unknown Gate. See Also Type Get(DoorType) Extension Methods DoorTypeExtensions.IsGate() DoorTypeExtensions.IsCheckpoint() DoorTypeExtensions.IsElevator() ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.EffectCategory.html": {
    "href": "api/Exiled.API.Enums.EffectCategory.html",
    "title": "Enum EffectCategory | EXILED Docs",
    "keywords": "Enum EffectCategory An enum which represents the categories of an effect. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax [Flags] public enum EffectCategory Fields Name Description Harmful Represents an effect which deals damage to a player over time. Movement Represents an effect which modifies a player's movement speed. Negative Represents an effect with a negative player impact. None Represents an uncategorized effect. Positive Represents an effect with a positive player impact. See Also GetCategories ( EffectType ) Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.EffectType.html": {
    "href": "api/Exiled.API.Enums.EffectType.html",
    "title": "Enum EffectType | EXILED Docs",
    "keywords": "Enum EffectType Status effects as enum. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum EffectType Fields Name Description AmnesiaItems The player isn't able to open their inventory or reload a weapon. AmnesiaVision The player isn't able to see properly. Asphyxiated Drains the player's stamina and then health. Bleeding Damages the player over time. Blinded Blurs the player's screen. BodyshotReduction Reduces damage taken by body shots. Burned Increases damage the player receives. Does not apply any standalone damage. CardiacArrest Effect given to player after being hurt by SCP-049. Concussed Blurs the player's screen while rotating. Corroding Teleports the player to the pocket dimension and drains health until the player escapes or is killed. DamageReduction Reduces overall damage taken. Deafened Deafens the player. Decontaminating Removes 10% of the player's health per second. Disabled Slows down the player's movement. Ensnared Prevents the player from moving. Exhausted Halves the player's maximum stamina and stamina regeneration rate. Flashed Flashes the player. Hemorrhage Drains the player's health while sprinting. Hypothermia Cause the player to slowly take damage by Hyporthermia. InsufficientLighting Cause the lighting in the facility to dim heavily for the player. Invigorated Reduces the player's FOV, gives infinite stamina and gives the effect of underwater sound. Invisible Makes the player invisible. MovementBoost Increases movement speed. Poisoned Damages the player every 5 seconds, starting low and increasing over time. RainbowTaste Severely reduces damage taken. Scp1853 Cause the player more effective for fight. Scp207 Increases the speed of the player while also draining health. SeveredHands Drops the player's current item and deals damage while effect is active. SinkHole Slows down the player's movement with the SCP-106 sinkhole effect. SoundtrackMute Disable ambiant sound. SpawnProtected Protect player from enemy if the config is Enable. Stained Prevents the player from sprinting and reduces movement speed by 20%. Traumatized Make Scp106 able to see you when he are in the ground (stalking). Vitality Causes the player to slowly regenerate health. See Also Type ( EffectType ) Extension Methods EffectTypeExtension.Type() EffectTypeExtension.IsHarmful() EffectTypeExtension.IsHealing() EffectTypeExtension.IsNegative() EffectTypeExtension.IsPositive() EffectTypeExtension.IsMovement() EffectTypeExtension.IsDisplayed() EffectTypeExtension.GetCategories() ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.ElevatorType.html": {
    "href": "api/Exiled.API.Enums.ElevatorType.html",
    "title": "Enum ElevatorType | EXILED Docs",
    "keywords": "Enum ElevatorType The unique type of elevator. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum ElevatorType : byte Fields Name Description GateA Entrance Gate A elevator. GateB Entrance Gate B elevator. LczA Light Containment Zone checkpoint A elevator. LczB Light Containment Zone checkpoint B elevator. Nuke Heavy Containment Zone Nuke elevator. Scp049 Heavy Containment Zone SCP-049 elevator. Unknown Unknown elevator Type. See Also Type Get(ElevatorType) Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.EnvironmentType.html": {
    "href": "api/Exiled.API.Enums.EnvironmentType.html",
    "title": "Enum EnvironmentType | EXILED Docs",
    "keywords": "Enum EnvironmentType A set of environment types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum EnvironmentType Fields Name Description Development The development environment, for developers. Production The production environment, for the public. ProductionDebug The Production environemnt, for public, with debug. Ptb The ptb environment, for Public Test Builds. Testing The testing environment, for testing things. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.FirearmType.html": {
    "href": "api/Exiled.API.Enums.FirearmType.html",
    "title": "Enum FirearmType | EXILED Docs",
    "keywords": "Enum FirearmType Represents a firearm. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum FirearmType Fields Name Description AK Represents the ItemType.GunAK . Com15 Represents the ItemType.GunCOM15 . Com18 Represents the ItemType.GunCOM18 . Com45 Represents the ItemType.GunCom45 . Crossvec Represents the ItemType.GunCrossvec . E11SR Represents the ItemType.GunE11SR . FSP9 Represents the ItemType.GunFSP9 . Logicer Represents the ItemType.GunLogicer . None Not a firearm. ParticleDisruptor Represents the ItemType.ParticleDisruptor . Revolver Represents the ItemType.GunRevolver . Shotgun Represents the ItemType.GunShotgun . See Also GetAttachmentIdentifiers ( FirearmType , System.UInt32 ) GetBaseCode ( FirearmType ) GetFirearmType(ItemType) GetItemType ( FirearmType ) GetMaxAmmo ( FirearmType ) GetWeaponAmmoType ( FirearmType ) TryGetAttachments ( FirearmType , System.UInt32 , System.Collections.Generic.IEnumerable < AttachmentIdentifier >) FirearmType Extension Methods ItemExtensions.GetMaxAmmo() ItemExtensions.GetWeaponAmmoType() ItemExtensions.GetItemType() ItemExtensions.GetAttachmentIdentifiers(UInt32) ItemExtensions.TryGetAttachments(UInt32, IEnumerable<AttachmentIdentifier>) ItemExtensions.GetBaseCode() ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.GeneratorState.html": {
    "href": "api/Exiled.API.Enums.GeneratorState.html",
    "title": "Enum GeneratorState | EXILED Docs",
    "keywords": "Enum GeneratorState Represents the state of a Generator . Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax [Flags] public enum GeneratorState : byte Fields Name Description Activating Generator is activating. Engaged Generator is engaged. None None. Open Generator is open. Unlocked Generator is unlocked. See Also State Get(GeneratorState) Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.GlassType.html": {
    "href": "api/Exiled.API.Enums.GlassType.html",
    "title": "Enum GlassType | EXILED Docs",
    "keywords": "Enum GlassType Unique identifier for the different types of Window. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum GlassType Fields Name Description GR18 Represents all the Window in LczGlassBox . HczEzCheckpointA Represents all the Window in HczEzCheckpointA . HczEzCheckpointB Represents all the Window in HczEzCheckpointB . MicroHid Represents all the Window in HczHid . Plants Represents all the Window in LczPlants . Scp049 Represents all the Window in Hcz049 . Scp079 Represents all the Window in Hcz079 . Scp079Trigger Represents the ActivatorWindow . Scp330 Represents all the Window in Lcz330 . TestRoom Represents all the Window in HczTestRoom . Unknown Represents an unknown Window. See Also Type Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.HotkeyButton.html": {
    "href": "api/Exiled.API.Enums.HotkeyButton.html",
    "title": "Enum HotkeyButton | EXILED Docs",
    "keywords": "Enum HotkeyButton Hotkey button types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum HotkeyButton Fields Name Description Grenade The hotkey button for selecting the grenade. Keycard The hotkey button for selecting the keycard. Medical The hotkey button for selecting the medical item. PrimaryFirearm The hotkey button for selecting the primary firearm. SecondaryFirearm The hotkey button for selecting the secondary firearm. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.html": {
    "href": "api/Exiled.API.Enums.html",
    "title": "Namespace Exiled.API.Enums | EXILED Docs",
    "keywords": "Namespace Exiled.API.Enums Enums AdminToyType Unique identifier for the different types of admin toys. AmmoType Ammo types present in the game. AuthenticationType Players authentication types. BloodType Unique identifier for the different types of blood decals. CameraType Unique identifier for the different types of SCP-079 cameras. ConfigType The different types of configuration files distribution. DamageType Identifiers for types of damage. DoorBeepType Door beep types. DoorLockType All possible door locks. DoorType Unique identifier for the different types of doors. EffectCategory An enum which represents the categories of an effect. EffectType Status effects as enum. ElevatorType The unique type of elevator. EnvironmentType A set of environment types. FirearmType Represents a firearm. GeneratorState Represents the state of a Generator . GlassType Unique identifier for the different types of Window. HotkeyButton Hotkey button types. KeycardPermissions The types of permissions assigned to keycards. LeadingTeam The team that is currently leading the round. PingType Enum that represents the type of SCP-079 ping. PluginPriority Provides simple and readable plugin priority values. ProjectileType Projectile types. RadioRange All possible Radio ranges. ReservedSlotEventResult Result for ReservedSlots event. RespawnEffectType Layers game respawn effects. RoomType Unique identifier for the different types of rooms. ShootingTargetButton Possible shooting target buttons. ShootingTargetType Shooting target types present in the game. Side In which side a certain PlayerRoles.RoleTypeId belongs. SpawnLocationType All of the valid spawn location types. SpawnReason Possible spawn reasons. ThrowRequest Possible throwable throw types. UsableRippleType All RippleTriggers usable in the game. WarheadStatus All the available warhead statuses. ZoneType Facility zone types."
  },
  "api/Exiled.API.Enums.KeycardPermissions.html": {
    "href": "api/Exiled.API.Enums.KeycardPermissions.html",
    "title": "Enum KeycardPermissions | EXILED Docs",
    "keywords": "Enum KeycardPermissions The types of permissions assigned to keycards. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax [Flags] public enum KeycardPermissions Fields Name Description AlphaWarhead Opens the Alpha Warhead detonation room on surface. ArmoryLevelOne Checkpoints , Opens Light Containment armory. ArmoryLevelThree ArmoryLevelTwo , Intercom , Opens MicroHID room. ArmoryLevelTwo ArmoryLevelOne , ExitGates , Opens Heavy Containment armories. Checkpoints Opens checkpoints. ContainmentLevelOne Opens Scp914Gate . ContainmentLevelThree ContainmentLevelTwo , Intercom , AlphaWarhead . ContainmentLevelTwo ContainmentLevelOne , Checkpoints . ExitGates Opens Gate A and Gate B . Intercom Opens the Intercom door . None No permissions. ScpOverride Checkpoints . See Also KeycardPermissions SetPermissionFlag(KeycardPermissions, Boolean) Permissions Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.LeadingTeam.html": {
    "href": "api/Exiled.API.Enums.LeadingTeam.html",
    "title": "Enum LeadingTeam | EXILED Docs",
    "keywords": "Enum LeadingTeam The team that is currently leading the round. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum LeadingTeam : byte Fields Name Description Anomalies Represents the SCP team. ChaosInsurgency Represents the Class-D and Chaos Insurgency team. Draw Represents a draw. FacilityForces Represents the Scientists, Guards, and NTF team. See Also GetLeadingTeam(Team) LeadingTeam Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.PingType.html": {
    "href": "api/Exiled.API.Enums.PingType.html",
    "title": "Enum PingType | EXILED Docs",
    "keywords": "Enum PingType Enum that represents the type of SCP-079 ping. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum PingType : byte Fields Name Description Default Represents a general ping. Door Represents a door ping. Elevator Represents an elevator ping. Generator Represents a generator ping. Human Represents a human ping. MicroHid Represents a Micro-HID ping. Projectile Represents a projectile ping. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.PluginPriority.html": {
    "href": "api/Exiled.API.Enums.PluginPriority.html",
    "title": "Enum PluginPriority | EXILED Docs",
    "keywords": "Enum PluginPriority Provides simple and readable plugin priority values. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum PluginPriority Fields Name Description Default First Execute the plugin first, before other ones. High Higher plugin priority. Higher Higher plugin priority. Highest Last Execute the plugin last, after other ones. Low Low plugin priority. Lower Default plugin priority. Lowest Medium Medium plugin priority. See Also Priority Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.ProjectileType.html": {
    "href": "api/Exiled.API.Enums.ProjectileType.html",
    "title": "Enum ProjectileType | EXILED Docs",
    "keywords": "Enum ProjectileType Projectile types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum ProjectileType Fields Name Description Flashbang Flashbang. Used by ItemType.GrenadeFlash . FragGrenade Frag grenade. Used by ItemType.GrenadeHE . None Not a projectile. Scp018 SCP-018 ball. Used by ItemType.SCP018 . Scp2176 SCP-2176 lightbulb. Used by ItemType.SCP2176 . See Also GetItemType ( ProjectileType ) GetProjectileType(ItemType) Extension Methods ItemExtensions.GetItemType() ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.RadioRange.html": {
    "href": "api/Exiled.API.Enums.RadioRange.html",
    "title": "Enum RadioRange | EXILED Docs",
    "keywords": "Enum RadioRange All possible Radio ranges. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum RadioRange : byte Fields Name Description Long A longer range with increased battery usage. Medium The standard, default range. Short The shortest range with the least battery usage. Ultra The longest range with the most battery usage. See Also Range Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.ReservedSlotEventResult.html": {
    "href": "api/Exiled.API.Enums.ReservedSlotEventResult.html",
    "title": "Enum ReservedSlotEventResult | EXILED Docs",
    "keywords": "Enum ReservedSlotEventResult Result for ReservedSlots event. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum ReservedSlotEventResult Fields Name Description AllowConnectionUnconditionally Bypass the reserved slots system and allow the connection unconditionally. CannotUseReservedSlots Override: player doesn't have a reserved slot. CanUseReservedSlots Override: player has a reserved slot. UseBaseGameSystem Don't override the base game decision. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.RespawnEffectType.html": {
    "href": "api/Exiled.API.Enums.RespawnEffectType.html",
    "title": "Enum RespawnEffectType | EXILED Docs",
    "keywords": "Enum RespawnEffectType Layers game respawn effects. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum RespawnEffectType : byte Fields Name Description PlayChaosInsurgencyMusic Plays the ChaosInsurgency music to alive PlayerRoles.RoleTypeId.ClassD and ChaosInsurgency . SummonChaosInsurgencyVan Summons the ChaosInsurgency van. SummonNtfChopper Summons the NTF chopper. See Also PlayEffect(RespawnEffectType) PlayEffects(RespawnEffectType[]) Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.RoomType.html": {
    "href": "api/Exiled.API.Enums.RoomType.html",
    "title": "Enum RoomType | EXILED Docs",
    "keywords": "Enum RoomType Unique identifier for the different types of rooms. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum RoomType Fields Name Description EzCafeteria Entrance Cafeteria Room. EzCheckpointHallway Entrance Room before Checkpoint. EzCollapsedTunnel Entrance Red Collapsed Tunnel Room. EzConference Entrance |-Shaped Dr.L Room. EzCrossing Entrance X-Shaped Room. EzCurve Entrance L-Shaped Room. EzDownstairsPcs Entrance PC Room With Downstairs. EzGateA Entrance Gate A Room. EzGateB Entrance Gate B Room. EzIntercom Entrance Intercom Room. EzPcs Entrance PC Room. EzShelter Entrance Shelter Room. EzStraight Entrance |-Shaped Room EzTCross Entrance T-Shaped Room. EzUpstairsPcs Entrance PC Room With Upstairs. EzVent Entrance Red Vent Room. Hcz049 Heavy Containment SCP-049 Room. Hcz079 Heavy Containment SCP-079 Room. Hcz096 Heavy Containment SCP-096 Room. Hcz106 Heavy Containment SCP-106 Room. Hcz939 Heavy Containment SCP-939 Room. HczArmory Heavy Containment T-Shaped Armory Room. HczCrossing Heavy Containment X-Shaped Room. HczCurve Heavy Containment L-Shaped Room. HczElevatorA Heavy Containment Elevator System A Room. HczElevatorB Heavy Containment Elevator System B Room. HczEzCheckpointA Heavy Containment Entrance Checkpoint A Room. HczEzCheckpointB Heavy Containment Entrance Checkpoint B Room. HczHid Heavy Containment HID-Spawn Room. HczNuke Heavy Containment Nuke Room. HczServers Heavy Containment Servers Room. HczStraight Heavy Containment |-Shaped Room. HczTCross Heavy Containment T-Shaped Room. HczTesla Heavy Containment Tesla Room. HczTestRoom Heavy Containment Test Room. Lcz012 Lower Containment SCP-012 Room. Lcz173 Lower Containment SCP-173 Room. Lcz330 Lower Containment SCP-330 Room. Lcz914 Lower Containment SCP-914 Room. LczAirlock Lower Containment Airlock Room. LczArmory Lower Containment Armory. LczCafe Lower Containment Cafe Room. LczCheckpointA Lower Containment Checkpoint A Room. LczCheckpointB Lower Containment Checkpoint B Room. LczClassDSpawn Lower Containment Class-D Spawn Room. LczCrossing Lower Containment X-Shaped Room. LczCurve Lower Containment L-Shaped Room. LczGlassBox Lower Containment Glass Box Room. LczPlants Lower Containment T-Shaped Plants Room. LczStraight Lower Containment |-Shaped Room. LczTCross Lower Containment T-Shaped Room. LczToilets Lower Containment Toilets Room. Pocket Pocket Dimension. Surface The Surface. Unknown Unknown Room Type. See Also Type Get(RoomType) Extension Methods ReflectionExtensions.CopyProperties(Object) RoomExtensions.IsGate() RoomExtensions.IsCheckpoint() RoomExtensions.IsLczCheckpoint() RoomExtensions.IsHczCheckpoint() RoomExtensions.IsScp()"
  },
  "api/Exiled.API.Enums.ShootingTargetButton.html": {
    "href": "api/Exiled.API.Enums.ShootingTargetButton.html",
    "title": "Enum ShootingTargetButton | EXILED Docs",
    "keywords": "Enum ShootingTargetButton Possible shooting target buttons. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum ShootingTargetButton Fields Name Description DecreaseHp Decrease HP button. DecreaseResetTime Decrease reset time button. IncreaseHp Increase HP button. IncreaseResetTime Increase reset time button. Remove Remove button. Reset Reset button. ToggleSync Toggle sync mode button. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.ShootingTargetType.html": {
    "href": "api/Exiled.API.Enums.ShootingTargetType.html",
    "title": "Enum ShootingTargetType | EXILED Docs",
    "keywords": "Enum ShootingTargetType Shooting target types present in the game. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum ShootingTargetType Fields Name Description Binary Binary target. ClassD D-Class target. Sport Radial sport target. Unknown Unknown target. See Also Type Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.Side.html": {
    "href": "api/Exiled.API.Enums.Side.html",
    "title": "Enum Side | EXILED Docs",
    "keywords": "Enum Side In which side a certain PlayerRoles.RoleTypeId belongs. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum Side Fields Name Description ChaosInsurgency Chaos Insurgency team. Contains PlayerRoles.RoleTypeId.ClassD , PlayerRoles.RoleTypeId.ChaosConscript , PlayerRoles.RoleTypeId.ChaosRepressor , PlayerRoles.RoleTypeId.ChaosRifleman and PlayerRoles.RoleTypeId.ChaosMarauder . Mtf Mobile Task Forces team. Contains PlayerRoles.RoleTypeId.Scientist , PlayerRoles.RoleTypeId.FacilityGuard , PlayerRoles.RoleTypeId.NtfPrivate , PlayerRoles.RoleTypeId.NtfSergeant , PlayerRoles.RoleTypeId.NtfCaptain and PlayerRoles.RoleTypeId.NtfSpecialist . None No team. Same as PlayerRoles.Team.Dead . Scp SCP team. Same as PlayerRoles.Team.SCPs . Contains all SCP-related roles: PlayerRoles.RoleTypeId.Scp049 , PlayerRoles.RoleTypeId.Scp0492 , PlayerRoles.RoleTypeId.Scp079 , PlayerRoles.RoleTypeId.Scp096 , PlayerRoles.RoleTypeId.Scp106 , PlayerRoles.RoleTypeId.Scp173 , and PlayerRoles.RoleTypeId.Scp939 . Tutorial Tutorial team. Contains PlayerRoles.RoleTypeId.Tutorial . Same as PlayerRoles.Team.OtherAlive . See Also GetSide(RoleTypeId) GetSide(Team) Get(Side) AliveSides Side Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.SpawnLocationType.html": {
    "href": "api/Exiled.API.Enums.SpawnLocationType.html",
    "title": "Enum SpawnLocationType | EXILED Docs",
    "keywords": "Enum SpawnLocationType All of the valid spawn location types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum SpawnLocationType Fields Name Description Inside012 The inside of 012's hallway door. Inside012Bottom The inside of the locked door leaving to SCP-012's room. Inside012Locker The inside of the locked 012 armory door. Inside049Armory The inside of SCP-049's Armory room. Inside079First Inside the first SCP-079 gate. Inside079Secondary The inside of the inner SCP-079 door. Inside096 The inside of SCP-096's locked room behind its spawn. Inside173Armory The inside of the armory next to SCP-173's spawn. Inside173Bottom The inside of the door at the bottom of SCP-173's stairs. Inside173Connector On the side closest to SCP-173's spawn, on the top of the stairs. Inside173Gate Inside SCP-173's gate. Inside914 Just inside of SCP-914. InsideEscapePrimary Inside the first Escape door. InsideEscapeSecondary Inside the second Escape door. InsideGateA Inside the Gate-A room. InsideGateB Inside the Gate-B room. InsideGr18 Inside the GR-18 door. InsideHczArmory Inside the T-Junction HCZ Armory. InsideHid Inside the Micro-HID room. InsideHidLeft Just inside the left door next to Micro-HID room. InsideHidRight Just inside the right door next to Micro-HID room. InsideIntercom Just inside the Intercom door. InsideLczArmory Inside the LCZ Armory. InsideLczCafe Inside the LCZ office room with computers. InsideLczWc Just inside the LCZ WC door. InsideLocker Inside a random locker on the map. InsideNukeArmory Inside the Nuke armory. InsideServersBottom Just inside the door at the bottom of the server's room. InsideSurfaceNuke Inside the surface nuke room. Extension Methods ReflectionExtensions.CopyProperties(Object) SpawnExtensions.GetDoor() SpawnExtensions.GetPosition() SpawnExtensions.GetDoorName()"
  },
  "api/Exiled.API.Enums.SpawnReason.html": {
    "href": "api/Exiled.API.Enums.SpawnReason.html",
    "title": "Enum SpawnReason | EXILED Docs",
    "keywords": "Enum SpawnReason Possible spawn reasons. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum SpawnReason : byte Fields Name Description Destroyed The user will be destroyed. Died The player has died. Escaped The player has escaped. ForceClass The player's role was changed by an admin command or plugin. LateJoin The player joined and the round recently started. None No reason specified. Respawn The player was dead and is respawning. Revived The player was revived by SCP-049. RoundStart The round has just started. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.ThrowRequest.html": {
    "href": "api/Exiled.API.Enums.ThrowRequest.html",
    "title": "Enum ThrowRequest | EXILED Docs",
    "keywords": "Enum ThrowRequest Possible throwable throw types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum ThrowRequest Fields Name Description BeginThrow Requesting to begin throwing a throwable item. CancelThrow Requesting to cancel a throw. FullForceThrow Requesting to confirm a strong throw. WeakThrow Requesting to confirm a weak throw. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.UsableRippleType.html": {
    "href": "api/Exiled.API.Enums.UsableRippleType.html",
    "title": "Enum UsableRippleType | EXILED Docs",
    "keywords": "Enum UsableRippleType All RippleTriggers usable in the game. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum UsableRippleType Fields Name Description FireArm The FireArm Ripple. Footstep The Footstep Ripple. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.WarheadStatus.html": {
    "href": "api/Exiled.API.Enums.WarheadStatus.html",
    "title": "Enum WarheadStatus | EXILED Docs",
    "keywords": "Enum WarheadStatus All the available warhead statuses. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax public enum WarheadStatus Fields Name Description Armed The warhead is armed. Detonated The warhead has detonated. InProgress The warhead detonation is in progress. NotArmed The warhead is not armed. See Also Status Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Enums.ZoneType.html": {
    "href": "api/Exiled.API.Enums.ZoneType.html",
    "title": "Enum ZoneType | EXILED Docs",
    "keywords": "Enum ZoneType Facility zone types. Namespace : Exiled.API.Enums Assembly : Exiled.API.dll Syntax [Flags] public enum ZoneType Fields Name Description Entrance The Entrance Zone. HeavyContainment The Heavy Containment Zone. LightContainment The Light Containment Zone. Other An unknown type of zone. Surface The Surface Zone. Unspecified An unspecified zone. See Also Zone Zone Zone Zone Random(ZoneType, Boolean) Random(ZoneType) TurnOffAllLights(Single, ZoneType) TurnOffAllLights(Single, IEnumerable<ZoneType>) Extension Methods ReflectionExtensions.CopyProperties(Object) RoomExtensions.GetZone()"
  },
  "api/Exiled.API.Extensions.DamageTypeExtensions.html": {
    "href": "api/Exiled.API.Extensions.DamageTypeExtensions.html",
    "title": "Class DamageTypeExtensions | EXILED Docs",
    "keywords": "Class DamageTypeExtensions A set of extensions for DamageType . Inheritance System.Object DamageTypeExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class DamageTypeExtensions Properties | Improve this Doc View Source ItemConversion Gets conversion information between ItemType s and DamageType s. Declaration public static IReadOnlyDictionary<ItemType, DamageType> ItemConversion { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < ItemType , DamageType > | Improve this Doc View Source TranslationConversion Gets conversion information between PlayerStatsSystem.DeathTranslation s and DamageType s. Declaration public static IReadOnlyDictionary<DeathTranslation, DamageType> TranslationConversion { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < PlayerStatsSystem.DeathTranslation , DamageType > | Improve this Doc View Source TranslationIdConversion Gets conversion information between PlayerStatsSystem.DeathTranslation.Id s and DamageType s. Declaration public static IReadOnlyDictionary<byte, DamageType> TranslationIdConversion { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < System.Byte , DamageType > Methods | Improve this Doc View Source GetDamageType(DamageHandlerBase) Gets the DamageType of an PlayerStatsSystem.DamageHandlerBase s. Declaration public static DamageType GetDamageType(DamageHandlerBase damageHandlerBase) Parameters Type Name Description PlayerStatsSystem.DamageHandlerBase damageHandlerBase The DamageHandler to convert. Returns Type Description DamageType The DamageType of the PlayerStatsSystem.DamageHandlerBase . | Improve this Doc View Source IsScp(DamageType, Boolean) Check if a damage type is caused by SCP. Declaration public static bool IsScp(this DamageType type, bool checkItems = true) Parameters Type Name Description DamageType type The damage type to be checked. System.Boolean checkItems Indicates whether or not the SCP-items damage types should be taken into account. Returns Type Description System.Boolean Returns whether or not the DamageType is caused by SCP. | Improve this Doc View Source IsStatusEffect(DamageType) Check if a damage type is caused by status effect. Declaration public static bool IsStatusEffect(this DamageType type) Parameters Type Name Description DamageType type The damage type to be checked. Returns Type Description System.Boolean Returns whether or not the DamageType is caused by status effect. | Improve this Doc View Source IsWeapon(DamageType, Boolean) Check if a damage type is caused by weapon. Declaration public static bool IsWeapon(this DamageType type, bool checkMicro = true) Parameters Type Name Description DamageType type The damage type to be checked. System.Boolean checkMicro Indicates whether or not the MicroHid damage type should be taken into account. Returns Type Description System.Boolean Returns whether or not the DamageType is caused by weapon."
  },
  "api/Exiled.API.Extensions.DoorTypeExtensions.html": {
    "href": "api/Exiled.API.Extensions.DoorTypeExtensions.html",
    "title": "Class DoorTypeExtensions | EXILED Docs",
    "keywords": "Class DoorTypeExtensions A set of extensions for DoorType . Inheritance System.Object DoorTypeExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class DoorTypeExtensions Methods | Improve this Doc View Source IsCheckpoint(DoorType) Checks if a door type is a checkpoint. Declaration public static bool IsCheckpoint(this DoorType door) Parameters Type Name Description DoorType door The door to be checked. Returns Type Description System.Boolean Returns whether the DoorType is a checkpoint or not. | Improve this Doc View Source IsElevator(DoorType) Checks if a door type is an elevator. Declaration public static bool IsElevator(this DoorType door) Parameters Type Name Description DoorType door The door to be checked. Returns Type Description System.Boolean Returns whether the DoorType is an elevator or not. | Improve this Doc View Source IsGate(DoorType) Checks if a door type is a gate. Declaration public static bool IsGate(this DoorType door) Parameters Type Name Description DoorType door The door to be checked. Returns Type Description System.Boolean Returns whether the DoorType is a gate or not."
  },
  "api/Exiled.API.Extensions.EffectTypeExtension.html": {
    "href": "api/Exiled.API.Extensions.EffectTypeExtension.html",
    "title": "Class EffectTypeExtension | EXILED Docs",
    "keywords": "Class EffectTypeExtension Contains an extension method to get System.Type from EffectType . Inheritance System.Object EffectTypeExtension Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class EffectTypeExtension Methods | Improve this Doc View Source GetCategories(EffectType) Returns the EffectCategory of the given effect . Declaration public static EffectCategory GetCategories(this EffectType effect) Parameters Type Name Description EffectType effect The EffectType . Returns Type Description EffectCategory The EffectCategory representing the effect. | Improve this Doc View Source IsDisplayed(EffectType) Returns whether or not the provided effect is displayed to spectators as text. Declaration public static bool IsDisplayed(this EffectType effect) Parameters Type Name Description EffectType effect The EffectType . Returns Type Description System.Boolean Whether or not the effect is displayed to spectators as text. | Improve this Doc View Source IsHarmful(EffectType) Returns whether or not the provided effect drains health over time. Declaration public static bool IsHarmful(this EffectType effect) Parameters Type Name Description EffectType effect The EffectType . Returns Type Description System.Boolean Whether or not the effect drains health over time. See Also IsHealing(EffectType) | Improve this Doc View Source IsHealing(EffectType) Returns whether or not the provided effect heals a player. Declaration public static bool IsHealing(this EffectType effect) Parameters Type Name Description EffectType effect The EffectType . Returns Type Description System.Boolean Whether or not the effect heals. See Also IsHarmful(EffectType) | Improve this Doc View Source IsMovement(EffectType) Returns whether or not the provided effect affects the player's movement speed. Declaration public static bool IsMovement(this EffectType effect) Parameters Type Name Description EffectType effect The EffectType . Returns Type Description System.Boolean Whether or not the effect modifies the player's movement speed. | Improve this Doc View Source IsNegative(EffectType) Returns whether or not the provided effect is a negative effect. Declaration public static bool IsNegative(this EffectType effect) Parameters Type Name Description EffectType effect The EffectType . Returns Type Description System.Boolean Whether or not the effect is a negative effect. See Also IsHarmful(EffectType) | Improve this Doc View Source IsPositive(EffectType) Returns whether or not the provided effect is a positive effect. Declaration public static bool IsPositive(this EffectType effect) Parameters Type Name Description EffectType effect The EffectType . Returns Type Description System.Boolean Whether or not the effect is a positive effect. See Also IsHealing(EffectType) | Improve this Doc View Source Type(EffectType) Gets an instance of System.Type points to an effect. Declaration public static Type Type(this EffectType effect) Parameters Type Name Description EffectType effect The EffectType enum. Returns Type Description System.Type The System.Type ."
  },
  "api/Exiled.API.Extensions.html": {
    "href": "api/Exiled.API.Extensions.html",
    "title": "Namespace Exiled.API.Extensions | EXILED Docs",
    "keywords": "Namespace Exiled.API.Extensions Classes DamageTypeExtensions A set of extensions for DamageType . DoorTypeExtensions A set of extensions for DoorType . EffectTypeExtension Contains an extension method to get System.Type from EffectType . ItemExtensions A set of extensions for ItemType . MirrorExtensions A set of extensions for Mirror Networking. ReflectionExtensions A set of extensions for System.Type . RoleExtensions A set of extensions for PlayerRoles.RoleTypeId . RoomExtensions A set of extensions for RoomType and ZoneType . SpawnExtensions A set of extensions for SpawnLocationType . StringExtensions A set of extensions for System.String . UserGroupExtensions Contains a useful extension to compare two UserGroup 's."
  },
  "api/Exiled.API.Extensions.ItemExtensions.html": {
    "href": "api/Exiled.API.Extensions.ItemExtensions.html",
    "title": "Class ItemExtensions | EXILED Docs",
    "keywords": "Class ItemExtensions A set of extensions for ItemType . Inheritance System.Object ItemExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class ItemExtensions Methods | Improve this Doc View Source GetAmmoType(ItemType) Converts a valid ammo ItemType into an AmmoType . Declaration public static AmmoType GetAmmoType(this ItemType type) Parameters Type Name Description ItemType type The ItemType to convert. Returns Type Description AmmoType The ammo type of the given item type. | Improve this Doc View Source GetAttachmentIdentifiers(FirearmType, UInt32) Gets all AttachmentIdentifier s present on a FirearmType . Declaration public static IEnumerable<AttachmentIdentifier> GetAttachmentIdentifiers(this FirearmType type, uint code) Parameters Type Name Description FirearmType type The FirearmType to iterate over. System.UInt32 code The System.UInt32 value which represents the attachments code to check. Returns Type Description System.Collections.Generic.IEnumerable < AttachmentIdentifier > A System.Collections.Generic.IEnumerable<T> of AttachmentIdentifier value which represents all the attachments present on the specified ItemType . | Improve this Doc View Source GetAttachmentsCode(IEnumerable<AttachmentIdentifier>) Gets the value resulting from the sum of all elements within a specific System.Collections.Generic.IEnumerable<T> of AttachmentIdentifier . Declaration public static uint GetAttachmentsCode(this IEnumerable<AttachmentIdentifier> identifiers) Parameters Type Name Description System.Collections.Generic.IEnumerable < AttachmentIdentifier > identifiers The System.Collections.Generic.IEnumerable<T> of AttachmentIdentifier to compute. Returns Type Description System.UInt32 A System.UInt32 value that represents the attachments code. | Improve this Doc View Source GetBaseCode(FirearmType) Gets the base code of the specified FirearmType . Declaration public static uint GetBaseCode(this FirearmType type) Parameters Type Name Description FirearmType type The FirearmType to check. Returns Type Description System.UInt32 The corresponding base code. | Improve this Doc View Source GetFirearmType(ItemType) Converts a valid firearm ItemType into a FirearmType . Declaration public static FirearmType GetFirearmType(this ItemType type) Parameters Type Name Description ItemType type The ItemType to convert. Returns Type Description FirearmType The firearm type of the given item. | Improve this Doc View Source GetItemBase(ItemType) Given an ItemType , returns the matching InventorySystem.Items.ItemBase . Declaration public static ItemBase GetItemBase(this ItemType type) Parameters Type Name Description ItemType type The ItemType . Returns Type Description InventorySystem.Items.ItemBase The InventorySystem.Items.ItemBase , or null if not found. | Improve this Doc View Source GetItemBase<T>(ItemType) Given an ItemType , returns the matching InventorySystem.Items.ItemBase , casted to T . Declaration public static T GetItemBase<T>(this ItemType type) where T : ItemBase Parameters Type Name Description ItemType type The ItemType . Returns Type Description T The InventorySystem.Items.ItemBase casted to T , or null if not found or couldn't be casted. Type Parameters Name Description T The type to cast the InventorySystem.Items.ItemBase to. | Improve this Doc View Source GetItemType(AmmoType) Converts an AmmoType into it's corresponding ItemType . Declaration public static ItemType GetItemType(this AmmoType type) Parameters Type Name Description AmmoType type The AmmoType to convert. Returns Type Description ItemType The Item type of the specified ammo. | Improve this Doc View Source GetItemType(FirearmType) Converts a FirearmType into it's corresponding ItemType . Declaration public static ItemType GetItemType(this FirearmType type) Parameters Type Name Description FirearmType type The FirearmType to convert. Returns Type Description ItemType The Item type of the specified firearm. | Improve this Doc View Source GetItemType(ProjectileType) Converts a ProjectileType into the corresponding ItemType . Declaration public static ItemType GetItemType(this ProjectileType type) Parameters Type Name Description ProjectileType type The ProjectileType to convert. Returns Type Description ItemType The Item type of the specified grenade. | Improve this Doc View Source GetItemTypes(IEnumerable<Item>) Converts a System.Collections.Generic.IEnumerable<T> of Item s into the corresponding System.Collections.Generic.IEnumerable<T> of ItemType s. Declaration public static IEnumerable<ItemType> GetItemTypes(this IEnumerable<Item> items) Parameters Type Name Description System.Collections.Generic.IEnumerable < Item > items The items to convert. Returns Type Description System.Collections.Generic.IEnumerable < ItemType > A new System.Collections.Generic.List<T> of ItemType s. | Improve this Doc View Source GetMaxAmmo(FirearmType) Gets the maximum ammo of a weapon. Declaration public static byte GetMaxAmmo(this FirearmType item) Parameters Type Name Description FirearmType item The weapon that you want to get maximum of. Returns Type Description System.Byte Returns the maximum. | Improve this Doc View Source GetProjectileType(ItemType) Converts a valid projectile ItemType into a ProjectileType . Declaration public static ProjectileType GetProjectileType(this ItemType type) Parameters Type Name Description ItemType type The ItemType to convert. Returns Type Description ProjectileType The projectile type of the given item type, or None if the provided item type is not a projectile. | Improve this Doc View Source GetWeaponAmmoType(FirearmType) Returns the AmmoType of the weapon is using. Declaration public static AmmoType GetWeaponAmmoType(this FirearmType type) Parameters Type Name Description FirearmType type The FirearmType to convert. Returns Type Description AmmoType The given weapon's AmmoType. | Improve this Doc View Source IsAmmo(ItemType) Check if an ItemType is an ammo. Declaration public static bool IsAmmo(this ItemType item) Parameters Type Name Description ItemType item The item to be checked. Returns Type Description System.Boolean Returns whether the ItemType is an ammo or not. | Improve this Doc View Source IsArmor(ItemType) Check if a ItemType is an armor item. Declaration public static bool IsArmor(this ItemType type) Parameters Type Name Description ItemType type The item to be checked. Returns Type Description System.Boolean Returns whether or not the ItemType is an armor. | Improve this Doc View Source IsKeycard(ItemType) Check if an ItemType is a keycard. Declaration public static bool IsKeycard(this ItemType type) Parameters Type Name Description ItemType type The item to be checked. Returns Type Description System.Boolean Returns whether or not the ItemType is a keycard. | Improve this Doc View Source IsMedical(ItemType) Check if an ItemType is a medical item. Declaration public static bool IsMedical(this ItemType type) Parameters Type Name Description ItemType type The item to be checked. Returns Type Description System.Boolean Returns whether or not the ItemType is a medical item. | Improve this Doc View Source IsScp(ItemType) Check if an ItemType is an SCP. Declaration public static bool IsScp(this ItemType type) Parameters Type Name Description ItemType type The item to be checked. Returns Type Description System.Boolean Returns whether or not the ItemType is an SCP. | Improve this Doc View Source IsThrowable(ItemType) Check if an ItemType is a throwable item. Declaration public static bool IsThrowable(this ItemType type) Parameters Type Name Description ItemType type The item to be checked. Returns Type Description System.Boolean Returns whether or not the ItemType is a throwable item. | Improve this Doc View Source IsUtility(ItemType) Check if an ItemType is a utility item. Declaration public static bool IsUtility(this ItemType type) Parameters Type Name Description ItemType type The item to be checked. Returns Type Description System.Boolean Returns whether or not the ItemType is an utilty item. | Improve this Doc View Source IsWeapon(ItemType, Boolean) Check if an ItemType is a weapon. Declaration public static bool IsWeapon(this ItemType type, bool checkMicro = true) Parameters Type Name Description ItemType type The item to be checked. System.Boolean checkMicro Indicates whether the MicroHID item should be taken into account or not. Returns Type Description System.Boolean Returns whether the ItemType is a weapon or not. | Improve this Doc View Source TryGetAttachments(FirearmType, UInt32, out IEnumerable<AttachmentIdentifier>) Tries to get all AttachmentIdentifier s present on a FirearmType . Declaration public static bool TryGetAttachments(this FirearmType type, uint code, out IEnumerable<AttachmentIdentifier> identifiers) Parameters Type Name Description FirearmType type The FirearmType to iterate over. System.UInt32 code The System.UInt32 value which represents the attachments code to check. System.Collections.Generic.IEnumerable < AttachmentIdentifier > identifiers The attachments present on the specified FirearmType . Returns Type Description System.Boolean true if the specified FirearmType is a weapon."
  },
  "api/Exiled.API.Extensions.MirrorExtensions.html": {
    "href": "api/Exiled.API.Extensions.MirrorExtensions.html",
    "title": "Class MirrorExtensions | EXILED Docs",
    "keywords": "Class MirrorExtensions A set of extensions for Mirror Networking. Inheritance System.Object MirrorExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class MirrorExtensions Properties | Improve this Doc View Source SendSpawnMessageMethodInfo Gets a NetworkServer.SendSpawnMessage's System.Reflection.MethodInfo . Declaration public static MethodInfo SendSpawnMessageMethodInfo { get; } Property Value Type Description System.Reflection.MethodInfo | Improve this Doc View Source SetDirtyBitsMethodInfo Gets a 's System.Reflection.MethodInfo . Declaration public static MethodInfo SetDirtyBitsMethodInfo { get; } Property Value Type Description System.Reflection.MethodInfo | Improve this Doc View Source SyncVarDirtyBits Gets a all DirtyBit System.UInt64 from StringExtensions (format:classname.methodname). Declaration public static ReadOnlyDictionary<string, ulong> SyncVarDirtyBits { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyDictionary < System.String , System.UInt64 > | Improve this Doc View Source WriterExtensions Gets System.Reflection.MethodInfo corresponding to System.Type . Declaration public static ReadOnlyDictionary<Type, MethodInfo> WriterExtensions { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyDictionary < System.Type , System.Reflection.MethodInfo > Methods | Improve this Doc View Source ChangeAppearance(Player, RoleTypeId) Change Player character model for appearance. It will continue until Player 's PlayerRoles.RoleTypeId changes. Declaration public static void ChangeAppearance(this Player player, RoleTypeId type) Parameters Type Name Description Player player Player to change. PlayerRoles.RoleTypeId type Model type. | Improve this Doc View Source EditNetworkObject(NetworkIdentity, Action<NetworkIdentity>) Edit Mirror.NetworkIdentity 's parameter and sync. Declaration public static void EditNetworkObject(NetworkIdentity identity, Action<NetworkIdentity> customAction) Parameters Type Name Description Mirror.NetworkIdentity identity Target object. System.Action < Mirror.NetworkIdentity > customAction Edit function. | Improve this Doc View Source MessageTranslated(Player, String, String, Boolean, Boolean, Boolean) Send CASSIE announcement with custom subtitles for translation that only Player can hear and see it. Declaration public static void MessageTranslated(this Player player, string words, string translation, bool makeHold = false, bool makeNoise = true, bool isSubtitles = true) Parameters Type Name Description Player player Target to send. System.String words The message to be reproduced. System.String translation The translation should be show in the subtitles. System.Boolean makeHold Same on MessageTranslated(String, String, Boolean, Boolean, Boolean) 's isHeld. System.Boolean makeNoise Same on MessageTranslated(String, String, Boolean, Boolean, Boolean) 's isNoisy. System.Boolean isSubtitles Same on MessageTranslated(String, String, Boolean, Boolean, Boolean) 's isSubtitles. | Improve this Doc View Source PlayBeepSound(Player) Plays a beep sound that only the target player can hear. Declaration public static void PlayBeepSound(this Player player) Parameters Type Name Description Player player Target to play sound to. | Improve this Doc View Source PlayCassieAnnouncement(Player, String, Boolean, Boolean, Boolean) Send CASSIE announcement that only Player can hear. Declaration public static void PlayCassieAnnouncement(this Player player, string words, bool makeHold = false, bool makeNoise = true, bool isSubtitles = false) Parameters Type Name Description Player player Target to send. System.String words Announcement words. System.Boolean makeHold Same on Message(String, Boolean, Boolean, Boolean) 's isHeld. System.Boolean makeNoise Same on Message(String, Boolean, Boolean, Boolean) 's isNoisy. System.Boolean isSubtitles Same on Message(String, Boolean, Boolean, Boolean) 's isSubtitles. | Improve this Doc View Source PlayGunSound(Player, Vector3, ItemType, Byte, Byte) Plays a gun sound that only the player can hear. Declaration public static void PlayGunSound(this Player player, Vector3 position, ItemType itemType, byte volume, byte audioClipId = 0) Parameters Type Name Description Player player Target to play. UnityEngine.Vector3 position Position to play on. ItemType itemType Weapon' sound to play. System.Byte volume Sound's volume to set. System.Byte audioClipId GunAudioMessage's audioClipId to set (default = 0). | Improve this Doc View Source ResyncSyncVar(NetworkIdentity, Type, String) Force resync to client's Mirror.SyncVarAttribute . Declaration public static void ResyncSyncVar(NetworkIdentity behaviorOwner, Type targetType, string propertyName) Parameters Type Name Description Mirror.NetworkIdentity behaviorOwner Mirror.NetworkIdentity of object that owns Mirror.NetworkBehaviour . System.Type targetType Mirror.NetworkBehaviour 's type. System.String propertyName Property name starting with Network. | Improve this Doc View Source SendFakeSyncObject(Player, NetworkIdentity, Type, Action<NetworkWriter>) Send fake values to client's Mirror.SyncObject . Declaration public static void SendFakeSyncObject(Player target, NetworkIdentity behaviorOwner, Type targetType, Action<NetworkWriter> customAction) Parameters Type Name Description Player target Target to send. Mirror.NetworkIdentity behaviorOwner Mirror.NetworkIdentity of object that owns Mirror.NetworkBehaviour . System.Type targetType Mirror.NetworkBehaviour 's type. System.Action < Mirror.NetworkWriter > customAction Custom writing action. Examples EffectOnlySCP207. MirrorExtensions.SendCustomSync(player, player.ReferenceHub.networkIdentity, typeof(PlayerEffectsController), (writer) => { writer.WriteUInt64(1ul); // DirtyObjectsBit writer.WriteUInt32(1); // DirtyIndexCount writer.WriteByte((byte)SyncList<byte>.Operation.OP_SET); // Operations writer.WriteUInt32(17); // EditIndex writer.WriteByte(1); // Value }); | Improve this Doc View Source SendFakeSyncVar(Player, NetworkIdentity, Type, String, Object) Send fake values to client's Mirror.SyncVarAttribute . Declaration public static void SendFakeSyncVar(this Player target, NetworkIdentity behaviorOwner, Type targetType, string propertyName, object value) Parameters Type Name Description Player target Target to send. Mirror.NetworkIdentity behaviorOwner Mirror.NetworkIdentity of object that owns Mirror.NetworkBehaviour . System.Type targetType Mirror.NetworkBehaviour 's type. System.String propertyName Property name starting with Network. System.Object value Value of send to target. | Improve this Doc View Source SendFakeTargetRpc(Player, NetworkIdentity, Type, String, Object[]) Send fake values to client's Mirror.ClientRpcAttribute . Declaration public static void SendFakeTargetRpc(Player target, NetworkIdentity behaviorOwner, Type targetType, string rpcName, params object[] values) Parameters Type Name Description Player target Target to send. Mirror.NetworkIdentity behaviorOwner Mirror.NetworkIdentity of object that owns Mirror.NetworkBehaviour . System.Type targetType Mirror.NetworkBehaviour 's type. System.String rpcName Property name starting with Rpc. System.Object [] values Values of send to target. | Improve this Doc View Source SetName(Player, Player, String) Sets DisplayNickname of a player that only the target player can see. Declaration public static void SetName(this Player target, Player player, string name) Parameters Type Name Description Player target Only this player can see the name changed. Player player Player that will desync the CustomName. System.String name Nickname to set. | Improve this Doc View Source SetPlayerInfoForTargetOnly(Player, Player, String) Set CustomInfo on the target player that only the player can see. Declaration public static void SetPlayerInfoForTargetOnly(this Player player, Player target, string info) Parameters Type Name Description Player player Only this player can see info. Player target Target to set info. System.String info Setting info. | Improve this Doc View Source SetRoomColorForTargetOnly(Room, Player, Color) Sets Color of a room that only the target player can see. Declaration public static void SetRoomColorForTargetOnly(this Room room, Player target, Color color) Parameters Type Name Description Room room Room to modify. Player target Only this player can see room color. UnityEngine.Color color Color to set. | Improve this Doc View Source SetRoomLightIntensityForTargetOnly(Room, Player, Single) Sets LightIntensity of a room that only the target player can see. Declaration public static void SetRoomLightIntensityForTargetOnly(this Room room, Player target, float multiplier) Parameters Type Name Description Room room Room to modify. Player target Only this player can see room color. System.Single multiplier Light intensity multiplier to set."
  },
  "api/Exiled.API.Extensions.ReflectionExtensions.html": {
    "href": "api/Exiled.API.Extensions.ReflectionExtensions.html",
    "title": "Class ReflectionExtensions | EXILED Docs",
    "keywords": "Class ReflectionExtensions A set of extensions for System.Type . Inheritance System.Object ReflectionExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class ReflectionExtensions Methods | Improve this Doc View Source CopyProperties(Object, Object) Copy all properties from the source class to the target one. Declaration public static void CopyProperties(this object target, object source) Parameters Type Name Description System.Object target The target object. System.Object source The source object to copy properties from. | Improve this Doc View Source InvokeStaticMethod(Type, String, Object[]) Invoke a static method. Declaration public static void InvokeStaticMethod(this Type type, string methodName, object[] param) Parameters Type Name Description System.Type type The method type. System.String methodName The method name. System.Object [] param The method parameters."
  },
  "api/Exiled.API.Extensions.RoleExtensions.html": {
    "href": "api/Exiled.API.Extensions.RoleExtensions.html",
    "title": "Class RoleExtensions | EXILED Docs",
    "keywords": "Class RoleExtensions A set of extensions for PlayerRoles.RoleTypeId . Inheritance System.Object RoleExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class RoleExtensions Methods | Improve this Doc View Source GetColor(RoleTypeId) Gets a PlayerRoles.RoleTypeId UnityEngine.Color . Declaration public static Color GetColor(this RoleTypeId roleType) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId to get the color of. Returns Type Description UnityEngine.Color The UnityEngine.Color of the role. | Improve this Doc View Source GetFullName(RoleTypeId) Gets the full name of the given PlayerRoles.RoleTypeId . Declaration public static string GetFullName(this RoleTypeId typeId) Parameters Type Name Description PlayerRoles.RoleTypeId typeId The PlayerRoles.RoleTypeId . Returns Type Description System.String The full name. | Improve this Doc View Source GetLeadingTeam(Team) Gets the LeadingTeam . Declaration public static LeadingTeam GetLeadingTeam(this Team team) Parameters Type Name Description PlayerRoles.Team team Team. Returns Type Description LeadingTeam LeadingTeam . | Improve this Doc View Source GetRandomSpawnLocation(RoleTypeId) Gets a random spawn point of a PlayerRoles.RoleTypeId . Declaration public static SpawnLocation GetRandomSpawnLocation(this RoleTypeId roleType) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId to get the spawn point from. Returns Type Description SpawnLocation Returns a SpawnLocation representing the spawn, or null if no spawns were found. | Improve this Doc View Source GetRoleBase(RoleTypeId) Gets the base PlayerRoles.PlayerRoleBase of the given PlayerRoles.RoleTypeId . Declaration public static PlayerRoleBase GetRoleBase(this RoleTypeId roleType) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId . Returns Type Description PlayerRoles.PlayerRoleBase The PlayerRoles.PlayerRoleBase . | Improve this Doc View Source GetSide(RoleTypeId) Gets a PlayerRoles.RoleTypeId Side . Declaration public static Side GetSide(this RoleTypeId roleType) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId to check the side of. Returns Type Description Side Side . | Improve this Doc View Source GetSide(Team) Gets a PlayerRoles.Team Side . Declaration public static Side GetSide(this Team team) Parameters Type Name Description PlayerRoles.Team team The PlayerRoles.Team to get the Side of. Returns Type Description Side Side . | Improve this Doc View Source GetStartingAmmo(RoleTypeId) Gets the starting ammo of a PlayerRoles.RoleTypeId . Declaration public static Dictionary<AmmoType, ushort> GetStartingAmmo(this RoleTypeId roleType) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId . Returns Type Description System.Collections.Generic.Dictionary < AmmoType , System.UInt16 > An System.Array of ItemType that the role receives on spawn. Will be empty for classes that do not spawn with ammo. | Improve this Doc View Source GetStartingInventory(RoleTypeId) Gets the starting items of a PlayerRoles.RoleTypeId . Declaration public static ItemType[] GetStartingInventory(this RoleTypeId roleType) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId . Returns Type Description ItemType [] An System.Array of ItemType that the role receives on spawn. Will be empty for classes that do not spawn with items. | Improve this Doc View Source GetTeam(RoleTypeId) Gets the PlayerRoles.Team of the given PlayerRoles.RoleTypeId . Declaration public static Team GetTeam(this RoleTypeId roleType) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId . Returns Type Description PlayerRoles.Team PlayerRoles.Team . | Improve this Doc View Source IsFpcRole(RoleTypeId) Checks whether a PlayerRoles.RoleTypeId is an PlayerRoles.FirstPersonControl.IFpcRole or not. Declaration public static bool IsFpcRole(this RoleTypeId roleType) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId . Returns Type Description System.Boolean Returns whether roleType is an PlayerRoles.FirstPersonControl.IFpcRole or not. | Improve this Doc View Source TryGetRoleBase(RoleTypeId, out PlayerRoleBase) Tries to get the base PlayerRoles.PlayerRoleBase of the given PlayerRoles.RoleTypeId . Declaration public static bool TryGetRoleBase(this RoleTypeId roleType, out PlayerRoleBase roleBase) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId . PlayerRoles.PlayerRoleBase roleBase The PlayerRoles.PlayerRoleBase to return. Returns Type Description System.Boolean The PlayerRoles.PlayerRoleBase ."
  },
  "api/Exiled.API.Extensions.RoomExtensions.html": {
    "href": "api/Exiled.API.Extensions.RoomExtensions.html",
    "title": "Class RoomExtensions | EXILED Docs",
    "keywords": "Class RoomExtensions A set of extensions for RoomType and ZoneType . Inheritance System.Object RoomExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class RoomExtensions Methods | Improve this Doc View Source GetZone(ZoneType) Converts the provided ZoneType into the corresponding MapGeneration.FacilityZone . Declaration public static FacilityZone GetZone(this ZoneType facility) Parameters Type Name Description ZoneType facility The ZoneType to convert. Returns Type Description MapGeneration.FacilityZone FacilityZone. | Improve this Doc View Source GetZone(FacilityZone) Converts the provided MapGeneration.FacilityZone into the corresponding ZoneType . Declaration public static ZoneType GetZone(this FacilityZone facility) Parameters Type Name Description MapGeneration.FacilityZone facility The MapGeneration.FacilityZone to convert. Returns Type Description ZoneType ZoneType. | Improve this Doc View Source IsCheckpoint(RoomType) Checks if a room type is a checkpoint. Declaration public static bool IsCheckpoint(this RoomType room) Parameters Type Name Description RoomType room The room to be checked. Returns Type Description System.Boolean Returns whether the RoomType is a checkpoint or not. | Improve this Doc View Source IsGate(RoomType) Checks if a room type is a gate. Declaration public static bool IsGate(this RoomType room) Parameters Type Name Description RoomType room The room to be checked. Returns Type Description System.Boolean Returns whether the RoomType is a gate or not. | Improve this Doc View Source IsHczCheckpoint(RoomType) Checks if a room type is a Hcz checkpoint. Declaration public static bool IsHczCheckpoint(this RoomType room) Parameters Type Name Description RoomType room The room to be checked. Returns Type Description System.Boolean Returns whether the RoomType is a Hcz checkpoint or not. | Improve this Doc View Source IsLczCheckpoint(RoomType) Checks if a room type is a Lcz checkpoint. Declaration public static bool IsLczCheckpoint(this RoomType room) Parameters Type Name Description RoomType room The room to be checked. Returns Type Description System.Boolean Returns whether the RoomType is a Lcz checkpoint or not. | Improve this Doc View Source IsScp(RoomType) Checks if a room type contains any SCP. Declaration public static bool IsScp(this RoomType room) Parameters Type Name Description RoomType room The room to be checked. Returns Type Description System.Boolean Returns whether the RoomType contains any SCP or not."
  },
  "api/Exiled.API.Extensions.SpawnExtensions.html": {
    "href": "api/Exiled.API.Extensions.SpawnExtensions.html",
    "title": "Class SpawnExtensions | EXILED Docs",
    "keywords": "Class SpawnExtensions A set of extensions for SpawnLocationType . Inheritance System.Object SpawnExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class SpawnExtensions Fields | Improve this Doc View Source ReversedLocations The names of spawn locations who's positions are on the opposite side of their door, and must be corrected. Declaration public static readonly SpawnLocationType[] ReversedLocations Field Value Type Description SpawnLocationType [] Methods | Improve this Doc View Source GetDoor(SpawnLocationType) Tries to get the UnityEngine.Transform of the door used for a specific SpawnLocationType . Declaration public static Transform GetDoor(this SpawnLocationType location) Parameters Type Name Description SpawnLocationType location The SpawnLocationType to check. Returns Type Description UnityEngine.Transform The UnityEngine.Transform used for that spawn location. Can be null . | Improve this Doc View Source GetDoorName(SpawnLocationType) The names of the doors attached to each spawn location. Declaration public static string GetDoorName(this SpawnLocationType spawnLocation) Parameters Type Name Description SpawnLocationType spawnLocation The SpawnLocationType . Returns Type Description System.String Returns the door name. | Improve this Doc View Source GetPosition(SpawnLocationType) Tries to get the UnityEngine.Vector3 used for a specific SpawnLocationType . Declaration public static Vector3 GetPosition(this SpawnLocationType location) Parameters Type Name Description SpawnLocationType location The SpawnLocationType to check. Returns Type Description UnityEngine.Vector3 The UnityEngine.Vector3 used for that spawn location. Can be UnityEngine.Vector3.zero ."
  },
  "api/Exiled.API.Extensions.StringExtensions.html": {
    "href": "api/Exiled.API.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | EXILED Docs",
    "keywords": "Class StringExtensions A set of extensions for System.String . Inheritance System.Object StringExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class StringExtensions Methods | Improve this Doc View Source ExtractCommand(String) Extract command name and arguments from a System.String . Declaration public static (string commandName, string[] arguments) ExtractCommand(this string commandLine) Parameters Type Name Description System.String commandLine The System.String to extract from. Returns Type Description System.ValueTuple < System.String , System.String []> Returns a System.ValueTuple containing the exctracted command name and arguments. | Improve this Doc View Source GetBefore(String, Char) Retrieves a string before a symbol from an input. Declaration public static string GetBefore(this string input, char symbol) Parameters Type Name Description System.String input The input. System.Char symbol The symbol. Returns Type Description System.String Substring before the symbol. | Improve this Doc View Source GetDistance(String, String) Compute the distance between two System.String . Declaration public static int GetDistance(this string firstString, string secondString) Parameters Type Name Description System.String firstString The first string to be compared. System.String secondString The second string to be compared. Returns Type Description System.Int32 Returns the distance between the two strings. | Improve this Doc View Source GetHashedUserId(String) Gets a SHA256 hash of a player's user id without the authentication. Declaration public static string GetHashedUserId(this string userId) Parameters Type Name Description System.String userId The user id. Returns Type Description System.String The hashed userid. | Improve this Doc View Source GetRawUserId(String) Gets the player's user id without the authentication. Declaration public static string GetRawUserId(this string userId) Parameters Type Name Description System.String userId The user id. Returns Type Description System.String Returns the raw user id. | Improve this Doc View Source RemoveBracketsOnEndOfName(String) Removes the prefab-generated brackets (#) on UnityEngine.GameObject names. Declaration public static string RemoveBracketsOnEndOfName(this string name) Parameters Type Name Description System.String name Name of the UnityEngine.GameObject . Returns Type Description System.String Name without brackets. | Improve this Doc View Source RemoveSpaces(String) Removes all space symbols from string. Declaration public static string RemoveSpaces(this string input) Parameters Type Name Description System.String input Input string. Returns Type Description System.String String without spaces. | Improve this Doc View Source SplitCamelCase(String) Splits camel case string to space-separated words. Ex: SomeCamelCase -> Some Camel Case. Declaration public static string SplitCamelCase(this string input) Parameters Type Name Description System.String input Camel case string. Returns Type Description System.String Splitted string. | Improve this Doc View Source ToSnakeCase(String, Boolean) Converts a System.String to snake_case convention. Declaration public static string ToSnakeCase(this string str, bool shouldReplaceSpecialChars = true) Parameters Type Name Description System.String str The string to be converted. System.Boolean shouldReplaceSpecialChars Indicates whether special chars has to be replaced or not. Returns Type Description System.String Returns the new snake_case string. | Improve this Doc View Source ToString<T>(IEnumerable<T>, Boolean) Converts an System.Collections.Generic.IEnumerable<T> into a string. Declaration public static string ToString<T>(this IEnumerable<T> enumerable, bool showIndex = true) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> enumerable The instance. System.Boolean showIndex Indicates whether the enumerator index should be shown or not. Returns Type Description System.String Returns the converted System.Collections.Generic.IEnumerable<T> . Type Parameters Name Description T The type of the IEnumerable."
  },
  "api/Exiled.API.Extensions.UserGroupExtensions.html": {
    "href": "api/Exiled.API.Extensions.UserGroupExtensions.html",
    "title": "Class UserGroupExtensions | EXILED Docs",
    "keywords": "Class UserGroupExtensions Contains a useful extension to compare two UserGroup 's. Inheritance System.Object UserGroupExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Extensions Assembly : Exiled.API.dll Syntax public static class UserGroupExtensions Methods | Improve this Doc View Source EqualsTo(UserGroup, UserGroup) Compares two UserGroup 's for equality. Declaration public static bool EqualsTo(this UserGroup this, UserGroup other) Parameters Type Name Description UserGroup this The first UserGroup . UserGroup other The second UserGroup . Returns Type Description System.Boolean true if they are equal; otherwise, false . | Improve this Doc View Source GetKey(UserGroup) Searches for a key of a group in the PermissionsHandler config. Declaration public static string GetKey(this UserGroup this) Parameters Type Name Description UserGroup this The UserGroup . Returns Type Description System.String The key of that group, or null if not found. | Improve this Doc View Source GetValue(String) Searches for a value of a group in the PermissionsHandler config. Declaration public static UserGroup GetValue(string groupName) Parameters Type Name Description System.String groupName The System.String . Returns Type Description UserGroup The value of that group, or null if not found."
  },
  "api/Exiled.API.Features.Attributes.CustomAbilityAttribute.html": {
    "href": "api/Exiled.API.Features.Attributes.CustomAbilityAttribute.html",
    "title": "Class CustomAbilityAttribute | EXILED Docs",
    "keywords": "Class CustomAbilityAttribute An attribute to easily manage CustomAbility initialization. Inheritance System.Object System.Attribute CustomAbilityAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Attributes Assembly : Exiled.API.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public sealed class CustomAbilityAttribute : Attribute, _Attribute Implements System.Runtime.InteropServices._Attribute Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Attributes.CustomItemAttribute.html": {
    "href": "api/Exiled.API.Features.Attributes.CustomItemAttribute.html",
    "title": "Class CustomItemAttribute | EXILED Docs",
    "keywords": "Class CustomItemAttribute An attribute to easily manage CustomItem initialization. Inheritance System.Object System.Attribute CustomItemAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Attributes Assembly : Exiled.API.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public sealed class CustomItemAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source CustomItemAttribute(ItemType) Initializes a new instance of the CustomItemAttribute class. Declaration public CustomItemAttribute(ItemType type) Parameters Type Name Description ItemType type The ItemType to serialize. Properties | Improve this Doc View Source ItemType Gets the attribute's ItemType . Declaration public ItemType ItemType { get; } Property Value Type Description ItemType Implements System.Runtime.InteropServices._Attribute Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Attributes.CustomRoleAttribute.html": {
    "href": "api/Exiled.API.Features.Attributes.CustomRoleAttribute.html",
    "title": "Class CustomRoleAttribute | EXILED Docs",
    "keywords": "Class CustomRoleAttribute An attribute to easily manage CustomRole initialization. Inheritance System.Object System.Attribute CustomRoleAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Attributes Assembly : Exiled.API.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public sealed class CustomRoleAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source CustomRoleAttribute(RoleTypeId) Initializes a new instance of the CustomRoleAttribute class. Declaration public CustomRoleAttribute(RoleTypeId type) Parameters Type Name Description PlayerRoles.RoleTypeId type The PlayerRoles.RoleTypeId to serialize. Properties | Improve this Doc View Source RoleTypeId Gets the attribute's PlayerRoles.RoleTypeId . Declaration public RoleTypeId RoleTypeId { get; } Property Value Type Description PlayerRoles.RoleTypeId Implements System.Runtime.InteropServices._Attribute Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Attributes.html": {
    "href": "api/Exiled.API.Features.Attributes.html",
    "title": "Namespace Exiled.API.Features.Attributes | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Attributes Classes CustomAbilityAttribute An attribute to easily manage CustomAbility initialization. CustomItemAttribute An attribute to easily manage CustomItem initialization. CustomRoleAttribute An attribute to easily manage CustomRole initialization. PatchGroupAttribute This attribute is used within Harmony patches and the relative annotations to define a target element. A target element can be a System.Type , langword_csharp_class or System.Reflection.MethodInfo . PatchGroupAttribute allows to define elements made for patching. A target-patching approach is useful to patch specific elements without having to directly patch everything without considering excluded elements. Target-patching also allows to emit patches without having to manually define and/or supply parameters and elements made for patching"
  },
  "api/Exiled.API.Features.Attributes.PatchGroupAttribute.html": {
    "href": "api/Exiled.API.Features.Attributes.PatchGroupAttribute.html",
    "title": "Class PatchGroupAttribute | EXILED Docs",
    "keywords": "Class PatchGroupAttribute This attribute is used within Harmony patches and the relative annotations to define a target element. A target element can be a System.Type , langword_csharp_class or System.Reflection.MethodInfo . PatchGroupAttribute allows to define elements made for patching. A target-patching approach is useful to patch specific elements without having to directly patch everything without considering excluded elements. Target-patching also allows to emit patches without having to manually define and/or supply parameters and elements made for patching Inheritance System.Object System.Attribute PatchGroupAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Attributes Assembly : Exiled.API.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class PatchGroupAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source PatchGroupAttribute(String) Initializes a new instance of the PatchGroupAttribute class. Declaration public PatchGroupAttribute(string groupId) Parameters Type Name Description System.String groupId The group of target-patch. Properties | Improve this Doc View Source GroupId Gets the group id. Declaration public string GroupId { get; } Property Value Type Description System.String Implements System.Runtime.InteropServices._Attribute Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Badge.html": {
    "href": "api/Exiled.API.Features.Badge.html",
    "title": "Struct Badge | EXILED Docs",
    "keywords": "Struct Badge Represents an in-game badge. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public struct Badge Constructors | Improve this Doc View Source Badge(String, String, Int32, Boolean) Initializes a new instance of the Badge struct. Declaration public Badge(string text, string color, int type, bool isGlobal = false) Parameters Type Name Description System.String text The badge text. System.String color The badge color. System.Int32 type The badge type. System.Boolean isGlobal Indicates whether the badge is global or not. Properties | Improve this Doc View Source Color Gets the badge color. Declaration public readonly string Color { get; } Property Value Type Description System.String | Improve this Doc View Source IsGlobal Gets a value indicating whether the badge is global or not. Declaration public readonly bool IsGlobal { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Text Gets the badge text. Declaration public readonly string Text { get; } Property Value Type Description System.String | Improve this Doc View Source Type Gets the badge type. Declaration public readonly int Type { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source GetHexColor(Misc.PlayerInfoColorTypes) Gets the hex color code of the provided Misc.PlayerInfoColorTypes . Declaration public static string GetHexColor(Misc.PlayerInfoColorTypes colorType) Parameters Type Name Description Misc.PlayerInfoColorTypes colorType The Misc.PlayerInfoColorTypes to get the hex color code of. Returns Type Description System.String The hex color code, including the # . | Improve this Doc View Source IsValidColor(String, out Nullable<Misc.PlayerInfoColorTypes>) Gets whether or not the provided hex color code can be used in badges. Declaration public static bool IsValidColor(string hex, out Misc.PlayerInfoColorTypes? colorType) Parameters Type Name Description System.String hex The hex color code, including the # . System.Nullable < Misc.PlayerInfoColorTypes > colorType If the method returns true , this will be an enum representing the hex code. If the method returns false , this will be null . Returns Type Description System.Boolean Whether or not the provided hex color code can be used in badges. | Improve this Doc View Source ToString() Returns the Badge in a human-readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Badge-related data. Overrides System.ValueType.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Broadcast.html": {
    "href": "api/Exiled.API.Features.Broadcast.html",
    "title": "Class Broadcast | EXILED Docs",
    "keywords": "Class Broadcast Useful class to save broadcast configs in a cleaner way. Inheritance System.Object Broadcast Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Broadcast Constructors | Improve this Doc View Source Broadcast() Initializes a new instance of the Broadcast class. Declaration public Broadcast() | Improve this Doc View Source Broadcast(String, UInt16, Boolean, Broadcast.BroadcastFlags) Initializes a new instance of the Broadcast class. Declaration public Broadcast(string content, ushort duration = 10, bool show = true, Broadcast.BroadcastFlags type = Broadcast.BroadcastFlags.Normal) Parameters Type Name Description System.String content The content of the broadcast>. System.UInt16 duration The duration of the broadcast, in seconds. System.Boolean show Whether or not the broadcast should be shown. Broadcast.BroadcastFlags type The type of the broadcast. Properties | Improve this Doc View Source Content Gets or sets the broadcast content. Declaration public string Content { get; set; } Property Value Type Description System.String | Improve this Doc View Source Duration Gets or sets the broadcast duration. Declaration public ushort Duration { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source Show Gets or sets a value indicating whether the broadcast should be shown or not. Declaration public bool Show { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Type Gets or sets the broadcast type. Declaration public Broadcast.BroadcastFlags Type { get; set; } Property Value Type Description Broadcast.BroadcastFlags Methods | Improve this Doc View Source ToString() Returns the Broadcast in a human-readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Broadcast-related data. Overrides System.Object.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Camera.html": {
    "href": "api/Exiled.API.Features.Camera.html",
    "title": "Class Camera | EXILED Docs",
    "keywords": "Class Camera The in-game Scp079Camera. Inheritance System.Object Camera Implements IWrapper < PlayerRoles.PlayableScps.Scp079.Cameras.Scp079Camera > IPosition Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Camera : IWrapper<Scp079Camera>, IPosition Properties | Improve this Doc View Source Base Gets the base PlayerRoles.PlayableScps.Scp079.Cameras.Scp079Camera . Declaration public Scp079Camera Base { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Cameras.Scp079Camera | Improve this Doc View Source GameObject Gets the camera's UnityEngine.GameObject . Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source Id Gets the camera's id. Declaration public ushort Id { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source IsBeingUsed Gets or sets a value indicating whether or not this camera is being used by SCP-079. Declaration public bool IsBeingUsed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source List Gets a System.Collections.Generic.IEnumerable<T> of Camera which contains all the Camera instances. Declaration public static IEnumerable<Camera> List { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Camera > | Improve this Doc View Source Name Gets the camera's name. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Position Gets the camera's position. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Random Gets a random Camera . Declaration public static Camera Random { get; } Property Value Type Description Camera Camera object. | Improve this Doc View Source Room Gets the generator's Room . Declaration public Room Room { get; } Property Value Type Description Room | Improve this Doc View Source Rotation Gets or sets the camera's rotation. Declaration public Vector3 Rotation { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Transform Gets the camera's UnityEngine.Transform . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source Type Gets the camera's CameraType . Declaration public CameraType Type { get; } Property Value Type Description CameraType | Improve this Doc View Source Zone Gets the camera's ZoneType . Declaration public ZoneType Zone { get; } Property Value Type Description ZoneType | Improve this Doc View Source Zoom Gets the value of the Camera zoom. Declaration public float Zoom { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source Get(CameraType) Gets a Camera given the specified cameraType . Declaration public static Camera Get(CameraType cameraType) Parameters Type Name Description CameraType cameraType The CameraType to search for. Returns Type Description Camera The Camera with the given CameraType or null if not found. | Improve this Doc View Source Get(Scp079Camera) Gets the Camera belonging to the PlayerRoles.PlayableScps.Scp079.Cameras.Scp079Camera , if any. Declaration public static Camera Get(Scp079Camera camera079) Parameters Type Name Description PlayerRoles.PlayableScps.Scp079.Cameras.Scp079Camera camera079 The base PlayerRoles.PlayableScps.Scp079.Cameras.Scp079Camera . Returns Type Description Camera A Camera or null if not found. | Improve this Doc View Source Get(IEnumerable<Scp079Camera>) Gets a System.Collections.Generic.IEnumerable<T> of Camera which contains all the Camera instances given a System.Collections.Generic.IEnumerable<T> of PlayerRoles.PlayableScps.Scp079.Cameras.Scp079Camera . Declaration public static IEnumerable<Camera> Get(IEnumerable<Scp079Camera> cameras) Parameters Type Name Description System.Collections.Generic.IEnumerable < PlayerRoles.PlayableScps.Scp079.Cameras.Scp079Camera > cameras The System.Collections.Generic.IEnumerable<T> of PlayerRoles.PlayableScps.Scp079.Cameras.Scp079Camera . Returns Type Description System.Collections.Generic.IEnumerable < Camera > A System.Collections.Generic.IEnumerable<T> of Camera . | Improve this Doc View Source Get(Func<Camera, Boolean>) Gets a System.Collections.Generic.IEnumerable<T> of Camera filtered based on a predicate. Declaration public static IEnumerable<Camera> Get(Func<Camera, bool> predicate) Parameters Type Name Description System.Func < Camera , System.Boolean > predicate The condition to satify. Returns Type Description System.Collections.Generic.IEnumerable < Camera > A System.Collections.Generic.IEnumerable<T> of Camera which contains elements that satify the condition. | Improve this Doc View Source Get(String) Gets a Camera given the specified cameraName . Declaration public static Camera Get(string cameraName) Parameters Type Name Description System.String cameraName The name of the camera. Returns Type Description Camera The Camera or null if not found. | Improve this Doc View Source Get(UInt32) Gets a Camera given the specified cameraId . Declaration public static Camera Get(uint cameraId) Parameters Type Name Description System.UInt32 cameraId The camera id to be searched for. Returns Type Description Camera The Camera with the given id or null if not found. | Improve this Doc View Source ToString() Returns the Camera in a human-readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Camera-related data. Overrides System.Object.ToString() Implements IWrapper<T> IPosition Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Cassie.html": {
    "href": "api/Exiled.API.Features.Cassie.html",
    "title": "Class Cassie | EXILED Docs",
    "keywords": "Class Cassie A set of tools to use in-game C.A.S.S.I.E. Inheritance System.Object Cassie Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Cassie Properties | Improve this Doc View Source Announcer Gets the NineTailedFoxAnnouncer singleton. Declaration public static NineTailedFoxAnnouncer Announcer { get; } Property Value Type Description NineTailedFoxAnnouncer | Improve this Doc View Source IsSpeaking Gets a value indicating whether or not C.A.S.S.I.E is currently announcing. Does not include decontamination messages. Declaration public static bool IsSpeaking { get; } Property Value Type Description System.Boolean | Improve this Doc View Source VoiceLines Gets a System.Collections.Generic.IReadOnlyCollection<T> of NineTailedFoxAnnouncer.VoiceLine objects that C.A.S.S.I.E recognizes. Declaration public static IReadOnlyCollection<NineTailedFoxAnnouncer.VoiceLine> VoiceLines { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < NineTailedFoxAnnouncer.VoiceLine > Methods | Improve this Doc View Source CalculateDuration(String, Boolean) Calculates the duration of a C.A.S.S.I.E message. Declaration public static float CalculateDuration(string message, bool rawNumber = false) Parameters Type Name Description System.String message The message, which duration will be calculated. System.Boolean rawNumber Determines if a number won't be converted to its full pronunciation. Returns Type Description System.Single Duration (in seconds) of specified message. | Improve this Doc View Source Clear() Clears the C.A.S.S.I.E queue. Declaration public static void Clear() | Improve this Doc View Source ConvertNumber(Int32) Converts a number into a Cassie-Readable String. Declaration public static string ConvertNumber(int num) Parameters Type Name Description System.Int32 num Number to convert. Returns Type Description System.String A CASSIE-readable System.String representing the number. | Improve this Doc View Source ConvertTeam(Team, String) Converts a PlayerRoles.Team into a Cassie-Readable CONTAINMENTUNIT . Declaration public static string ConvertTeam(Team team, string unitName) Parameters Type Name Description PlayerRoles.Team team PlayerRoles.Team . System.String unitName Unit Name. Returns Type Description System.String System.String Containment Unit text. | Improve this Doc View Source CustomScpTermination(String, DamageHandlerBase) Announces the termination of a custom SCP name. Declaration public static void CustomScpTermination(string scpName, DamageHandlerBase info) Parameters Type Name Description System.String scpName SCP Name. Note that for larger numbers, C.A.S.S.I.E will pronounce the place (eg. \"457\" -> \"four hundred fifty seven\"). Spaces can be used to prevent this behavior. DamageHandlerBase info Hit Information. | Improve this Doc View Source DelayedGlitchyMessage(String, Single, Single, Single) Reproduce a glitchy C.A.S.S.I.E announcement after a certain period of seconds. Declaration public static void DelayedGlitchyMessage(string message, float delay, float glitchChance, float jamChance) Parameters Type Name Description System.String message The message to be reproduced. System.Single delay The seconds that have to pass before reproducing the message. System.Single glitchChance The chance of placing a glitch between each word. System.Single jamChance The chance of jamming each word. | Improve this Doc View Source DelayedMessage(String, Single, Boolean, Boolean, Boolean) Reproduce a non-glitched C.A.S.S.I.E message after a certain amount of seconds. Declaration public static void DelayedMessage(string message, float delay, bool isHeld = false, bool isNoisy = true, bool isSubtitles = false) Parameters Type Name Description System.String message The message to be reproduced. System.Single delay The seconds that have to pass before reproducing the message. System.Boolean isHeld Indicates whether C.A.S.S.I.E has to hold the message. System.Boolean isNoisy Indicates whether C.A.S.S.I.E has to make noises or not during the message. System.Boolean isSubtitles Indicates whether C.A.S.S.I.E has to make subtitles. | Improve this Doc View Source GlitchyMessage(String, Single, Single) Reproduce a glitchy C.A.S.S.I.E announcement. Declaration public static void GlitchyMessage(string message, float glitchChance, float jamChance) Parameters Type Name Description System.String message The message to be reproduced. System.Single glitchChance The chance of placing a glitch between each word. System.Single jamChance The chance of jamming each word. | Improve this Doc View Source IsValid(String) Gets a value indicating whether or not the given word is a valid C.A.S.S.I.E word. Declaration public static bool IsValid(string word) Parameters Type Name Description System.String word The word to check. Returns Type Description System.Boolean true if the word is valid; otherwise, false . | Improve this Doc View Source IsValidSentence(String) Gets a value indicating whether or not the given sentence is all valid C.A.S.S.I.E word. Declaration public static bool IsValidSentence(string sentence) Parameters Type Name Description System.String sentence The sentence to check. Returns Type Description System.Boolean true if the sentence is valid; otherwise, false . | Improve this Doc View Source Message(String, Boolean, Boolean, Boolean) Reproduce a non-glitched C.A.S.S.I.E message. Declaration public static void Message(string message, bool isHeld = false, bool isNoisy = true, bool isSubtitles = false) Parameters Type Name Description System.String message The message to be reproduced. System.Boolean isHeld Indicates whether C.A.S.S.I.E has to hold the message. System.Boolean isNoisy Indicates whether C.A.S.S.I.E has to make noises or not during the message. System.Boolean isSubtitles Indicates whether C.A.S.S.I.E has to make subtitles. | Improve this Doc View Source MessageTranslated(String, String, Boolean, Boolean, Boolean) Reproduce a non-glitched C.A.S.S.I.E message with a possibility to custom the subtitles. Declaration public static void MessageTranslated(string message, string translation, bool isHeld = false, bool isNoisy = true, bool isSubtitles = true) Parameters Type Name Description System.String message The message to be reproduced. System.String translation The translation should be show in the subtitles. System.Boolean isHeld Indicates whether C.A.S.S.I.E has to hold the message. System.Boolean isNoisy Indicates whether C.A.S.S.I.E has to make noises or not during the message. System.Boolean isSubtitles Indicates whether C.A.S.S.I.E has to make subtitles. | Improve this Doc View Source ScpTermination(Player, DamageHandlerBase) Announce a SCP Termination. Declaration public static void ScpTermination(Player scp, DamageHandlerBase info) Parameters Type Name Description Player scp SCP to announce termination of. PlayerStatsSystem.DamageHandlerBase info HitInformation."
  },
  "api/Exiled.API.Features.Components.CollisionHandler.html": {
    "href": "api/Exiled.API.Features.Components.CollisionHandler.html",
    "title": "Class CollisionHandler | EXILED Docs",
    "keywords": "Class CollisionHandler Collision Handler for grenades. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour CollisionHandler Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.ToString() UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Components Assembly : Exiled.API.dll Syntax public class CollisionHandler : MonoBehaviour Properties | Improve this Doc View Source Grenade Gets the grenade itself. Declaration public EffectGrenade Grenade { get; } Property Value Type Description InventorySystem.Items.ThrowableProjectiles.EffectGrenade | Improve this Doc View Source Owner Gets the thrower of the grenade. Declaration public GameObject Owner { get; } Property Value Type Description UnityEngine.GameObject Methods | Improve this Doc View Source Init(GameObject, ThrownProjectile) Inits the CollisionHandler object. Declaration public void Init(GameObject owner, ThrownProjectile grenade) Parameters Type Name Description UnityEngine.GameObject owner The grenade owner. InventorySystem.Items.ThrowableProjectiles.ThrownProjectile grenade The grenade component. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Components.html": {
    "href": "api/Exiled.API.Features.Components.html",
    "title": "Namespace Exiled.API.Features.Components | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Components Classes CollisionHandler Collision Handler for grenades."
  },
  "api/Exiled.API.Features.Core.Attributes.html": {
    "href": "api/Exiled.API.Features.Core.Attributes.html",
    "title": "Namespace Exiled.API.Features.Core.Attributes | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Core.Attributes Classes ManagedObjectTypeAttribute An attribute to easily manage CustomAbility initialization."
  },
  "api/Exiled.API.Features.Core.Attributes.ManagedObjectTypeAttribute.html": {
    "href": "api/Exiled.API.Features.Core.Attributes.ManagedObjectTypeAttribute.html",
    "title": "Class ManagedObjectTypeAttribute | EXILED Docs",
    "keywords": "Class ManagedObjectTypeAttribute An attribute to easily manage CustomAbility initialization. Inheritance System.Object System.Attribute ManagedObjectTypeAttribute Implements System.Runtime.InteropServices._Attribute Inherited Members System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.Equals(System.Object) System.Attribute.GetHashCode() System.Attribute.Match(System.Object) System.Attribute.IsDefaultAttribute() System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfoCount(System.UInt32) System.Attribute.System.Runtime.InteropServices._Attribute.GetTypeInfo(System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.GetIDsOfNames(System.Guid, System.IntPtr, System.UInt32, System.UInt32, System.IntPtr) System.Attribute.System.Runtime.InteropServices._Attribute.Invoke(System.UInt32, System.Guid, System.UInt32, System.Int16, System.IntPtr, System.IntPtr, System.IntPtr, System.IntPtr) System.Attribute.TypeId System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Core.Attributes Assembly : Exiled.API.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class ManagedObjectTypeAttribute : Attribute, _Attribute Constructors | Improve this Doc View Source ManagedObjectTypeAttribute() Initializes a new instance of the ManagedObjectTypeAttribute class. Declaration public ManagedObjectTypeAttribute() Implements System.Runtime.InteropServices._Attribute Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Core.EActor.html": {
    "href": "api/Exiled.API.Features.Core.EActor.html",
    "title": "Class EActor | EXILED Docs",
    "keywords": "Class EActor Actor is the base class for a EObject that can be placed or spawned in-game. Inheritance System.Object TypeCastObject < EObject > EObject EActor Implements IEntity IWorldSpace IPosition IRotation Inherited Members EObject.RegisteredTypes EObject.Base EObject.Name EObject.Tag EObject.IsEditable EObject.GetObjectTypeByName(String) EObject.RegisterObjectType<T>(String) EObject.RegisterObjectType(Type, String) EObject.UnregisterObjectType(Type) EObject.UnregisterObjectType(String) EObject.FindObjectDefinedTypeByName(String, Boolean) EObject.GetObjectTypeFromRegisteredTypes<T>() EObject.GetObjectTypeFromRegisteredTypes<T>(String) EObject.GetObjectTypeFromRegisteredTypes(Type) EObject.GetObjectTypeFromRegisteredTypes(Type, String) EObject.GetObjectTypeFromRegisteredTypesByName(String) EObject.CreateDefaultSubobject(Type, Object[]) EObject.CreateDefaultSubobject<T>(Type) EObject.CreateDefaultSubobject<T>() EObject.CreateDefaultSubobject<T>(Object[]) EObject.CreateDefaultSubobject<T>(GameObject, String) EObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) EObject.CreateDefaultSubobject<T>(Type, GameObject, String) EObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) EObject.CreateDefaultSubobject(Type, GameObject, String) EObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) EObject.DestroyAllObjects() EObject.DestroyAllObjectsOfType<T>() EObject.FindActiveObjectOfType<T>(Func<EObject, Boolean>) EObject.FindActiveObjectsOfType<T>(Func<EObject, Boolean>) EObject.FindActiveObjectsOfType<T>() EObject.FindActiveObjectsOfType<T>(String) EObject.FindActiveObjectsOfType<T>(Type) EObject.FindActiveObjectsOfType<T>(Type, Func<EObject, Boolean>) EObject.FindActiveObjectsWithTagOfType<T>(String) EObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) EObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) EObject.DestroyActiveObjectsOfType<T>() EObject.DestroyActiveObject<T>(GameObject) EObject.DestroyActiveObject(Type, GameObject) EObject.FindMostAppropriateEntry<T>(String, IEnumerable<T>) EObject.Destroy() EObject.GetHashCode() EObject.Equals(Object) EObject.Destroy(Boolean) EObject.OnDestroyed() TypeCastObject<EObject>.Cast<TObject>() TypeCastObject<EObject>.Cast<TObject>(TObject) TypeCastObject<EObject>.As<TObject>() TypeCastObject<EObject>.Is<TObject>(TObject) System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Core Assembly : Exiled.API.dll Syntax public abstract class EActor : EObject, IEntity, IWorldSpace, IPosition, IRotation Constructors | Improve this Doc View Source EActor() Initializes a new instance of the EActor class. Declaration protected EActor() | Improve this Doc View Source EActor(GameObject) Initializes a new instance of the EActor class. Declaration protected EActor(GameObject gameObject = null) Parameters Type Name Description UnityEngine.GameObject gameObject The base UnityEngine.GameObject . Fields | Improve this Doc View Source DefaultFixedTickRate The default fixed tick rate. Declaration public const float DefaultFixedTickRate = 0.016F Field Value Type Description System.Single Properties | Improve this Doc View Source CanEverTick Gets or sets a value indicating whether the EActor can tick. Declaration public virtual bool CanEverTick { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ComponentsInChildren Declaration public IReadOnlyCollection<EActor> ComponentsInChildren { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < EActor > | Improve this Doc View Source ComponentsInParent Gets a EActor [] containing all the components in parent. Declaration protected IEnumerable<EActor> ComponentsInParent { get; } Property Value Type Description System.Collections.Generic.IEnumerable < EActor > | Improve this Doc View Source FixedTickRate Gets or sets the value which determines the size of every tick. Declaration public virtual float FixedTickRate { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Position Gets or sets the UnityEngine.Vector3 . Declaration public virtual Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Rotation Gets or sets the UnityEngine.Quaternion . Declaration public virtual Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Scale Gets or sets the UnityEngine.Vector3 . Declaration public virtual Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Transform Gets the UnityEngine.Transform . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform Methods | Improve this Doc View Source AddComponent(Type, String) Declaration public EActor AddComponent(Type type, string name = \"\") Parameters Type Name Description System.Type type System.String name Returns Type Description EActor | Improve this Doc View Source AddComponent<T>(String) Declaration public T AddComponent<T>(string name = \"\") where T : EActor Parameters Type Name Description System.String name Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source AddComponent<T>(Type, String) Declaration public T AddComponent<T>(Type type, string name = \"\") where T : EActor Parameters Type Name Description System.Type type System.String name Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source AttachTo(EActor, EActor) Attaches a EActor to the specified EActor . Declaration public static void AttachTo(EActor to, EActor from) Parameters Type Name Description EActor to The actor to be modified. EActor from The source actor. | Improve this Doc View Source AttachTo(EActor, GameObject) Attaches a EActor to the specified UnityEngine.GameObject . Declaration public static void AttachTo(EActor comp, GameObject gameObject) Parameters Type Name Description EActor comp EActor . UnityEngine.GameObject gameObject UnityEngine.GameObject . | Improve this Doc View Source GetComponent(Type) Declaration public EActor GetComponent(Type type) Parameters Type Name Description System.Type type Returns Type Description EActor | Improve this Doc View Source GetComponent<T>() Declaration public T GetComponent<T>() where T : EActor Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetComponent<T>(Type) Declaration public T GetComponent<T>(Type type) where T : EActor Parameters Type Name Description System.Type type Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source HasComponent(Type, Boolean) Declaration public bool HasComponent(Type type, bool depthInheritance = false) Parameters Type Name Description System.Type type System.Boolean depthInheritance Returns Type Description System.Boolean | Improve this Doc View Source HasComponent<T>(Boolean) Declaration public bool HasComponent<T>(bool depthInheritance = false) Parameters Type Name Description System.Boolean depthInheritance Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source OnBeginDestroy() Declaration protected override void OnBeginDestroy() Overrides EObject.OnBeginDestroy() | Improve this Doc View Source OnBeginPlay() Fired after the first fixed tick. Declaration protected virtual void OnBeginPlay() | Improve this Doc View Source OnEndPlay() Fired before the current EActor instance is destroyed. Declaration protected virtual void OnEndPlay() | Improve this Doc View Source PostInitialize() Fired after the EActor instance is created. Declaration protected virtual void PostInitialize() | Improve this Doc View Source SubscribeEvents() Subscribes all the events. Declaration protected virtual void SubscribeEvents() | Improve this Doc View Source Tick() Fired every tick. Declaration protected virtual void Tick() | Improve this Doc View Source TryGetComponent(Type, out EActor) Declaration public bool TryGetComponent(Type type, out EActor component) Parameters Type Name Description System.Type type EActor component Returns Type Description System.Boolean | Improve this Doc View Source TryGetComponent<T>(out T) Declaration public bool TryGetComponent<T>(out T component) where T : EActor Parameters Type Name Description T component Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryGetComponent<T>(Type, out T) Declaration public bool TryGetComponent<T>(Type type, out T component) where T : EActor Parameters Type Name Description System.Type type T component Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source UnsubscribeEvents() Unsubscribes all the events. Declaration protected virtual void UnsubscribeEvents() Implements IEntity IWorldSpace IPosition IRotation Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Core.EObject.html": {
    "href": "api/Exiled.API.Features.Core.EObject.html",
    "title": "Class EObject | EXILED Docs",
    "keywords": "Class EObject The base class of all Exiled objects. Inheritance System.Object TypeCastObject < EObject > EObject EActor TickComponent Inherited Members TypeCastObject<EObject>.Cast<TObject>() TypeCastObject<EObject>.Cast<TObject>(TObject) TypeCastObject<EObject>.As<TObject>() TypeCastObject<EObject>.Is<TObject>(TObject) System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Core Assembly : Exiled.API.dll Syntax public abstract class EObject : TypeCastObject<EObject> Constructors | Improve this Doc View Source EObject() Initializes a new instance of the EObject class. Declaration protected EObject() | Improve this Doc View Source EObject(GameObject) Initializes a new instance of the EObject class. Declaration protected EObject(GameObject gameObject = null) Parameters Type Name Description UnityEngine.GameObject gameObject Properties | Improve this Doc View Source Base Gets or sets the base UnityEngine.GameObject . Declaration public GameObject Base { get; set; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source IsEditable Gets or sets a value indicating whether the EObject values can be edited. Declaration public bool IsEditable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets or sets the name of the EObject instance. Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source RegisteredTypes Gets all the registered EObject types. Declaration public static IReadOnlyDictionary<Type, List<string>> RegisteredTypes { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < System.Type , System.Collections.Generic.List < System.String >> | Improve this Doc View Source Tag Gets or sets the tag of the EObject instance. Declaration public string Tag { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source CreateDefaultSubobject(Type, Object[]) Creates a new instance of the EObject class. Declaration public static EObject CreateDefaultSubobject(Type type, params object[] parameters) Parameters Type Name Description System.Type type The EObject type. System.Object [] parameters The parameters to initialize the object. Returns Type Description EObject The new EObject instance. | Improve this Doc View Source CreateDefaultSubobject(Type, GameObject, String) Creates a new instance of the EObject class. Declaration public static EObject CreateDefaultSubobject(Type type, GameObject gameObject, string name) Parameters Type Name Description System.Type type The EObject type. UnityEngine.GameObject gameObject System.String name The name to be given to the new EObject instance. Returns Type Description EObject The new EObject instance. | Improve this Doc View Source CreateDefaultSubobject(Type, GameObject, String, Object[]) Creates a new instance of the EObject class. Declaration public static EObject CreateDefaultSubobject(Type type, GameObject gameObject, string name, params object[] parameters) Parameters Type Name Description System.Type type The EObject type. UnityEngine.GameObject gameObject System.String name The name to be given to the new EObject instance. System.Object [] parameters The parameters to initialize the object. Returns Type Description EObject The new EObject instance. | Improve this Doc View Source CreateDefaultSubobject<T>() Creates a new instance of the EObject class. Declaration public static T CreateDefaultSubobject<T>() where T : EObject Returns Type Description T The new EObject instance. Type Parameters Name Description T The cast EObject type. | Improve this Doc View Source CreateDefaultSubobject<T>(Object[]) Creates a new instance of the EObject class. Declaration public static T CreateDefaultSubobject<T>(params object[] parameters) where T : EObject Parameters Type Name Description System.Object [] parameters The parameters to initialize the object. Returns Type Description T The new EObject instance. Type Parameters Name Description T The EObject type to cast. | Improve this Doc View Source CreateDefaultSubobject<T>(Type) Creates a new instance of the EObject class. Declaration public static T CreateDefaultSubobject<T>(Type type) where T : EObject Parameters Type Name Description System.Type type The EObject type. Returns Type Description T The new EObject instance. Type Parameters Name Description T The cast EObject type. | Improve this Doc View Source CreateDefaultSubobject<T>(Type, GameObject, String) Creates a new instance of the EObject class. Declaration public static T CreateDefaultSubobject<T>(Type type, GameObject gameObject, string name) where T : EObject Parameters Type Name Description System.Type type The EObject type. UnityEngine.GameObject gameObject System.String name The name to be given to the new EObject instance. Returns Type Description T The new EObject instance. Type Parameters Name Description T The cast EObject type. | Improve this Doc View Source CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) Creates a new instance of the EObject class. Declaration public static T CreateDefaultSubobject<T>(Type type, GameObject gameObject, string name, params object[] parameters) where T : EObject Parameters Type Name Description System.Type type The EObject type. UnityEngine.GameObject gameObject System.String name The name to be given to the new EObject instance. System.Object [] parameters The parameters to initialize the object. Returns Type Description T The new EObject instance. Type Parameters Name Description T The cast EObject type. | Improve this Doc View Source CreateDefaultSubobject<T>(GameObject, String) Creates a new instance of the EObject class. Declaration public static T CreateDefaultSubobject<T>(GameObject gameObject, string name) where T : EObject Parameters Type Name Description UnityEngine.GameObject gameObject System.String name The name to be given to the new EObject instance. Returns Type Description T The new EObject instance. Type Parameters Name Description T The EObject type. | Improve this Doc View Source CreateDefaultSubobject<T>(GameObject, String, Object[]) Creates a new instance of the EObject class. Declaration public static T CreateDefaultSubobject<T>(GameObject gameObject, string name, params object[] parameters) where T : EObject Parameters Type Name Description UnityEngine.GameObject gameObject System.String name The name to be given to the new EObject instance. System.Object [] parameters The parameters to initialize the object. Returns Type Description T The new EObject instance. Type Parameters Name Description T The EObject type. | Improve this Doc View Source Destroy() Destroys the current EObject instance. Declaration public void Destroy() | Improve this Doc View Source Destroy(Boolean) Declaration protected virtual void Destroy(bool destroying) Parameters Type Name Description System.Boolean destroying | Improve this Doc View Source DestroyActiveObject(Type, GameObject) Destroys an active EObject instance given the specified UnityEngine.GameObject . Declaration public static bool DestroyActiveObject(Type type, GameObject gameObject) Parameters Type Name Description System.Type type The type of the object. UnityEngine.GameObject gameObject The UnityEngine.GameObject belonging to the object. Returns Type Description System.Boolean true if the object was destroyed; otherwise, false . | Improve this Doc View Source DestroyActiveObject<T>(GameObject) Destroys an active EObject instance of type T given the specified UnityEngine.GameObject . Declaration public static bool DestroyActiveObject<T>(GameObject gameObject) where T : EObject Parameters Type Name Description UnityEngine.GameObject gameObject The UnityEngine.GameObject belonging to the EObject instance to be destroyed. Returns Type Description System.Boolean true if the object was destroyed; otherwise, false . Type Parameters Name Description T The T type to look for. | Improve this Doc View Source DestroyActiveObjectsOfType<T>() Destroys all the active EObject instances of type T . Declaration public static void DestroyActiveObjectsOfType<T>() where T : EObject Type Parameters Name Description T The T type to look for. | Improve this Doc View Source DestroyAllObjects() Destroys all the active EObject instances. Declaration public static void DestroyAllObjects() | Improve this Doc View Source DestroyAllObjectsOfType<T>() Destroys all the active T EObject instances. Declaration public static void DestroyAllObjectsOfType<T>() where T : EObject Type Parameters Name Description T The T type to look for. | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source FindActiveObjectOfType<T>(Func<EObject, Boolean>) Finds the active EObject instances of type T filtered based on a predicate. Declaration public static T FindActiveObjectOfType<T>(Func<EObject, bool> predicate) where T : EObject Parameters Type Name Description System.Func < EObject , System.Boolean > predicate The condition to satify. Returns Type Description T The corresponding active T EObject . Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindActiveObjectsOfType<T>() Finds all the active EObject instances of type T . Declaration public static T[] FindActiveObjectsOfType<T>() where T : EObject Returns Type Description T[] A T [] containing all the matching results. Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindActiveObjectsOfType<T>(Func<T, Boolean>) Finds all the active EObject instances of type T . Declaration public static T[] FindActiveObjectsOfType<T>(Func<T, bool> predicate) where T : EObject Parameters Type Name Description System.Func <T, System.Boolean > predicate The condition to satify. Returns Type Description T[] A T [] containing all the elements that satify the condition. Type Parameters Name Description T The type to look for. | Improve this Doc View Source FindActiveObjectsOfType<T>(Func<EObject, Boolean>) Finds all the active EObject instances of type T filtered based on a predicate. Declaration public static T[] FindActiveObjectsOfType<T>(Func<EObject, bool> predicate) where T : EObject Parameters Type Name Description System.Func < EObject , System.Boolean > predicate The condition to satify. Returns Type Description T[] A T [] containing all the matching results. Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindActiveObjectsOfType<T>(Func<Object, Boolean>) Finds all the active EObject instances of type T . Declaration public static T[] FindActiveObjectsOfType<T>(Func<object, bool> predicate) where T : EObject Parameters Type Name Description System.Func < System.Object , System.Boolean > predicate The condition to satify. Returns Type Description T[] A T [] containing all the elements that satify the condition. Type Parameters Name Description T The type to look for. | Improve this Doc View Source FindActiveObjectsOfType<T>(String) Finds all the active EObject instances of type T with the specified name . Declaration public static T[] FindActiveObjectsOfType<T>(string name) where T : EObject Parameters Type Name Description System.String name The name to look for. Returns Type Description T[] A T [] containing all the matching results. Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindActiveObjectsOfType<T>(Type) Finds all the active EObject instances of type T . Declaration public static T[] FindActiveObjectsOfType<T>(Type type) where T : EObject Parameters Type Name Description System.Type type The EObject type. Returns Type Description T[] A T [] containing all the matching results. Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindActiveObjectsOfType<T>(Type, Func<EObject, Boolean>) Finds all the active EObject instances of type T filtered based on a predicate. Declaration public static T[] FindActiveObjectsOfType<T>(Type type, Func<EObject, bool> predicate) where T : EObject Parameters Type Name Description System.Type type The EObject type. System.Func < EObject , System.Boolean > predicate The condition to satify. Returns Type Description T[] A T [] containing all the matching results. Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindActiveObjectsWithTagOfType<T>(String) Finds all the active EObject instances of type T with the specified tag . Declaration public static T[] FindActiveObjectsWithTagOfType<T>(string tag) where T : EObject Parameters Type Name Description System.String tag The tag to look for. Returns Type Description T[] A T [] containing all the matching results. Type Parameters Name Description T The T type to look for. | Improve this Doc View Source FindMostAppropriateEntry<T>(String, IEnumerable<T>) Finds the most appropriate entry. Declaration public static T FindMostAppropriateEntry<T>(string name, IEnumerable<T> source) Parameters Type Name Description System.String name The name to pair. System.Collections.Generic.IEnumerable <T> source The source on which iterate on. Returns Type Description T The corresponding entry or langword_csharp_default if not found. Type Parameters Name Description T The type to look for. | Improve this Doc View Source FindObjectDefinedTypeByName(String, Boolean) Finds the most accurate System.Type matching the given name . Declaration public static Type FindObjectDefinedTypeByName(string name, bool ignoreAbstractTypes = true) Parameters Type Name Description System.String name The name to look for. System.Boolean ignoreAbstractTypes A value indicating whether abstract types should be ignored. Returns Type Description System.Type The System.Type with the name that matches the given name. | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source GetObjectTypeByName(String) Gets a System.Type from a given type name. Declaration public static Type GetObjectTypeByName(string typeName) Parameters Type Name Description System.String typeName The type name to look for. Returns Type Description System.Type A System.Type matching the type name or null if not found. | Improve this Doc View Source GetObjectTypeFromRegisteredTypes(Type) Gets a EObject type from all the registered types. Declaration public static Type GetObjectTypeFromRegisteredTypes(Type type) Parameters Type Name Description System.Type type The EObject type. Returns Type Description System.Type The matching System.Type . Exceptions Type Condition System.NullReferenceException Occurs when the requested type is not the same as the specified type. | Improve this Doc View Source GetObjectTypeFromRegisteredTypes(Type, String) Gets a EObject type from all the registered types. Declaration public static Type GetObjectTypeFromRegisteredTypes(Type type, string name) Parameters Type Name Description System.Type type The EObject type. System.String name The name of the type to look for. Returns Type Description System.Type The matching System.Type . Exceptions Type Condition System.NullReferenceException Occurs when the requested type's name is not the same as the specified name. | Improve this Doc View Source GetObjectTypeFromRegisteredTypes<T>() Gets a EObject type from all the registered types. Declaration public static Type GetObjectTypeFromRegisteredTypes<T>() where T : EObject Returns Type Description System.Type The matching System.Type . Type Parameters Name Description T The EObject type. Exceptions Type Condition System.NullReferenceException Occurs when the requested type is not the same as the specified type. | Improve this Doc View Source GetObjectTypeFromRegisteredTypes<T>(String) Gets a EObject type from all the registered types. Declaration public static Type GetObjectTypeFromRegisteredTypes<T>(string name) where T : EObject Parameters Type Name Description System.String name The name of the type to look for. Returns Type Description System.Type The matching System.Type . Type Parameters Name Description T The EObject type. Exceptions Type Condition System.NullReferenceException Occurs when the requested type's name is not the same as the specified name. | Improve this Doc View Source GetObjectTypeFromRegisteredTypesByName(String) Gets a EObject type from all the registered types. Declaration public static Type GetObjectTypeFromRegisteredTypesByName(string name) Parameters Type Name Description System.String name The name of the type to look for. Returns Type Description System.Type The matching System.Type . Exceptions Type Condition System.NullReferenceException Occurs when the requested type's name is not the same as the specified name. | Improve this Doc View Source OnBeginDestroy() Fired before the current EObject instance is destroyed. Declaration protected virtual void OnBeginDestroy() | Improve this Doc View Source OnDestroyed() Fired when the current EObject instance has been explicitly destroyed. Declaration protected virtual void OnDestroyed() | Improve this Doc View Source RegisterObjectType(Type, String) Registers the specified EObject type . Declaration public static Type RegisterObjectType(Type type, string name) Parameters Type Name Description System.Type type The type to register. System.String name The name of the registered type. Returns Type Description System.Type The registered System.Type . | Improve this Doc View Source RegisterObjectType<T>(String) Registers the specified EObject type T . Declaration public static Type RegisterObjectType<T>(string name) where T : EObject Parameters Type Name Description System.String name The name of the registered type. Returns Type Description System.Type The registered System.Type . Type Parameters Name Description T The type to register. | Improve this Doc View Source UnregisterObjectType(String) Unregisters the specified EObject type. Declaration public static bool UnregisterObjectType(string name) Parameters Type Name Description System.String name The name of the type to unregister. Returns Type Description System.Boolean true if the type was unregistered successfully; otherwise, false . | Improve this Doc View Source UnregisterObjectType(Type) Registers the specified EObject type. Declaration public static bool UnregisterObjectType(Type type) Parameters Type Name Description System.Type type The type to register. Returns Type Description System.Boolean true if the type was unregistered successfully; otherwise, false . Operators | Improve this Doc View Source Implicit(EObject to Boolean) Implicitly converts the given EObject instance to a System.Boolean . Declaration public static implicit operator bool (EObject object) Parameters Type Name Description EObject object Whether the EObject instance exists. Returns Type Description System.Boolean | Improve this Doc View Source Implicit(EObject to String) Implicitly converts the given EObject instance to a System.String . Declaration public static implicit operator string (EObject object) Parameters Type Name Description EObject object The EObject instance's name. Returns Type Description System.String Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Core.html": {
    "href": "api/Exiled.API.Features.Core.html",
    "title": "Namespace Exiled.API.Features.Core | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Core Classes EActor Actor is the base class for a EObject that can be placed or spawned in-game. EObject The base class of all Exiled objects. TickComponent The component which handles tick related features. TypeCastObject<T> The interface which allows defined objects to be cast to each other."
  },
  "api/Exiled.API.Features.Core.Interfaces.html": {
    "href": "api/Exiled.API.Features.Core.Interfaces.html",
    "title": "Namespace Exiled.API.Features.Core.Interfaces | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Core.Interfaces Interfaces IEntity Defines the contract for basic ECS implementation."
  },
  "api/Exiled.API.Features.Core.Interfaces.IEntity.html": {
    "href": "api/Exiled.API.Features.Core.Interfaces.IEntity.html",
    "title": "Interface IEntity | EXILED Docs",
    "keywords": "Interface IEntity Defines the contract for basic ECS implementation. Namespace : Exiled.API.Features.Core.Interfaces Assembly : Exiled.API.dll Syntax public interface IEntity Properties | Improve this Doc View Source ComponentsInChildren Gets a System.Collections.Generic.IReadOnlyCollection<T> of EActor containing all the components in children. Declaration IReadOnlyCollection<EActor> ComponentsInChildren { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < EActor > Methods | Improve this Doc View Source AddComponent(Type, String) Adds a component to the IEntity . Declaration EActor AddComponent(Type type, string name = \"\") Parameters Type Name Description System.Type type The System.Type of the EActor to be added. System.String name The name of the component. Returns Type Description EActor The added EActor component. | Improve this Doc View Source AddComponent<T>(String) Adds a component to the IEntity . Declaration T AddComponent<T>(string name = \"\") where T : EActor Parameters Type Name Description System.String name The name of the component. Returns Type Description T The added EActor component. Type Parameters Name Description T The T EActor to be added. | Improve this Doc View Source AddComponent<T>(Type, String) Adds a component from the IEntity . Declaration T AddComponent<T>(Type type, string name = \"\") where T : EActor Parameters Type Name Description System.Type type The System.Type of the EActor to be added. System.String name The name of the component. Returns Type Description T The added EActor component. Type Parameters Name Description T The T cast EActor type. | Improve this Doc View Source GetComponent(Type) Gets a component from the IEntity . Declaration EActor GetComponent(Type type) Parameters Type Name Description System.Type type The System.Type of the EActor to look for. Returns Type Description EActor The EActor component. | Improve this Doc View Source GetComponent<T>() Gets a component from the IEntity . Declaration T GetComponent<T>() where T : EActor Returns Type Description T The EActor component. Type Parameters Name Description T The T EActor to look for. | Improve this Doc View Source GetComponent<T>(Type) Gets a component from the IEntity . Declaration T GetComponent<T>(Type type) where T : EActor Parameters Type Name Description System.Type type The System.Type of the EActor to look for. Returns Type Description T The EActor component. Type Parameters Name Description T The cast T EActor . | Improve this Doc View Source HasComponent(Type, Boolean) Checks if the IEntity has an active component. Declaration bool HasComponent(Type type, bool depthInheritance = false) Parameters Type Name Description System.Type type The EActor to look for. System.Boolean depthInheritance A value indicating whether or not subclasses should be considered. Returns Type Description System.Boolean true if the component was found; otherwise, false . | Improve this Doc View Source HasComponent<T>(Boolean) Checks if the IEntity has an active component. Declaration bool HasComponent<T>(bool depthInheritance = false) Parameters Type Name Description System.Boolean depthInheritance A value indicating whether or not subclasses should be considered. Returns Type Description System.Boolean true if the component was found; otherwise, false . Type Parameters Name Description T The EActor to look for. | Improve this Doc View Source TryGetComponent(Type, out EActor) Tries to get a component from the IEntity . Declaration bool TryGetComponent(Type type, out EActor component) Parameters Type Name Description System.Type type The System.Type of the EActor to get. EActor component The found component. Returns Type Description System.Boolean true if the component was found; otherwise, false . | Improve this Doc View Source TryGetComponent<T>(out T) Tries to get a component from the IEntity . Declaration bool TryGetComponent<T>(out T component) where T : EActor Parameters Type Name Description T component The T EActor . Returns Type Description System.Boolean true if the component was found; otherwise, false . Type Parameters Name Description T The T EActor to look for. | Improve this Doc View Source TryGetComponent<T>(Type, out T) Tries to get a component from the IEntity . Declaration bool TryGetComponent<T>(Type type, out T component) where T : EActor Parameters Type Name Description System.Type type The System.Type of the EActor to get. T component The found component. Returns Type Description System.Boolean true if the component was found; otherwise, false . Type Parameters Name Description T The cast T EActor . Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Core.TickComponent.html": {
    "href": "api/Exiled.API.Features.Core.TickComponent.html",
    "title": "Class TickComponent | EXILED Docs",
    "keywords": "Class TickComponent The component which handles tick related features. Inheritance System.Object TypeCastObject < EObject > EObject TickComponent Inherited Members EObject.RegisteredTypes EObject.Base EObject.Name EObject.Tag EObject.IsEditable EObject.GetObjectTypeByName(String) EObject.RegisterObjectType<T>(String) EObject.RegisterObjectType(Type, String) EObject.UnregisterObjectType(Type) EObject.UnregisterObjectType(String) EObject.FindObjectDefinedTypeByName(String, Boolean) EObject.GetObjectTypeFromRegisteredTypes<T>() EObject.GetObjectTypeFromRegisteredTypes<T>(String) EObject.GetObjectTypeFromRegisteredTypes(Type) EObject.GetObjectTypeFromRegisteredTypes(Type, String) EObject.GetObjectTypeFromRegisteredTypesByName(String) EObject.CreateDefaultSubobject(Type, Object[]) EObject.CreateDefaultSubobject<T>(Type) EObject.CreateDefaultSubobject<T>() EObject.CreateDefaultSubobject<T>(Object[]) EObject.CreateDefaultSubobject<T>(GameObject, String) EObject.CreateDefaultSubobject<T>(GameObject, String, Object[]) EObject.CreateDefaultSubobject<T>(Type, GameObject, String) EObject.CreateDefaultSubobject<T>(Type, GameObject, String, Object[]) EObject.CreateDefaultSubobject(Type, GameObject, String) EObject.CreateDefaultSubobject(Type, GameObject, String, Object[]) EObject.DestroyAllObjects() EObject.DestroyAllObjectsOfType<T>() EObject.FindActiveObjectOfType<T>(Func<EObject, Boolean>) EObject.FindActiveObjectsOfType<T>(Func<EObject, Boolean>) EObject.FindActiveObjectsOfType<T>() EObject.FindActiveObjectsOfType<T>(String) EObject.FindActiveObjectsOfType<T>(Type) EObject.FindActiveObjectsOfType<T>(Type, Func<EObject, Boolean>) EObject.FindActiveObjectsWithTagOfType<T>(String) EObject.FindActiveObjectsOfType<T>(Func<Object, Boolean>) EObject.FindActiveObjectsOfType<T>(Func<T, Boolean>) EObject.DestroyActiveObjectsOfType<T>() EObject.DestroyActiveObject<T>(GameObject) EObject.DestroyActiveObject(Type, GameObject) EObject.FindMostAppropriateEntry<T>(String, IEnumerable<T>) EObject.Destroy() EObject.GetHashCode() EObject.Equals(Object) EObject.Destroy(Boolean) EObject.OnDestroyed() TypeCastObject<EObject>.Cast<TObject>() TypeCastObject<EObject>.Cast<TObject>(TObject) TypeCastObject<EObject>.As<TObject>() TypeCastObject<EObject>.Is<TObject>(TObject) System.Object.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Core Assembly : Exiled.API.dll Syntax public sealed class TickComponent : EObject Fields | Improve this Doc View Source DefaultFixedTickRate The default fixed tick rate. Declaration public const float DefaultFixedTickRate = 0.016F Field Value Type Description System.Single Properties | Improve this Doc View Source BoundHandles Gets all the currently bound handles. Declaration public IReadOnlyCollection<CoroutineHandle> BoundHandles { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < MEC.CoroutineHandle > | Improve this Doc View Source CanEverTick Gets or sets a value indicating whether the EActor can tick. Declaration public bool CanEverTick { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Instructions Gets a System.Collections.Generic.List<T> of System.Action containing all the delegates to be invoked. Declaration public List<Action> Instructions { get; } Property Value Type Description System.Collections.Generic.List < System.Action > | Improve this Doc View Source TickRate Gets or sets the current tick rate. Declaration public float TickRate { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source BindHandle(CoroutineHandle) Binds a MEC.CoroutineHandle . Declaration public void BindHandle(CoroutineHandle handle) Parameters Type Name Description MEC.CoroutineHandle handle The MEC.CoroutineHandle to bind. | Improve this Doc View Source BindHandle(ref CoroutineHandle, IEnumerator<Single>) Binds a MEC.CoroutineHandle . Declaration public void BindHandle(ref CoroutineHandle handle, IEnumerator<float> coroutine) Parameters Type Name Description MEC.CoroutineHandle handle The MEC.CoroutineHandle to bind. System.Collections.Generic.IEnumerator < System.Single > coroutine The coroutine to handle. | Improve this Doc View Source OnBeginDestroy() Declaration protected override void OnBeginDestroy() Overrides EObject.OnBeginDestroy() | Improve this Doc View Source UnbindAllHandles() Unbinds all the currently bound handles. Declaration public void UnbindAllHandles() | Improve this Doc View Source UnbindHandle(CoroutineHandle) Unbinds a MEC.CoroutineHandle . Declaration public void UnbindHandle(CoroutineHandle handle) Parameters Type Name Description MEC.CoroutineHandle handle The MEC.CoroutineHandle to unbind. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Core.TypeCastObject-1.html": {
    "href": "api/Exiled.API.Features.Core.TypeCastObject-1.html",
    "title": "Class TypeCastObject<T> | EXILED Docs",
    "keywords": "Class TypeCastObject<T> The interface which allows defined objects to be cast to each other. Inheritance System.Object TypeCastObject<T> EObject Item Pickup Role Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Core Assembly : Exiled.API.dll Syntax public abstract class TypeCastObject<T> where T : class Type Parameters Name Description T The type of the object to cast. Constructors | Improve this Doc View Source TypeCastObject() Initializes a new instance of the TypeCastObject<T> class. Declaration protected TypeCastObject() Methods | Improve this Doc View Source As<TObject>() Declaration public TObject As<TObject>() where TObject : class Returns Type Description TObject Type Parameters Name Description TObject | Improve this Doc View Source Cast<TObject>() Unsafely casts the current T instance to the specified TObject type. Declaration public TObject Cast<TObject>() where TObject : class Returns Type Description TObject The cast T instance. Type Parameters Name Description TObject The type to which to cast the T instance. | Improve this Doc View Source Cast<TObject>(out TObject) Safely casts the current TObject instance to the specified TObject type. Declaration public bool Cast<TObject>(out TObject param) where TObject : class Parameters Type Name Description TObject param The cast object. Returns Type Description System.Boolean true if the TObject instance was successfully cast; otherwise, false . Type Parameters Name Description TObject The type to which to cast the TObject instance. | Improve this Doc View Source Is<TObject>(out TObject) Declaration public bool Is<TObject>(out TObject param) where TObject : class Parameters Type Name Description TObject param Returns Type Description System.Boolean Type Parameters Name Description TObject Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.CustomHealthStat.html": {
    "href": "api/Exiled.API.Features.CustomHealthStat.html",
    "title": "Class CustomHealthStat | EXILED Docs",
    "keywords": "Class CustomHealthStat A custom version of PlayerStatsSystem.HealthStat which allows the player's max amount of health to be changed. Inheritance System.Object PlayerStatsSystem.StatBase PlayerStatsSystem.SyncedStatBase PlayerStatsSystem.HealthStat CustomHealthStat Inherited Members PlayerStatsSystem.HealthStat.ReadValue(Mirror.NetworkReader) PlayerStatsSystem.HealthStat.WriteValue(Mirror.NetworkWriter) PlayerStatsSystem.HealthStat.CheckDirty(System.Single, System.Single) PlayerStatsSystem.HealthStat.ClassChanged() PlayerStatsSystem.HealthStat.ServerHeal(System.Single) PlayerStatsSystem.HealthStat.SyncId PlayerStatsSystem.HealthStat.Mode PlayerStatsSystem.HealthStat.MinValue PlayerStatsSystem.SyncedStatBase._lastValue PlayerStatsSystem.SyncedStatBase._lastSent PlayerStatsSystem.SyncedStatBase._valueDirty PlayerStatsSystem.SyncedStatBase.AllSyncedStats PlayerStatsSystem.SyncedStatBase.OnValueChanged(System.Single, System.Single) PlayerStatsSystem.SyncedStatBase.GetStatOfUser(System.UInt32, System.Byte) PlayerStatsSystem.SyncedStatBase.Update() PlayerStatsSystem.SyncedStatBase.CanReceive(ReferenceHub) PlayerStatsSystem.SyncedStatBase.InitOnLoad() PlayerStatsSystem.SyncedStatBase.CurValue PlayerStatsSystem.StatBase.<Hub>k__BackingField PlayerStatsSystem.StatBase.Init(ReferenceHub) PlayerStatsSystem.StatBase.NormalizedValue PlayerStatsSystem.StatBase.Hub System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class CustomHealthStat : HealthStat Properties | Improve this Doc View Source CustomMaxValue Gets or sets the maximum amount of health the player will have. Declaration public float CustomMaxValue { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxValue Declaration public override float MaxValue { get; } Property Value Type Description System.Single Overrides PlayerStatsSystem.HealthStat.MaxValue Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.DamageHandlers.AttackerDamageHandler.html": {
    "href": "api/Exiled.API.Features.DamageHandlers.AttackerDamageHandler.html",
    "title": "Class AttackerDamageHandler | EXILED Docs",
    "keywords": "Class AttackerDamageHandler A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase . Inheritance System.Object DamageHandlerBase DamageHandler AttackerDamageHandler CustomDamageHandler FirearmDamageHandler Inherited Members DamageHandler.Target DamageHandler.Attacker DamageHandler.TargetFootprint DamageHandler.AttackerFootprint DamageHandler.Damage DamageHandler.StartVelocity DamageHandler.DealtHealthDamage DamageHandler.AbsorbedAhpDamage DamageHandler.ApplyDamage(Player) DamageHandler.ToString() DamageHandlerBase.Base DamageHandlerBase.CassieDeathAnnouncement DamageHandlerBase.ServerLogsText DamageHandlerBase.Type DamageHandlerBase.DeathTranslation DamageHandlerBase.As<T>() DamageHandlerBase.BaseAs<T>() DamageHandlerBase.Is<T>(T) DamageHandlerBase.BaseIs<T>(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.DamageHandlers Assembly : Exiled.API.dll Syntax public abstract class AttackerDamageHandler : DamageHandler Constructors | Improve this Doc View Source AttackerDamageHandler(Player, Player) Initializes a new instance of the AttackerDamageHandler class. Declaration protected AttackerDamageHandler(Player target, Player attacker) Parameters Type Name Description Player target The target to be set. Player attacker The attacker to be set. | Improve this Doc View Source AttackerDamageHandler(Player, DamageHandlerBase) Initializes a new instance of the AttackerDamageHandler class. Declaration protected AttackerDamageHandler(Player target, DamageHandlerBase baseHandler) Parameters Type Name Description Player target The target to be set. PlayerStatsSystem.DamageHandlerBase baseHandler Properties | Improve this Doc View Source AllowSelfDamage Gets a value indicating whether the self damage is allowed. Declaration public bool AllowSelfDamage { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ForceFullFriendlyFire Gets or sets a value indicating whether the friendly fire should be forced. Declaration public bool ForceFullFriendlyFire { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsFriendlyFire Gets or sets a value indicating whether the damage is friendly fire. Declaration public bool IsFriendlyFire { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSuicide Gets or sets a value indicating whether the action is due to suicide. Declaration public bool IsSuicide { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source ProcessDamage(Player) Computes and processes the damage. Declaration public override void ProcessDamage(Player player) Parameters Type Name Description Player player The Player to damage. Overrides DamageHandlerBase.ProcessDamage(Player) Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.DamageHandlers.CustomDamageHandler.html": {
    "href": "api/Exiled.API.Features.DamageHandlers.CustomDamageHandler.html",
    "title": "Class CustomDamageHandler | EXILED Docs",
    "keywords": "Class CustomDamageHandler A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase . Inheritance System.Object DamageHandlerBase DamageHandler AttackerDamageHandler CustomDamageHandler Inherited Members AttackerDamageHandler.ForceFullFriendlyFire AttackerDamageHandler.IsSuicide AttackerDamageHandler.AllowSelfDamage AttackerDamageHandler.IsFriendlyFire AttackerDamageHandler.ProcessDamage(Player) DamageHandler.Target DamageHandler.Attacker DamageHandler.TargetFootprint DamageHandler.AttackerFootprint DamageHandler.Damage DamageHandler.StartVelocity DamageHandler.DealtHealthDamage DamageHandler.AbsorbedAhpDamage DamageHandler.ToString() DamageHandlerBase.Base DamageHandlerBase.CassieDeathAnnouncement DamageHandlerBase.ServerLogsText DamageHandlerBase.Type DamageHandlerBase.DeathTranslation DamageHandlerBase.As<T>() DamageHandlerBase.BaseAs<T>() DamageHandlerBase.Is<T>(T) DamageHandlerBase.BaseIs<T>(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.DamageHandlers Assembly : Exiled.API.dll Syntax public sealed class CustomDamageHandler : AttackerDamageHandler Constructors | Improve this Doc View Source CustomDamageHandler(Player, Player, Single, DamageType) Initializes a new instance of the CustomDamageHandler class. Declaration public CustomDamageHandler(Player target, Player attacker, float damage, DamageType damageType = DamageType.Unknown) Parameters Type Name Description Player target The target to be set. Player attacker The attacker to be set. System.Single damage The amount of damage to be set. DamageType damageType The DamageType to be set. | Improve this Doc View Source CustomDamageHandler(Player, Player, Single, DamageType, DamageHandlerBase.CassieAnnouncement) Initializes a new instance of the CustomDamageHandler class. Declaration public CustomDamageHandler(Player target, Player attacker, float damage, DamageType damageType, DamageHandlerBase.CassieAnnouncement cassieAnnouncement) Parameters Type Name Description Player target The target to be set. Player attacker The attacker to be set. System.Single damage The amount of damage to be set. DamageType damageType The DamageType to be set. DamageHandlerBase.CassieAnnouncement cassieAnnouncement The DamageHandlerBase.CassieAnnouncement to be set. | Improve this Doc View Source CustomDamageHandler(Player, Player, Single, DamageType, String) Initializes a new instance of the CustomDamageHandler class. Declaration public CustomDamageHandler(Player target, Player attacker, float damage, DamageType damageType, string cassieAnnouncement) Parameters Type Name Description Player target The target to be set. Player attacker The attacker to be set. System.Single damage The amount of damage to be set. DamageType damageType The DamageType to be set. System.String cassieAnnouncement The DamageHandlerBase.CassieAnnouncement to be set. | Improve this Doc View Source CustomDamageHandler(Player, DamageHandlerBase) Initializes a new instance of the CustomDamageHandler class. Declaration public CustomDamageHandler(Player target, DamageHandlerBase baseHandler) Parameters Type Name Description Player target The target to be set. PlayerStatsSystem.DamageHandlerBase baseHandler The base PlayerStatsSystem.DamageHandlerBase . Properties | Improve this Doc View Source CustomBase Gets the base DamageHandlerBase . Declaration public DamageHandlerBase CustomBase { get; } Property Value Type Description DamageHandlerBase Methods | Improve this Doc View Source ApplyDamage(Player) Declaration public override DamageHandlerBase.Action ApplyDamage(Player player) Parameters Type Name Description Player player Returns Type Description DamageHandlerBase.Action Overrides DamageHandler.ApplyDamage(Player) Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.DamageHandlers.DamageHandler.html": {
    "href": "api/Exiled.API.Features.DamageHandlers.DamageHandler.html",
    "title": "Class DamageHandler | EXILED Docs",
    "keywords": "Class DamageHandler A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase . Inheritance System.Object DamageHandlerBase DamageHandler AttackerDamageHandler ScpDamageHandler Inherited Members DamageHandlerBase.Base DamageHandlerBase.CassieDeathAnnouncement DamageHandlerBase.ServerLogsText DamageHandlerBase.Type DamageHandlerBase.DeathTranslation DamageHandlerBase.ProcessDamage(Player) DamageHandlerBase.As<T>() DamageHandlerBase.BaseAs<T>() DamageHandlerBase.Is<T>(T) DamageHandlerBase.BaseIs<T>(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.DamageHandlers Assembly : Exiled.API.dll Syntax public class DamageHandler : DamageHandlerBase Constructors | Improve this Doc View Source DamageHandler() Initializes a new instance of the DamageHandler class. Declaration public DamageHandler() | Improve this Doc View Source DamageHandler(Player, Player) Initializes a new instance of the DamageHandler class. Declaration public DamageHandler(Player target, Player attacker) Parameters Type Name Description Player target The target to be set. Player attacker The attacker to be set. | Improve this Doc View Source DamageHandler(Player, DamageHandlerBase) Initializes a new instance of the DamageHandler class. Declaration public DamageHandler(Player target, DamageHandlerBase baseHandler) Parameters Type Name Description Player target The target to be set. PlayerStatsSystem.DamageHandlerBase baseHandler Properties | Improve this Doc View Source AbsorbedAhpDamage Gets or sets the damage absorbed by AHP processes. Declaration public float AbsorbedAhpDamage { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Attacker Gets or sets the Player attacker. CAN BE NULL!. Declaration public Player Attacker { get; set; } Property Value Type Description Player | Improve this Doc View Source AttackerFootprint Gets or sets the attacker's Footprinting.Footprint . Declaration public Footprint AttackerFootprint { get; protected set; } Property Value Type Description Footprinting.Footprint | Improve this Doc View Source Damage Gets or sets the amount of damage to be dealt. Declaration public virtual float Damage { get; set; } Property Value Type Description System.Single | Improve this Doc View Source DealtHealthDamage Gets or sets the direct damage. Declaration public float DealtHealthDamage { get; set; } Property Value Type Description System.Single | Improve this Doc View Source StartVelocity Gets or sets the start velocity. Declaration public Vector3 StartVelocity { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Target Gets or sets the Player target. Declaration public Player Target { get; protected set; } Property Value Type Description Player | Improve this Doc View Source TargetFootprint Gets or sets the target's Footprinting.Footprint . Declaration public Footprint TargetFootprint { get; protected set; } Property Value Type Description Footprinting.Footprint Methods | Improve this Doc View Source ApplyDamage(Player) Declaration public override DamageHandlerBase.Action ApplyDamage(Player player) Parameters Type Name Description Player player Returns Type Description DamageHandlerBase.Action Overrides DamageHandlerBase.ApplyDamage(Player) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.DamageHandlers.DamageHandlerBase.Action.html": {
    "href": "api/Exiled.API.Features.DamageHandlers.DamageHandlerBase.Action.html",
    "title": "Enum DamageHandlerBase.Action | EXILED Docs",
    "keywords": "Enum DamageHandlerBase.Action All available DamageHandler actions. Namespace : Exiled.API.Features.DamageHandlers Assembly : Exiled.API.dll Syntax public enum Action : byte Fields Name Description Damage The result is determined by a damage action. Death The result is determined by a death action. None None. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Features.DamageHandlers.DamageHandlerBase.CassieAnnouncement.html": {
    "href": "api/Exiled.API.Features.DamageHandlers.DamageHandlerBase.CassieAnnouncement.html",
    "title": "Class DamageHandlerBase.CassieAnnouncement | EXILED Docs",
    "keywords": "Class DamageHandlerBase.CassieAnnouncement A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase.CassieAnnouncement . Inheritance System.Object DamageHandlerBase.CassieAnnouncement Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.DamageHandlers Assembly : Exiled.API.dll Syntax public class CassieAnnouncement Constructors | Improve this Doc View Source CassieAnnouncement(String) Initializes a new instance of the DamageHandlerBase.CassieAnnouncement class. Declaration public CassieAnnouncement(string announcement) Parameters Type Name Description System.String announcement The announcement to be set. | Improve this Doc View Source CassieAnnouncement(String, IEnumerable<SubtitlePart>) Initializes a new instance of the DamageHandlerBase.CassieAnnouncement class. Declaration public CassieAnnouncement(string announcement, IEnumerable<SubtitlePart> subtitleParts) Parameters Type Name Description System.String announcement The announcement to be set. System.Collections.Generic.IEnumerable < Subtitles.SubtitlePart > subtitleParts The subtitles to be set. Properties | Improve this Doc View Source Announcement Gets or sets the announcement. Declaration public string Announcement { get; set; } Property Value Type Description System.String | Improve this Doc View Source Default Gets the default announcement. Declaration public static DamageHandlerBase.CassieAnnouncement Default { get; } Property Value Type Description DamageHandlerBase.CassieAnnouncement | Improve this Doc View Source SubtitleParts Gets or sets a System.Collections.Generic.IEnumerable<T> of Subtitles.SubtitlePart which determines the result of the subtitle belonging to this DamageHandlerBase.CassieAnnouncement instance. Declaration public IEnumerable<SubtitlePart> SubtitleParts { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < Subtitles.SubtitlePart > Operators | Improve this Doc View Source Implicit(DamageHandlerBase.CassieAnnouncement to DamageHandlerBase.CassieAnnouncement) Implicitly converts the given DamageHandlerBase.CassieAnnouncement instance to a PlayerStatsSystem.DamageHandlerBase.CassieAnnouncement object. Declaration public static implicit operator DamageHandlerBase.CassieAnnouncement(DamageHandlerBase.CassieAnnouncement cassieAnnouncement) Parameters Type Name Description DamageHandlerBase.CassieAnnouncement cassieAnnouncement The DamageHandlerBase.CassieAnnouncement instance. Returns Type Description PlayerStatsSystem.DamageHandlerBase.CassieAnnouncement | Improve this Doc View Source Implicit(DamageHandlerBase.CassieAnnouncement to DamageHandlerBase.CassieAnnouncement) Implicitly converts the given PlayerStatsSystem.DamageHandlerBase.CassieAnnouncement instance to a DamageHandlerBase.CassieAnnouncement object. Declaration public static implicit operator DamageHandlerBase.CassieAnnouncement(DamageHandlerBase.CassieAnnouncement cassieAnnouncement) Parameters Type Name Description PlayerStatsSystem.DamageHandlerBase.CassieAnnouncement cassieAnnouncement The DamageHandlerBase.CassieAnnouncement instance. Returns Type Description DamageHandlerBase.CassieAnnouncement Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.DamageHandlers.DamageHandlerBase.html": {
    "href": "api/Exiled.API.Features.DamageHandlers.DamageHandlerBase.html",
    "title": "Class DamageHandlerBase | EXILED Docs",
    "keywords": "Class DamageHandlerBase A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase . Inheritance System.Object DamageHandlerBase DamageHandler Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.DamageHandlers Assembly : Exiled.API.dll Syntax public abstract class DamageHandlerBase Constructors | Improve this Doc View Source DamageHandlerBase() Initializes a new instance of the DamageHandlerBase class. Declaration protected DamageHandlerBase() | Improve this Doc View Source DamageHandlerBase(DamageHandlerBase) Initializes a new instance of the DamageHandlerBase class. Declaration protected DamageHandlerBase(DamageHandlerBase baseHandler) Parameters Type Name Description PlayerStatsSystem.DamageHandlerBase baseHandler The base PlayerStatsSystem.DamageHandlerBase . Properties | Improve this Doc View Source Base Gets or sets the base PlayerStatsSystem.DamageHandlerBase . Declaration public DamageHandlerBase Base { get; protected set; } Property Value Type Description PlayerStatsSystem.DamageHandlerBase | Improve this Doc View Source CassieDeathAnnouncement Gets or sets the DamageHandlerBase.CassieAnnouncement belonging to this DamageHandler instance. Declaration public virtual DamageHandlerBase.CassieAnnouncement CassieDeathAnnouncement { get; protected set; } Property Value Type Description DamageHandlerBase.CassieAnnouncement | Improve this Doc View Source DeathTranslation Gets the PlayerStatsSystem.DeathTranslation . Declaration public virtual DeathTranslation DeathTranslation { get; } Property Value Type Description PlayerStatsSystem.DeathTranslation | Improve this Doc View Source ServerLogsText Gets the text to show in the server logs. Declaration public virtual string ServerLogsText { get; } Property Value Type Description System.String | Improve this Doc View Source Type Gets or sets the DamageType for the damage handler. Declaration public virtual DamageType Type { get; protected set; } Property Value Type Description DamageType Methods | Improve this Doc View Source ApplyDamage(Player) Applies the damage to the specified Player . Declaration public abstract DamageHandlerBase.Action ApplyDamage(Player player) Parameters Type Name Description Player player The Player to damage. Returns Type Description DamageHandlerBase.Action The DamageHandlerBase.Action of the call to this method. | Improve this Doc View Source As<T>() Unsafely casts the damage handler to the specified PlayerStatsSystem.DamageHandlerBase type. Declaration public T As<T>() where T : DamageHandlerBase Returns Type Description T A PlayerStatsSystem.DamageHandlerBase object. Type Parameters Name Description T The specified PlayerStatsSystem.DamageHandlerBase type. | Improve this Doc View Source BaseAs<T>() Unsafely casts the damage handler to the specified DamageHandlerBase type. Declaration public T BaseAs<T>() where T : DamageHandlerBase Returns Type Description T A DamageHandlerBase object. Type Parameters Name Description T The specified DamageHandlerBase type. | Improve this Doc View Source BaseIs<T>(out T) Safely casts the damage handler to the specified DamageHandlerBase type. Declaration public bool BaseIs<T>(out T param) where T : DamageHandlerBase Parameters Type Name Description T param The casted DamageHandlerBase . Returns Type Description System.Boolean A DamageHandlerBase object. Type Parameters Name Description T The specified DamageHandlerBase type. | Improve this Doc View Source Is<T>(out T) Safely casts the damage handler to the specified PlayerStatsSystem.DamageHandlerBase type. Declaration public bool Is<T>(out T param) where T : DamageHandlerBase Parameters Type Name Description T param The casted PlayerStatsSystem.DamageHandlerBase . Returns Type Description System.Boolean A PlayerStatsSystem.DamageHandlerBase object. Type Parameters Name Description T The specified PlayerStatsSystem.DamageHandlerBase type. | Improve this Doc View Source ProcessDamage(Player) Computes and processes the damage. Declaration public virtual void ProcessDamage(Player player) Parameters Type Name Description Player player The Player to damage. Operators | Improve this Doc View Source Implicit(DamageHandlerBase to DamageHandlerBase) Implicitly converts the given DamageHandlerBase instance to a PlayerStatsSystem.DamageHandlerBase object. Declaration public static implicit operator DamageHandlerBase(DamageHandlerBase damageHandlerBase) Parameters Type Name Description DamageHandlerBase damageHandlerBase The DamageHandlerBase instance. Returns Type Description PlayerStatsSystem.DamageHandlerBase Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.DamageHandlers.FirearmDamageHandler.html": {
    "href": "api/Exiled.API.Features.DamageHandlers.FirearmDamageHandler.html",
    "title": "Class FirearmDamageHandler | EXILED Docs",
    "keywords": "Class FirearmDamageHandler A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase . Inheritance System.Object DamageHandlerBase DamageHandler AttackerDamageHandler FirearmDamageHandler Inherited Members AttackerDamageHandler.ForceFullFriendlyFire AttackerDamageHandler.IsSuicide AttackerDamageHandler.AllowSelfDamage AttackerDamageHandler.IsFriendlyFire DamageHandler.Target DamageHandler.Attacker DamageHandler.TargetFootprint DamageHandler.AttackerFootprint DamageHandler.Damage DamageHandler.StartVelocity DamageHandler.DealtHealthDamage DamageHandler.AbsorbedAhpDamage DamageHandler.ApplyDamage(Player) DamageHandlerBase.Base DamageHandlerBase.CassieDeathAnnouncement DamageHandlerBase.ServerLogsText DamageHandlerBase.DeathTranslation DamageHandlerBase.As<T>() DamageHandlerBase.BaseAs<T>() DamageHandlerBase.Is<T>(T) DamageHandlerBase.BaseIs<T>(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.DamageHandlers Assembly : Exiled.API.dll Syntax public sealed class FirearmDamageHandler : AttackerDamageHandler Constructors | Improve this Doc View Source FirearmDamageHandler(Item, Player, DamageHandlerBase) Initializes a new instance of the FirearmDamageHandler class. Declaration public FirearmDamageHandler(Item item, Player target, DamageHandlerBase baseHandler) Parameters Type Name Description Item item The Item to be set. Player target The target to be set. PlayerStatsSystem.DamageHandlerBase baseHandler Properties | Improve this Doc View Source Hitbox Gets or sets the HitboxType . Declaration public HitboxType Hitbox { get; set; } Property Value Type Description HitboxType | Improve this Doc View Source Item Gets or sets the Item used by the damage handler. Declaration public Item Item { get; set; } Property Value Type Description Item | Improve this Doc View Source Penetration Gets the penetration. Declaration public float Penetration { get; } Property Value Type Description System.Single | Improve this Doc View Source Type Declaration public override DamageType Type { get; } Property Value Type Description DamageType Overrides DamageHandlerBase.Type | Improve this Doc View Source UseHumanHitboxes Gets a value indicating whether the human hitboxes should be used. Declaration public bool UseHumanHitboxes { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source ProcessDamage(Player) Declaration public override void ProcessDamage(Player player) Parameters Type Name Description Player player Overrides AttackerDamageHandler.ProcessDamage(Player) | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides DamageHandler.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.DamageHandlers.GenericDamageHandler.html": {
    "href": "api/Exiled.API.Features.DamageHandlers.GenericDamageHandler.html",
    "title": "Class GenericDamageHandler | EXILED Docs",
    "keywords": "Class GenericDamageHandler Allows generic damage to player. Inheritance System.Object PlayerStatsSystem.DamageHandlerBase PlayerStatsSystem.StandardDamageHandler PlayerStatsSystem.CustomReasonDamageHandler GenericDamageHandler Inherited Members PlayerStatsSystem.CustomReasonDamageHandler.<Damage>k__BackingField PlayerStatsSystem.CustomReasonDamageHandler._deathReason PlayerStatsSystem.CustomReasonDamageHandler._cassieAnnouncement PlayerStatsSystem.CustomReasonDamageHandler.WriteAdditionalData(Mirror.NetworkWriter) PlayerStatsSystem.CustomReasonDamageHandler.ReadAdditionalData(Mirror.NetworkReader) PlayerStatsSystem.CustomReasonDamageHandler.CassieDeathAnnouncement PlayerStatsSystem.StandardDamageHandler.<DealtHealthDamage>k__BackingField PlayerStatsSystem.StandardDamageHandler.<AbsorbedAhpDamage>k__BackingField PlayerStatsSystem.StandardDamageHandler.<AbsorbedHumeDamage>k__BackingField PlayerStatsSystem.StandardDamageHandler.KillValue PlayerStatsSystem.StandardDamageHandler.Hitbox PlayerStatsSystem.StandardDamageHandler.StartVelocity PlayerStatsSystem.StandardDamageHandler._velX PlayerStatsSystem.StandardDamageHandler._velY PlayerStatsSystem.StandardDamageHandler._velZ PlayerStatsSystem.StandardDamageHandler.ProcessDamage(ReferenceHub) PlayerStatsSystem.StandardDamageHandler.ProcessRagdoll(BasicRagdoll) PlayerStatsSystem.StandardDamageHandler.DealtHealthDamage PlayerStatsSystem.StandardDamageHandler.AbsorbedAhpDamage PlayerStatsSystem.StandardDamageHandler.AbsorbedHumeDamage PlayerStatsSystem.DamageHandlerBase.WriteDeathScreen(Mirror.NetworkWriter) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.DamageHandlers Assembly : Exiled.API.dll Syntax public class GenericDamageHandler : CustomReasonDamageHandler Constructors | Improve this Doc View Source GenericDamageHandler(Player, Player, Single, DamageType, DamageHandlerBase.CassieAnnouncement, String) Initializes a new instance of the GenericDamageHandler class. Transform input data to custom generic handler. Declaration public GenericDamageHandler(Player player, Player attacker, float damage, DamageType damageType, DamageHandlerBase.CassieAnnouncement cassieAnnouncement, string damageText = null) Parameters Type Name Description Player player Current player (Target). Player attacker Attacker. System.Single damage Damage quantity. DamageType damageType Damage type. DamageHandlerBase.CassieAnnouncement cassieAnnouncement Custom cassie announcment. System.String damageText Text to provide to player death screen. Properties | Improve this Doc View Source AllowSelfDamage Gets a value indicating whether allow self damage. Declaration public bool AllowSelfDamage { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Attacker Gets or sets current attacker. Declaration public Footprint Attacker { get; set; } Property Value Type Description Footprinting.Footprint | Improve this Doc View Source Base Gets or sets custom base. Declaration public DamageHandlerBase Base { get; set; } Property Value Type Description PlayerStatsSystem.DamageHandlerBase | Improve this Doc View Source Damage Declaration public override float Damage { get; set; } Property Value Type Description System.Single Overrides PlayerStatsSystem.CustomReasonDamageHandler.Damage | Improve this Doc View Source ServerLogsText Declaration public override string ServerLogsText { get; } Property Value Type Description System.String Overrides PlayerStatsSystem.CustomReasonDamageHandler.ServerLogsText Methods | Improve this Doc View Source ApplyDamage(ReferenceHub) Custom Exiled process damage. Declaration public override DamageHandlerBase.HandlerOutput ApplyDamage(ReferenceHub ply) Parameters Type Name Description ReferenceHub ply Current player hub. Returns Type Description PlayerStatsSystem.DamageHandlerBase.HandlerOutput Handles processing damage outcome. Overrides PlayerStatsSystem.StandardDamageHandler.ApplyDamage(ReferenceHub) Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.DamageHandlers.html": {
    "href": "api/Exiled.API.Features.DamageHandlers.html",
    "title": "Namespace Exiled.API.Features.DamageHandlers | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.DamageHandlers Classes AttackerDamageHandler A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase . CustomDamageHandler A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase . DamageHandler A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase . DamageHandlerBase A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase . DamageHandlerBase.CassieAnnouncement A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase.CassieAnnouncement . FirearmDamageHandler A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase . GenericDamageHandler Allows generic damage to player. ScpDamageHandler A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase . Enums DamageHandlerBase.Action All available DamageHandler actions."
  },
  "api/Exiled.API.Features.DamageHandlers.ScpDamageHandler.html": {
    "href": "api/Exiled.API.Features.DamageHandlers.ScpDamageHandler.html",
    "title": "Class ScpDamageHandler | EXILED Docs",
    "keywords": "Class ScpDamageHandler A wrapper to easily manipulate the behavior of PlayerStatsSystem.DamageHandlerBase . Inheritance System.Object DamageHandlerBase DamageHandler ScpDamageHandler Inherited Members DamageHandler.Target DamageHandler.Attacker DamageHandler.TargetFootprint DamageHandler.AttackerFootprint DamageHandler.Damage DamageHandler.StartVelocity DamageHandler.DealtHealthDamage DamageHandler.AbsorbedAhpDamage DamageHandler.ApplyDamage(Player) DamageHandler.ToString() DamageHandlerBase.Base DamageHandlerBase.CassieDeathAnnouncement DamageHandlerBase.ServerLogsText DamageHandlerBase.DeathTranslation DamageHandlerBase.ProcessDamage(Player) DamageHandlerBase.As<T>() DamageHandlerBase.BaseAs<T>() DamageHandlerBase.Is<T>(T) DamageHandlerBase.BaseIs<T>(T) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.DamageHandlers Assembly : Exiled.API.dll Syntax public sealed class ScpDamageHandler : DamageHandler Constructors | Improve this Doc View Source ScpDamageHandler(Player, DamageHandlerBase) Initializes a new instance of the ScpDamageHandler class. Declaration public ScpDamageHandler(Player target, DamageHandlerBase baseHandler) Parameters Type Name Description Player target The target to be set. PlayerStatsSystem.DamageHandlerBase baseHandler Properties | Improve this Doc View Source Type Declaration public override DamageType Type { get; } Property Value Type Description DamageType Overrides DamageHandlerBase.Type Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Door.html": {
    "href": "api/Exiled.API.Features.Door.html",
    "title": "Class Door | EXILED Docs",
    "keywords": "Class Door A wrapper class for Interactables.Interobjects.DoorUtils.DoorVariant . Inheritance System.Object Door Implements IWrapper < Interactables.Interobjects.DoorUtils.DoorVariant > IWorldSpace IPosition IRotation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Door : IWrapper<DoorVariant>, IWorldSpace, IPosition, IRotation Constructors | Improve this Doc View Source Door(DoorVariant, Room) Initializes a new instance of the Door class. Declaration public Door(DoorVariant door, Room room) Parameters Type Name Description Interactables.Interobjects.DoorUtils.DoorVariant door The base Interactables.Interobjects.DoorUtils.DoorVariant for this door. Room room The Room for this door. Properties | Improve this Doc View Source AllowsScp106 Gets a value indicating whether or not SCP-106 can walk through the door. Declaration public bool AllowsScp106 { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Base Gets the base-game Interactables.Interobjects.DoorUtils.DoorVariant for this door. Declaration public DoorVariant Base { get; } Property Value Type Description Interactables.Interobjects.DoorUtils.DoorVariant | Improve this Doc View Source DoorLockType Gets or the door lock type. Declaration public DoorLockType DoorLockType { get; } Property Value Type Description DoorLockType | Improve this Doc View Source ExactState Gets a value indicating the precise state of the door, from 0-1 . A value of 0 indicates the door is fully closed, while a value of 1 indicates the door is fully open. Values in-between represent the door's animation progress. Declaration public float ExactState { get; } Property Value Type Description System.Single | Improve this Doc View Source GameObject Gets the UnityEngine.GameObject of the door. Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source Health Gets or sets the door's remaining health. No effect if the door cannot be broken. Declaration public float Health { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IgnoredDamageTypes Gets or sets the damage types this door ignores, if it is breakable. Declaration public DoorDamageType IgnoredDamageTypes { get; set; } Property Value Type Description Interactables.Interobjects.DoorUtils.DoorDamageType | Improve this Doc View Source IgnoresLockdowns Gets a value indicating whether or not this door is ignoring lockdown. Declaration public bool IgnoresLockdowns { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IgnoresRemoteAdmin Gets a value indicating whether or not this door is ignoring remoteAdmin commands. Declaration public bool IgnoresRemoteAdmin { get; } Property Value Type Description System.Boolean | Improve this Doc View Source InstanceId Gets the door's Instance ID. Declaration public int InstanceId { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsBreakable Gets a value indicating whether or not this door is breakable. Declaration public bool IsBreakable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsBroken Gets a value indicating whether or not this door is broken. Declaration public bool IsBroken { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsCheckpoint Gets a value indicating whether or not this door is a checkpoint door. Declaration public bool IsCheckpoint { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsElevator Gets a value indicating whether or not this door is an elevator door. Declaration public bool IsElevator { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsFullyClosed Gets a value indicating whether or not the door is fully closed. Declaration public bool IsFullyClosed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsFullyOpen Gets a value indicating whether the door is fully open. Declaration public bool IsFullyOpen { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGate Gets a value indicating whether or not this door is a gate. Declaration public bool IsGate { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsKeycardDoor Gets a value indicating whether or not this door requires a keycard to open. Declaration public bool IsKeycardDoor { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLocked Gets a value indicating whether or not the door is locked. Declaration public bool IsLocked { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMoving Gets a value indicating whether or not the door is currently moving. Declaration public bool IsMoving { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOpen Gets or sets a value indicating whether the door is open. Declaration public bool IsOpen { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source List Gets a System.Collections.Generic.IEnumerable<T> of Door which contains all the Door instances. Declaration public static IEnumerable<Door> List { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Door > | Improve this Doc View Source MaxHealth Gets or sets the max health of the door. No effect if the door cannot be broken. Declaration public float MaxHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Name Gets the name of this door. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Nametag Gets a nametag of a door. Declaration public DoorNametagExtension Nametag { get; } Property Value Type Description Interactables.Interobjects.DoorUtils.DoorNametagExtension | Improve this Doc View Source Position Gets or sets the door's position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source RequiredPermissions Gets or sets the required permissions to open the door. Declaration public DoorPermissions RequiredPermissions { get; set; } Property Value Type Description Interactables.Interobjects.DoorUtils.DoorPermissions | Improve this Doc View Source Room Gets the Room that the door is located in. Declaration public Room Room { get; } Property Value Type Description Room | Improve this Doc View Source Rotation Gets or sets the door's rotation. Declaration public Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Scale Gets or sets the size scale of the door. Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Transform Gets the door's UnityEngine.Transform . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source Type Gets the DoorType of the door. Declaration public DoorType Type { get; } Property Value Type Description DoorType | Improve this Doc View Source Zone Gets the door's ZoneType . Declaration public ZoneType Zone { get; } Property Value Type Description ZoneType Methods | Improve this Doc View Source BreakDoor(DoorDamageType) Breaks the specified door. No effect if the door cannot be broken, or if it is already broken. Declaration public bool BreakDoor(DoorDamageType type = DoorDamageType.ServerCommand) Parameters Type Name Description Interactables.Interobjects.DoorUtils.DoorDamageType type The Interactables.Interobjects.DoorUtils.DoorDamageType to apply to the door. Returns Type Description System.Boolean true if the door was broken, false if it was unable to be broken, or was already broken before. | Improve this Doc View Source ChangeLock(DoorLockType) Change the door lock with the given lock type. Declaration public void ChangeLock(DoorLockType lockType) Parameters Type Name Description DoorLockType lockType The DoorLockType to use. | Improve this Doc View Source DamageDoor(Single, DoorDamageType) Damages the door. No effect if the door cannot be broken. Declaration public bool DamageDoor(float amount, DoorDamageType type = DoorDamageType.ServerCommand) Parameters Type Name Description System.Single amount The amount of damage to deal. Interactables.Interobjects.DoorUtils.DoorDamageType type The damage type to use. Returns Type Description System.Boolean true if the door was damaged. | Improve this Doc View Source Get(DoorType) Gets a Door given the specified DoorType . Declaration public static Door Get(DoorType doorType) Parameters Type Name Description DoorType doorType The DoorType to search for. Returns Type Description Door The Door with the given DoorType or null if not found. | Improve this Doc View Source Get(DoorVariant) Gets the door object associated with a specific Interactables.Interobjects.DoorUtils.DoorVariant , or creates a new one if there isn't one. Declaration public static Door Get(DoorVariant doorVariant) Parameters Type Name Description Interactables.Interobjects.DoorUtils.DoorVariant doorVariant The base-game Interactables.Interobjects.DoorUtils.DoorVariant . Returns Type Description Door A Door wrapper object. | Improve this Doc View Source Get(Func<Door, Boolean>) Gets a System.Collections.Generic.IEnumerable<T> of Door filtered based on a predicate. Declaration public static IEnumerable<Door> Get(Func<Door, bool> predicate) Parameters Type Name Description System.Func < Door , System.Boolean > predicate The condition to satify. Returns Type Description System.Collections.Generic.IEnumerable < Door > A System.Collections.Generic.IEnumerable<T> of Door which contains elements that satify the condition. | Improve this Doc View Source Get(String) Gets a Door given the specified name. Declaration public static Door Get(string name) Parameters Type Name Description System.String name The name to search for. Returns Type Description Door The Door with the given name or null if not found. | Improve this Doc View Source Get(GameObject) Gets the door object associated with a specific UnityEngine.GameObject , or creates a new one if there isn't one. Declaration public static Door Get(GameObject gameObject) Parameters Type Name Description UnityEngine.GameObject gameObject The base-game UnityEngine.GameObject . Returns Type Description Door The Door with the given name or null if not found. | Improve this Doc View Source GetClosest(Vector3, out Single) Returns the closest Door to the given position . Declaration public static Door GetClosest(Vector3 position, out float distance) Parameters Type Name Description UnityEngine.Vector3 position The UnityEngine.Vector3 to find the closest door to. System.Single distance The distance between the door and the point. Returns Type Description Door The door closest to the provided position. | Improve this Doc View Source Lock(Single, DoorLockType) Locks all active locks on the door, and then reverts back any changes after a specified length of time. Declaration public void Lock(float time, DoorLockType lockType) Parameters Type Name Description System.Single time The amount of time that must pass before unlocking the door. DoorLockType lockType The DoorLockType of the lockdown. | Improve this Doc View Source LockAll(Single, DoorLockType) Locks all doors in the facility. Declaration public static void LockAll(float duration, DoorLockType lockType = DoorLockType.Regular079) Parameters Type Name Description System.Single duration The duration of the lockdown. DoorLockType lockType The specified DoorLockType . | Improve this Doc View Source LockAll(Single, ZoneType, DoorLockType) Locks all doors given the specified ZoneType . Declaration public static void LockAll(float duration, ZoneType zoneType = ZoneType.Unspecified, DoorLockType lockType = DoorLockType.Regular079) Parameters Type Name Description System.Single duration The duration of the lockdown. ZoneType zoneType The ZoneType to affect. DoorLockType lockType The specified DoorLockType . | Improve this Doc View Source LockAll(Single, IEnumerable<ZoneType>, DoorLockType) Locks all doors given the specified ZoneType . Declaration public static void LockAll(float duration, IEnumerable<ZoneType> zoneTypes, DoorLockType lockType = DoorLockType.Regular079) Parameters Type Name Description System.Single duration The duration of the lockdown. System.Collections.Generic.IEnumerable < ZoneType > zoneTypes The ZoneType s to affect. DoorLockType lockType The specified DoorLockType . | Improve this Doc View Source PlaySound(DoorBeepType) Makes the door play a beep sound. Declaration public void PlaySound(DoorBeepType beep) Parameters Type Name Description DoorBeepType beep The beep sound to play. | Improve this Doc View Source Random(ZoneType, Boolean) Gets a random Door . Declaration public static Door Random(ZoneType type = ZoneType.Unspecified, bool onlyUnbroken = false) Parameters Type Name Description ZoneType type Filters by ZoneType . System.Boolean onlyUnbroken A value indicating whether it filters broken doors. Returns Type Description Door Door object. | Improve this Doc View Source ToString() Returns the Door in a human-readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Door-related data. Overrides System.Object.ToString() | Improve this Doc View Source TryPryOpen() Tries to pry the door open. No effect if the door cannot be pried. Declaration public bool TryPryOpen() Returns Type Description System.Boolean true if the door was able to be pried open. | Improve this Doc View Source TryPryOpen(Player) Tries to pry the door open. No effect if the door cannot be pried. Declaration public bool TryPryOpen(Player player) Parameters Type Name Description Player player The amount of damage to deal. Returns Type Description System.Boolean true if the door was able to be pried open. | Improve this Doc View Source Unlock() Unlocks and clears all active locks on the door. Declaration public void Unlock() | Improve this Doc View Source Unlock(Single, DoorLockType) Unlocks and clears all active locks on the door after a specified length of time. Declaration public void Unlock(float time, DoorLockType flagsToUnlock) Parameters Type Name Description System.Single time The amount of time that must pass before unlocking the door. DoorLockType flagsToUnlock The DoorLockType of the lockdown. | Improve this Doc View Source UnlockAll() Unlocks all doors in the facility. Declaration public static void UnlockAll() | Improve this Doc View Source UnlockAll(ZoneType) Unlocks all doors in the facility. Declaration public static void UnlockAll(ZoneType zoneType) Parameters Type Name Description ZoneType zoneType The ZoneType to affect. | Improve this Doc View Source UnlockAll(IEnumerable<ZoneType>) Unlocks all doors in the facility. Declaration public static void UnlockAll(IEnumerable<ZoneType> zoneTypes) Parameters Type Name Description System.Collections.Generic.IEnumerable < ZoneType > zoneTypes The ZoneType s to affect. | Improve this Doc View Source UnlockAll(Func<Door, Boolean>) Unlocks all doors in the facility. Declaration public static void UnlockAll(Func<Door, bool> predicate) Parameters Type Name Description System.Func < Door , System.Boolean > predicate The condition to satify. Implements IWrapper<T> IWorldSpace IPosition IRotation Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Effect.html": {
    "href": "api/Exiled.API.Features.Effect.html",
    "title": "Class Effect | EXILED Docs",
    "keywords": "Class Effect Useful class to save hint configs in a cleaner way. Inheritance System.Object Effect Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Effect Constructors | Improve this Doc View Source Effect() Initializes a new instance of the Effect class. Declaration public Effect() | Improve this Doc View Source Effect(EffectType, Single, Byte, Boolean, Boolean) Initializes a new instance of the Effect class. Declaration public Effect(EffectType type, float duration, byte intensity = 1, bool addDurationIfActive = false, bool isEnabled = true) Parameters Type Name Description EffectType type The type of the effect>. System.Single duration The duration of the effect, in seconds. System.Byte intensity The intensity of the effect. System.Boolean addDurationIfActive Whether the effect will add duration onto the effect if already active or not. System.Boolean isEnabled Whether or not the effect should be enabled. Properties | Improve this Doc View Source AddDurationIfActive Gets or sets a value indicating whether the effect will add duration onto the effect if already active or not. Declaration public bool AddDurationIfActive { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Duration Gets or sets the effect duration. Declaration public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Intensity Gets or sets the effect intensity. Declaration public byte Intensity { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source IsEnabled Gets or sets a value indicating whether the effect should be enabled or not. Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Type Gets or sets the effect type. Declaration public EffectType Type { get; set; } Property Value Type Description EffectType Methods | Improve this Doc View Source ToString() Returns the effect in a human-readable format. Declaration public override string ToString() Returns Type Description System.String A string containing effect-related data. Overrides System.Object.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Generator.html": {
    "href": "api/Exiled.API.Features.Generator.html",
    "title": "Class Generator | EXILED Docs",
    "keywords": "Class Generator Wrapper class for MapGeneration.Distributors.Scp079Generator . Inheritance System.Object Generator Implements IWrapper < MapGeneration.Distributors.Scp079Generator > IWorldSpace IPosition IRotation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Generator : IWrapper<Scp079Generator>, IWorldSpace, IPosition, IRotation Properties | Improve this Doc View Source ActivationTime Gets or sets the generator's activation time. Declaration public float ActivationTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Base Gets the base MapGeneration.Distributors.Scp079Generator . Declaration public Scp079Generator Base { get; } Property Value Type Description MapGeneration.Distributors.Scp079Generator | Improve this Doc View Source CurrentTime Gets or sets the generator's current time. Declaration public short CurrentTime { get; set; } Property Value Type Description System.Int16 | Improve this Doc View Source DeactivationTime Gets or sets the generator's deactivation time. Declaration public float DeactivationTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source DeniedUnlockCooldown Gets or sets the interaction cooldown to wait after failing the generator's unlock interaction. Declaration public float DeniedUnlockCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source DropdownSpeed Gets the generator's dropdown speed. Declaration public float DropdownSpeed { get; } Property Value Type Description System.Single | Improve this Doc View Source GameObject Gets the UnityEngine.GameObject of the generator. Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source InteractionCooldown Gets or sets current interaction cooldown. Declaration public float InteractionCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsActivating Gets or sets a value indicating whether the generator is activating. Declaration public bool IsActivating { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsEngaged Gets or sets a value indicating whether the generator is engaged. Declaration public bool IsEngaged { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOpen Gets or sets a value indicating whether the generator is open. Declaration public bool IsOpen { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsReady Gets a value indicating whether the generator is ready to be activated. Declaration public bool IsReady { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUnlocked Gets or sets a value indicating whether the generator is unlocked. Declaration public bool IsUnlocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KeycardPermissions Gets or sets the required permissions to interact with the generator. Declaration public KeycardPermissions KeycardPermissions { get; set; } Property Value Type Description KeycardPermissions | Improve this Doc View Source LastActivator Gets or sets the last activator for the generator. Declaration public Player LastActivator { get; set; } Property Value Type Description Player | Improve this Doc View Source LeverDelay Gets or sets the generator's lever delay. Declaration public float LeverDelay { get; set; } Property Value Type Description System.Single | Improve this Doc View Source List Gets a System.Collections.Generic.IEnumerable<T> of Generator which contains all the Generator instances. Declaration public static IEnumerable<Generator> List { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Generator > | Improve this Doc View Source Position Gets the generator position. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Room Gets the generator's Room . Declaration public Room Room { get; } Property Value Type Description Room | Improve this Doc View Source Rotation Gets the generator rotation. Declaration public Quaternion Rotation { get; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source State Gets or sets the generator' state. Declaration public GeneratorState State { get; set; } Property Value Type Description GeneratorState | Improve this Doc View Source TogglePanelCooldown Gets or sets the cooldown to wait before toggling the generator's panel. Declaration public float TogglePanelCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Transform Gets the UnityEngine.Transform of the generator. Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source UnlockCooldown Gets or sets the interaction cooldown to wait after unlocking the generator. Declaration public float UnlockCooldown { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source DenyUnlock() Denies the unlock. Declaration public void DenyUnlock() | Improve this Doc View Source DenyUnlockAndResetCooldown() Denies the unlock and resets the interaction cooldown. Declaration public void DenyUnlockAndResetCooldown() | Improve this Doc View Source Get(GeneratorState) Gets a System.Collections.Generic.IEnumerable<T> of Generator given the specified GeneratorState . Declaration public static IEnumerable<Generator> Get(GeneratorState state) Parameters Type Name Description GeneratorState state The GeneratorState to search for. Returns Type Description System.Collections.Generic.IEnumerable < Generator > The Generator with the given GeneratorState or null if not found. | Improve this Doc View Source Get(Scp079Generator) Gets the Generator belonging to the MapGeneration.Distributors.Scp079Generator , if any. Declaration public static Generator Get(Scp079Generator scp079Generator) Parameters Type Name Description MapGeneration.Distributors.Scp079Generator scp079Generator The MapGeneration.Distributors.Scp079Generator instance. Returns Type Description Generator A Generator or null if not found. | Improve this Doc View Source Get(Func<Generator, Boolean>) Gets a System.Collections.Generic.IEnumerable<T> of Generator filtered based on a predicate. Declaration public static IEnumerable<Generator> Get(Func<Generator, bool> predicate) Parameters Type Name Description System.Func < Generator , System.Boolean > predicate The condition to satify. Returns Type Description System.Collections.Generic.IEnumerable < Generator > A System.Collections.Generic.IEnumerable<T> of Generator which contains elements that satify the condition. | Improve this Doc View Source SetPermissionFlag(KeycardPermissions, Boolean) Sets the specified KeycardPermissions flag. Declaration public void SetPermissionFlag(KeycardPermissions flag, bool isEnabled) Parameters Type Name Description KeycardPermissions flag The flag to set. System.Boolean isEnabled A value indicating whether the flag is enabled. | Improve this Doc View Source ToString() Returns the Generator in a human-readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Generator-related data. Overrides System.Object.ToString() | Improve this Doc View Source TryGet(GeneratorState, out IEnumerable<Generator>) Try-get a System.Collections.Generic.IEnumerable<T> of Generator given the specified GeneratorState . Declaration public static bool TryGet(GeneratorState state, out IEnumerable<Generator> generators) Parameters Type Name Description GeneratorState state The GeneratorState to search for. System.Collections.Generic.IEnumerable < Generator > generators A System.Collections.Generic.IEnumerable<T> of Generator matching the GeneratorState . Returns Type Description System.Boolean Whether or not at least one generator was found. | Improve this Doc View Source TryGet(Scp079Generator, out Generator) Try-get a Generator belonging to the MapGeneration.Distributors.Scp079Generator , if any. Declaration public static bool TryGet(Scp079Generator scp079Generator, out Generator generator) Parameters Type Name Description MapGeneration.Distributors.Scp079Generator scp079Generator The MapGeneration.Distributors.Scp079Generator instance. Generator generator A Generator or null if not found. Returns Type Description System.Boolean Whether or not a generator was found. | Improve this Doc View Source TryGet(Func<Generator, Boolean>, out IEnumerable<Generator>) Try-get a System.Collections.Generic.IEnumerable<T> of Generator filtered based on a predicate. Declaration public static bool TryGet(Func<Generator, bool> predicate, out IEnumerable<Generator> generators) Parameters Type Name Description System.Func < Generator , System.Boolean > predicate The condition to satify. System.Collections.Generic.IEnumerable < Generator > generators A System.Collections.Generic.IEnumerable<T> of Generator which contains elements that satify the condition. Returns Type Description System.Boolean Whether or not at least one generator was found. Implements IWrapper<T> IWorldSpace IPosition IRotation Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.GlobalPatchProcessor.html": {
    "href": "api/Exiled.API.Features.GlobalPatchProcessor.html",
    "title": "Class GlobalPatchProcessor | EXILED Docs",
    "keywords": "Class GlobalPatchProcessor A alternative detour tool which adds more ways to manage patches and external assemblies. Inheritance System.Object GlobalPatchProcessor Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class GlobalPatchProcessor Properties | Improve this Doc View Source PatchedGroupMethods Gets all the patched methods and their relative patch group. Declaration public static IReadOnlyDictionary<MethodBase, HashSet<string>> PatchedGroupMethods { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < System.Reflection.MethodBase , System.Collections.Generic.HashSet < System.String >> | Improve this Doc View Source PatchedMethods Gets all the patched methods. Declaration public static IEnumerable<MethodBase> PatchedMethods { get; } Property Value Type Description System.Collections.Generic.IEnumerable < System.Reflection.MethodBase > Methods | Improve this Doc View Source PatchAll(String, String) Searches the current assembly for Harmony annotations and uses them to create patches. It supports target-patching using PatchGroupAttribute and the relative groupId . Declaration public static Harmony PatchAll(string id = \"\", string groupId = null) Parameters Type Name Description System.String id The Harmony instance id. System.String groupId The target group to include. Returns Type Description Harmony The instance. Exceptions Type Condition System.ArgumentNullException Thrown when the GroupId is null or empty. | Improve this Doc View Source UnpatchAll(String, String) Unpatches methods by patching them with zero patches. Declaration public static void UnpatchAll(string id = \"\", string groupId = null) Parameters Type Name Description System.String id The Harmony instance id. System.String groupId The target group to include. Exceptions Type Condition System.ArgumentNullException Thrown when the GroupId is null or empty. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Hint.html": {
    "href": "api/Exiled.API.Features.Hint.html",
    "title": "Class Hint | EXILED Docs",
    "keywords": "Class Hint Useful class to save hint configs in a cleaner way. Inheritance System.Object Hint Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Hint Constructors | Improve this Doc View Source Hint() Initializes a new instance of the Hint class. Declaration public Hint() | Improve this Doc View Source Hint(String, Single, Boolean) Initializes a new instance of the Hint class. Declaration public Hint(string content, float duration = 3F, bool show = true) Parameters Type Name Description System.String content The content of the hint>. System.Single duration The duration of the hint, in seconds. System.Boolean show Whether or not the hint should be shown. Properties | Improve this Doc View Source Content Gets or sets the hint content. Declaration public string Content { get; set; } Property Value Type Description System.String | Improve this Doc View Source Duration Gets or sets the hint duration. Declaration public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Show Gets or sets a value indicating whether the hint should be shown or not. Declaration public bool Show { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source ToString() Returns the hint in a human-readable format. Declaration public override string ToString() Returns Type Description System.String A string containing hint-related data. Overrides System.Object.ToString() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.html": {
    "href": "api/Exiled.API.Features.html",
    "title": "Namespace Exiled.API.Features | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features Classes Broadcast Useful class to save broadcast configs in a cleaner way. Camera The in-game Scp079Camera. Cassie A set of tools to use in-game C.A.S.S.I.E. CustomHealthStat A custom version of PlayerStatsSystem.HealthStat which allows the player's max amount of health to be changed. Door A wrapper class for Interactables.Interobjects.DoorUtils.DoorVariant . Effect Useful class to save hint configs in a cleaner way. Generator Wrapper class for MapGeneration.Distributors.Scp079Generator . GlobalPatchProcessor A alternative detour tool which adds more ways to manage patches and external assemblies. Hint Useful class to save hint configs in a cleaner way. Intercom A set of tools to easily handle the Intercom. Lift The in-game lift. Log A set of tools to print messages on the server console. Map A set of tools to easily handle the in-game map. Paths A set of useful paths. Player Represents the in-game player, by encapsulating a ReferenceHub . Plugin<TConfig> Expose how a plugin has to be made. Plugin<TConfig, TTranslation> Expose how a plugin has to be made. Ragdoll A set of tools to handle the ragdolls more easily. Recontainer A wrapper class for PlayerRoles.PlayableScps.Scp079.Scp079Recontainer . Respawn A set of tools to handle team respawns more easily. Room The in-game room. Round A set of tools to handle the round more easily. Scp914 A set of tools to modify SCP-914's behaviour. Server A set of tools to easily work with the server. TeslaGate The in-game tesla gate. Warhead A set of tools to easily work with the alpha warhead. Window A wrapper class for BreakableWindow . Structs Badge Represents an in-game badge."
  },
  "api/Exiled.API.Features.Intercom.html": {
    "href": "api/Exiled.API.Features.Intercom.html",
    "title": "Class Intercom | EXILED Docs",
    "keywords": "Class Intercom A set of tools to easily handle the Intercom. Inheritance System.Object Intercom Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Intercom Properties | Improve this Doc View Source DisplayText Gets or sets the text displayed on the intercom screen. Declaration public static string DisplayText { get; set; } Property Value Type Description System.String | Improve this Doc View Source GameObject Gets the intercom's UnityEngine.GameObject . Declaration public static GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source IntercomDisplay Gets the instance of PlayerRoles.Voice.IntercomDisplay . Declaration public static IntercomDisplay IntercomDisplay { get; } Property Value Type Description PlayerRoles.Voice.IntercomDisplay | Improve this Doc View Source InUse Gets a value indicating whether or not the intercom is currently being used. Declaration public static bool InUse { get; } Property Value Type Description System.Boolean | Improve this Doc View Source RemainingCooldown Gets or sets the remaining cooldown of the intercom. Declaration public static double RemainingCooldown { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Speaker Gets the Player that is using the intercom. Declaration public static Player Speaker { get; } Property Value Type Description Player Remarks Will be null if InUse is false . | Improve this Doc View Source SpeechRemainingTime Gets or sets the remaining speech time of the intercom. Declaration public static float SpeechRemainingTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source State Gets or sets the current state of the intercom. Declaration public static IntercomState State { get; set; } Property Value Type Description PlayerRoles.Voice.IntercomState | Improve this Doc View Source Transform Gets the intercom's UnityEngine.Transform . Declaration public static Transform Transform { get; } Property Value Type Description UnityEngine.Transform Methods | Improve this Doc View Source PlaySound(Boolean) Plays the intercom's sound. Declaration public static void PlaySound(bool isStarting) Parameters Type Name Description System.Boolean isStarting Sets a value indicating whether or not the sound is the intercom's start speaking sound. | Improve this Doc View Source Reset() Reset the intercom's cooldown. Declaration public static void Reset() | Improve this Doc View Source Timeout() Times out the intercom. Declaration public static void Timeout()"
  },
  "api/Exiled.API.Features.Items.Ammo.html": {
    "href": "api/Exiled.API.Features.Items.Ammo.html",
    "title": "Class Ammo | EXILED Docs",
    "keywords": "Class Ammo A wrapper class for InventorySystem.Items.Firearms.Ammo.AmmoItem . Inheritance System.Object TypeCastObject < Item > Item Ammo Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.Firearms.Ammo.AmmoItem > Inherited Members Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.Weight Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.CreatePickup(Vector3, Quaternion, Boolean) Item.ToString() TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Ammo : Item, IWrapper<ItemBase>, IWrapper<AmmoItem> Constructors | Improve this Doc View Source Ammo(AmmoItem) Initializes a new instance of the Ammo class. Declaration public Ammo(AmmoItem itemBase) Parameters Type Name Description InventorySystem.Items.Firearms.Ammo.AmmoItem itemBase The base InventorySystem.Items.Firearms.Ammo.AmmoItem class. Fields | Improve this Doc View Source AmmoLimit Gets the absolute maximum amount of ammo that may be held at one time, if ammo is forcefully given to the player (regardless of worn armor or server configuration). For accessing the maximum amount of ammo that may be held based on worn armor and server settings, see GetAmmoLimit(AmmoType) . Declaration public const ushort AmmoLimit = 65535 Field Value Type Description System.UInt16 Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Firearms.Ammo.AmmoItem that this class is encapsulating. Declaration public AmmoItem Base { get; } Property Value Type Description InventorySystem.Items.Firearms.Ammo.AmmoItem Methods | Improve this Doc View Source Clone() Clones current Ammo object. Declaration public override Item Clone() Returns Type Description Item New Ammo object. Overrides Item.Clone() Implements IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Armor.html": {
    "href": "api/Exiled.API.Features.Items.Armor.html",
    "title": "Class Armor | EXILED Docs",
    "keywords": "Class Armor A wrapper class for InventorySystem.Items.Armor.BodyArmor . Inheritance System.Object TypeCastObject < Item > Item Armor Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.Armor.BodyArmor > Inherited Members Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.CreatePickup(Vector3, Quaternion, Boolean) Item.ToString() TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Armor : Item, IWrapper<ItemBase>, IWrapper<BodyArmor> Constructors | Improve this Doc View Source Armor(BodyArmor) Initializes a new instance of the Armor class. Declaration public Armor(BodyArmor itemBase) Parameters Type Name Description InventorySystem.Items.Armor.BodyArmor itemBase The base InventorySystem.Items.Armor.BodyArmor class. Properties | Improve this Doc View Source AmmoLimits Gets or sets the ammo limit of the wearer when using this armor. Declaration public IEnumerable<ArmorAmmoLimit> AmmoLimits { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < ArmorAmmoLimit > | Improve this Doc View Source Base Gets the InventorySystem.Items.Armor.BodyArmor that this class is encapsulating. Declaration public BodyArmor Base { get; } Property Value Type Description InventorySystem.Items.Armor.BodyArmor | Improve this Doc View Source CategoryLimits Gets or sets the item caterory limit of the wearer when using this armor. Declaration public IEnumerable<BodyArmor.ArmorCategoryLimitModifier> CategoryLimits { get; set; } Property Value Type Description System.Collections.Generic.IEnumerable < InventorySystem.Items.Armor.BodyArmor.ArmorCategoryLimitModifier > | Improve this Doc View Source CivilianDownsideMultiplier Gets how much worse PlayerRoles.RoleTypeId.ClassD and PlayerRoles.RoleTypeId.Scientist s are affected by wearing this armor. Declaration public float CivilianDownsideMultiplier { get; } Property Value Type Description System.Single | Improve this Doc View Source Equippable Gets a value indicating whether this item is equippable. Declaration public bool Equippable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HelmetEfficacy Gets or sets how strong the helmet on the armor is. Declaration public int HelmetEfficacy { get; set; } Property Value Type Description System.Int32 Exceptions Type Condition System.ArgumentOutOfRangeException When trying to set the value below 0 or above 100. | Improve this Doc View Source Holsterable Gets a value indicating whether this item is holsterable. Declaration public bool Holsterable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsWorn Gets a value indicating whether or not this is a worn item. Declaration public bool IsWorn { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MovementSpeedMultiplier Gets or sets how much the users movement speed should be affected when wearing this armor. (higher values = slower movement). Declaration public float MovementSpeedMultiplier { get; set; } Property Value Type Description System.Single Exceptions Type Condition System.ArgumentOutOfRangeException When attempting to set the value below 0 or above 1. | Improve this Doc View Source RemoveExcessOnDrop Gets or sets a value indicating whether or not excess ammo should be removed when the armor is dropped. Declaration public bool RemoveExcessOnDrop { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source StaminaUseMultiplier Gets or sets how much faster stamina will drain when wearing this armor. Declaration public float StaminaUseMultiplier { get; set; } Property Value Type Description System.Single Exceptions Type Condition System.ArgumentOutOfRangeException When attempting to set the value below 1 or above 2. | Improve this Doc View Source VestEfficacy Gets or sets how strong the vest on the armor is. Declaration public int VestEfficacy { get; set; } Property Value Type Description System.Int32 Exceptions Type Condition System.ArgumentOutOfRangeException When trying to set the value below 0 or above 100. | Improve this Doc View Source Weight Gets or sets the Weight of the armor. Declaration public float Weight { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Clone() Clones current Armor object. Declaration public override Item Clone() Returns Type Description Item New Armor object. Overrides Item.Clone() Implements IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.CandyAddStatus.html": {
    "href": "api/Exiled.API.Features.Items.CandyAddStatus.html",
    "title": "Enum CandyAddStatus | EXILED Docs",
    "keywords": "Enum CandyAddStatus Candy enumeration status. Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public enum CandyAddStatus Fields Name Description AllCandyAdded If all candies provided were added. NoCandyAdded If no candy was able to be added. SomeCandyAdded If at least one candy was added. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.API.Features.Items.Consumable.html": {
    "href": "api/Exiled.API.Features.Items.Consumable.html",
    "title": "Class Consumable | EXILED Docs",
    "keywords": "Class Consumable A wrapper class for InventorySystem.Items.Usables.Consumable . Inheritance System.Object TypeCastObject < Item > Item Usable Consumable Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.Usables.UsableItem > IWrapper < InventorySystem.Items.Usables.Consumable > Inherited Members Usable.Equippable Usable.Holsterable Usable.Weight Usable.IsUsing Usable.UseTime Usable.MaxCancellableTime Usable.RemainingCooldown Usable.PlayerGetCooldown Usable.CreatePickup(Vector3, Quaternion, Boolean) Usable.Use() Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.Clone() Item.ToString() TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Consumable : Usable, IWrapper<ItemBase>, IWrapper<UsableItem>, IWrapper<Consumable> Constructors | Improve this Doc View Source Consumable(Consumable) Initializes a new instance of the Consumable class. Declaration public Consumable(Consumable itemBase) Parameters Type Name Description InventorySystem.Items.Usables.Consumable itemBase The base InventorySystem.Items.Usables.Consumable class. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Usables.Consumable that this class is encapsulating. Declaration public Consumable Base { get; } Property Value Type Description InventorySystem.Items.Usables.Consumable Implements IWrapper<T> IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.ExplosiveGrenade.html": {
    "href": "api/Exiled.API.Features.Items.ExplosiveGrenade.html",
    "title": "Class ExplosiveGrenade | EXILED Docs",
    "keywords": "Class ExplosiveGrenade A wrapper class for InventorySystem.Items.ThrowableProjectiles.ExplosionGrenade . Inheritance System.Object TypeCastObject < Item > Item Throwable ExplosiveGrenade Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.ThrowableProjectiles.ThrowableItem > Inherited Members Throwable.Base Throwable.PinPullTime Throwable.Repickable Throwable.Throw(Boolean) Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.Weight Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.CreatePickup(Vector3, Quaternion, Boolean) TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class ExplosiveGrenade : Throwable, IWrapper<ItemBase>, IWrapper<ThrowableItem> Constructors | Improve this Doc View Source ExplosiveGrenade(ThrowableItem) Initializes a new instance of the ExplosiveGrenade class. Declaration public ExplosiveGrenade(ThrowableItem itemBase) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.ThrowableItem itemBase The base InventorySystem.Items.ThrowableProjectiles.ThrowableItem class. Properties | Improve this Doc View Source BurnDuration Gets or sets how long the Burned effect will last. Declaration public float BurnDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ConcussDuration Gets or sets how long the Concussed effect will last. Declaration public float ConcussDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source DeafenDuration Gets or sets how long the Deafened effect will last. Declaration public float DeafenDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source FuseTime Gets or sets how long the fuse will last. Declaration public float FuseTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxRadius Gets or sets the maximum radius of the grenade. Declaration public float MaxRadius { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Projectile Gets a ExplosionGrenadeProjectile to change grenade properties. Declaration public ExplosionGrenadeProjectile Projectile { get; } Property Value Type Description ExplosionGrenadeProjectile | Improve this Doc View Source ScpDamageMultiplier Gets or sets the multiplier for damage against Scp players. Declaration public float ScpDamageMultiplier { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Clone() Clones current ExplosiveGrenade object. Declaration public override Item Clone() Returns Type Description Item New ExplosiveGrenade object. Overrides Throwable.Clone() | Improve this Doc View Source SpawnActive(Vector3, Player) Spawns an active grenade on the map at the specified location. Declaration public ExplosionGrenadeProjectile SpawnActive(Vector3 position, Player owner = null) Parameters Type Name Description UnityEngine.Vector3 position The location to spawn the grenade. Player owner Optional: The Player owner of the grenade. Returns Type Description ExplosionGrenadeProjectile Spawned grenade . | Improve this Doc View Source ToString() Returns the ExplosiveGrenade in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing ExplosiveGrenade-related data. Overrides Throwable.ToString() Implements IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Firearm.html": {
    "href": "api/Exiled.API.Features.Items.Firearm.html",
    "title": "Class Firearm | EXILED Docs",
    "keywords": "Class Firearm A wrapper class for InventorySystem.Items.Firearms.Firearm . Inheritance System.Object TypeCastObject < Item > Item Firearm Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.Firearms.Firearm > Inherited Members Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.Weight Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.ToString() TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Firearm : Item, IWrapper<ItemBase>, IWrapper<Firearm> Constructors | Improve this Doc View Source Firearm(Firearm) Initializes a new instance of the Firearm class. Declaration public Firearm(Firearm itemBase) Parameters Type Name Description InventorySystem.Items.Firearms.Firearm itemBase The base InventorySystem.Items.Firearms.Firearm class. Properties | Improve this Doc View Source Aiming Gets a value indicating whether the firearm is being aimed. Declaration public bool Aiming { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Ammo Gets or sets the amount of ammo in the firearm. Declaration public byte Ammo { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source AmmoType Gets the AmmoType of the firearm. Declaration public AmmoType AmmoType { get; } Property Value Type Description AmmoType | Improve this Doc View Source AttachmentIdentifiers Gets the AttachmentIdentifier s of the firearm. Declaration public IEnumerable<AttachmentIdentifier> AttachmentIdentifiers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < AttachmentIdentifier > | Improve this Doc View Source Attachments Gets the InventorySystem.Items.Firearms.Attachments.Components.Attachment s of the firearm. Declaration public Attachment[] Attachments { get; } Property Value Type Description InventorySystem.Items.Firearms.Attachments.Components.Attachment [] | Improve this Doc View Source AvailableAttachments Declaration public static IReadOnlyDictionary<FirearmType, AttachmentIdentifier[]> AvailableAttachments { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < FirearmType , AttachmentIdentifier []> | Improve this Doc View Source Base Gets the InventorySystem.Items.Firearms.Firearm that this class is encapsulating. Declaration public Firearm Base { get; } Property Value Type Description InventorySystem.Items.Firearms.Firearm | Improve this Doc View Source BaseCode Gets the base code of the firearm. Declaration public uint BaseCode { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source BaseCodes Declaration public static IReadOnlyDictionary<FirearmType, uint> BaseCodes { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < FirearmType , System.UInt32 > | Improve this Doc View Source FirearmType Gets the FirearmType of the firearm. Declaration public FirearmType FirearmType { get; } Property Value Type Description FirearmType | Improve this Doc View Source FireRate Gets or sets the fire rate of the firearm, if it is an automatic weapon. Declaration public float FireRate { get; set; } Property Value Type Description System.Single Remarks This property will not do anything if the firearm is not an automatic weapon. See Also IsAutomatic | Improve this Doc View Source FlashlightEnabled Gets a value indicating whether the firearm's flashlight module is enabled. Declaration public bool FlashlightEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsAutomatic Gets a value indicating whether or not the firearm is automatic. Declaration public bool IsAutomatic { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxAmmo Gets the max ammo for this firearm. Declaration public byte MaxAmmo { get; } Property Value Type Description System.Byte | Improve this Doc View Source PlayerPreferences Gets a System.Collections.Generic.Dictionary<TKey, TValue> which represents all the preferences for each Player . Declaration public static IReadOnlyDictionary<Player, Dictionary<FirearmType, AttachmentIdentifier[]>> PlayerPreferences { get; } Property Value Type Description System.Collections.Generic.IReadOnlyDictionary < Player , System.Collections.Generic.Dictionary < FirearmType , AttachmentIdentifier []>> | Improve this Doc View Source Recoil Gets or sets the recoil settings of the firearm, if it's an automatic weapon. Declaration public RecoilSettings Recoil { get; set; } Property Value Type Description CameraShaking.RecoilSettings Remarks This property will not do anything if the firearm is not an automatic weapon. See Also IsAutomatic | Improve this Doc View Source RecoilPattern Gets the firearm's InventorySystem.Items.Firearms.FirearmRecoilPattern . Will be null for non-automatic weapons. Declaration public FirearmRecoilPattern RecoilPattern { get; } Property Value Type Description InventorySystem.Items.Firearms.FirearmRecoilPattern Methods | Improve this Doc View Source AddAttachment(AttachmentIdentifier) Adds a AttachmentIdentifier to the firearm. Declaration public void AddAttachment(AttachmentIdentifier identifier) Parameters Type Name Description AttachmentIdentifier identifier The AttachmentIdentifier to add. | Improve this Doc View Source AddAttachment(AttachmentName) Adds a InventorySystem.Items.Firearms.Attachments.Components.Attachment of the specified InventorySystem.Items.Firearms.Attachments.AttachmentName to the firearm. Declaration public void AddAttachment(AttachmentName attachmentName) Parameters Type Name Description InventorySystem.Items.Firearms.Attachments.AttachmentName attachmentName The InventorySystem.Items.Firearms.Attachments.AttachmentName to add. | Improve this Doc View Source AddAttachment(IEnumerable<AttachmentIdentifier>) Adds a System.Collections.Generic.IEnumerable<T> of AttachmentIdentifier to the firearm. Declaration public void AddAttachment(IEnumerable<AttachmentIdentifier> identifiers) Parameters Type Name Description System.Collections.Generic.IEnumerable < AttachmentIdentifier > identifiers The System.Collections.Generic.IEnumerable<T> of AttachmentIdentifier to add. | Improve this Doc View Source AddAttachment(IEnumerable<AttachmentName>) Adds a System.Collections.Generic.IEnumerable<T> of InventorySystem.Items.Firearms.Attachments.AttachmentName to the firearm. Declaration public void AddAttachment(IEnumerable<AttachmentName> attachmentNames) Parameters Type Name Description System.Collections.Generic.IEnumerable < InventorySystem.Items.Firearms.Attachments.AttachmentName > attachmentNames The System.Collections.Generic.IEnumerable<T> of InventorySystem.Items.Firearms.Attachments.AttachmentName to add. | Improve this Doc View Source AddPreference(Player, FirearmType, AttachmentIdentifier[]) Adds or replaces an existing preference to the PlayerPreferences . Declaration public void AddPreference(Player player, FirearmType itemType, AttachmentIdentifier[] attachments) Parameters Type Name Description Player player The Player of which must be added. FirearmType itemType The FirearmType to add. AttachmentIdentifier [] attachments The AttachmentIdentifier [] to add. | Improve this Doc View Source AddPreference(Player, Dictionary<FirearmType, AttachmentIdentifier[]>) Adds or replaces an existing preference to the PlayerPreferences . Declaration public void AddPreference(Player player, Dictionary<FirearmType, AttachmentIdentifier[]> preference) Parameters Type Name Description Player player The Player of which must be added. System.Collections.Generic.Dictionary < FirearmType , AttachmentIdentifier []> preference The System.Collections.Generic.Dictionary<TKey, TValue> of FirearmType and AttachmentIdentifier [] to add. | Improve this Doc View Source AddPreference(Player, KeyValuePair<FirearmType, AttachmentIdentifier[]>) Adds or replaces an existing preference to the PlayerPreferences . Declaration public void AddPreference(Player player, KeyValuePair<FirearmType, AttachmentIdentifier[]> preference) Parameters Type Name Description Player player The Player of which must be added. System.Collections.Generic.KeyValuePair < FirearmType , AttachmentIdentifier []> preference The System.Collections.Generic.KeyValuePair<TKey, TValue> of FirearmType and AttachmentIdentifier [] to add. | Improve this Doc View Source AddPreference(IEnumerable<Player>, FirearmType, AttachmentIdentifier[]) Adds or replaces an existing preference to the PlayerPreferences . Declaration public void AddPreference(IEnumerable<Player> players, FirearmType type, AttachmentIdentifier[] attachments) Parameters Type Name Description System.Collections.Generic.IEnumerable < Player > players The System.Collections.Generic.IEnumerable<T> of Player of which must be added. FirearmType type The FirearmType to add. AttachmentIdentifier [] attachments The AttachmentIdentifier [] to add. | Improve this Doc View Source AddPreference(IEnumerable<Player>, Dictionary<FirearmType, AttachmentIdentifier[]>) Adds or replaces an existing preference to the PlayerPreferences . Declaration public void AddPreference(IEnumerable<Player> players, Dictionary<FirearmType, AttachmentIdentifier[]> preference) Parameters Type Name Description System.Collections.Generic.IEnumerable < Player > players The System.Collections.Generic.IEnumerable<T> of Player of which must be added. System.Collections.Generic.Dictionary < FirearmType , AttachmentIdentifier []> preference The System.Collections.Generic.Dictionary<TKey, TValue> of FirearmType and AttachmentIdentifier [] to add. | Improve this Doc View Source AddPreference(IEnumerable<Player>, KeyValuePair<FirearmType, AttachmentIdentifier[]>) Adds or replaces an existing preference to the PlayerPreferences . Declaration public void AddPreference(IEnumerable<Player> players, KeyValuePair<FirearmType, AttachmentIdentifier[]> preference) Parameters Type Name Description System.Collections.Generic.IEnumerable < Player > players The System.Collections.Generic.IEnumerable<T> of Player of which must be added. System.Collections.Generic.KeyValuePair < FirearmType , AttachmentIdentifier []> preference The System.Collections.Generic.KeyValuePair<TKey, TValue> of FirearmType and AttachmentIdentifier [] to add. | Improve this Doc View Source ClearAttachments() Removes all attachments from the firearm. Declaration public void ClearAttachments() | Improve this Doc View Source ClearPreferences() Clears all the existing preferences from PlayerPreferences . Declaration public void ClearPreferences() | Improve this Doc View Source ClearPreferences(Player) Clears all the existing preferences from PlayerPreferences . Declaration public void ClearPreferences(Player player) Parameters Type Name Description Player player The Player of which must be cleared. | Improve this Doc View Source ClearPreferences(IEnumerable<Player>) Clears all the existing preferences from PlayerPreferences . Declaration public void ClearPreferences(IEnumerable<Player> players) Parameters Type Name Description System.Collections.Generic.IEnumerable < Player > players The System.Collections.Generic.IEnumerable<T> of Player of which must be cleared. | Improve this Doc View Source Clone() Clones current Firearm object. Declaration public override Item Clone() Returns Type Description Item New Firearm object. Overrides Item.Clone() | Improve this Doc View Source Create(FirearmType) Creates and returns a Firearm representing the provided FirearmType . Declaration public static Firearm Create(FirearmType type) Parameters Type Name Description FirearmType type The type of firearm to create. Returns Type Description Firearm The newly created firearm. | Improve this Doc View Source CreatePickup(Vector3, Quaternion, Boolean) Creates the Pickup that based on this Item . Declaration public override Pickup CreatePickup(Vector3 position, Quaternion rotation = default(Quaternion), bool spawn = true) Parameters Type Name Description UnityEngine.Vector3 position The location to spawn the item. UnityEngine.Quaternion rotation The rotation of the item. System.Boolean spawn Whether the Pickup should be initially spawned. Returns Type Description Pickup The created Pickup . Overrides Item.CreatePickup(Vector3, Quaternion, Boolean) | Improve this Doc View Source GetAttachment(AttachmentIdentifier) Gets a InventorySystem.Items.Firearms.Attachments.Components.Attachment of the specified AttachmentIdentifier . Declaration public Attachment GetAttachment(AttachmentIdentifier identifier) Parameters Type Name Description AttachmentIdentifier identifier The AttachmentIdentifier to check. Returns Type Description InventorySystem.Items.Firearms.Attachments.Components.Attachment The corresponding InventorySystem.Items.Firearms.Attachments.Components.Attachment . | Improve this Doc View Source RemoveAttachment(AttachmentIdentifier) Removes a AttachmentIdentifier from the firearm. Declaration public void RemoveAttachment(AttachmentIdentifier identifier) Parameters Type Name Description AttachmentIdentifier identifier The AttachmentIdentifier to remove. | Improve this Doc View Source RemoveAttachment(AttachmentName) Removes a InventorySystem.Items.Firearms.Attachments.Components.Attachment of the specified InventorySystem.Items.Firearms.Attachments.AttachmentName from the firearm. Declaration public void RemoveAttachment(AttachmentName attachmentName) Parameters Type Name Description InventorySystem.Items.Firearms.Attachments.AttachmentName attachmentName The InventorySystem.Items.Firearms.Attachments.AttachmentName to remove. | Improve this Doc View Source RemoveAttachment(AttachmentSlot) Removes a InventorySystem.Items.Firearms.Attachments.Components.Attachment of the specified InventorySystem.Items.Firearms.Attachments.AttachmentSlot from the firearm. Declaration public void RemoveAttachment(AttachmentSlot attachmentSlot) Parameters Type Name Description InventorySystem.Items.Firearms.Attachments.AttachmentSlot attachmentSlot The InventorySystem.Items.Firearms.Attachments.AttachmentSlot to remove. | Improve this Doc View Source RemoveAttachment(IEnumerable<AttachmentIdentifier>) Removes a System.Collections.Generic.IEnumerable<T> of AttachmentIdentifier from the firearm. Declaration public void RemoveAttachment(IEnumerable<AttachmentIdentifier> identifiers) Parameters Type Name Description System.Collections.Generic.IEnumerable < AttachmentIdentifier > identifiers The System.Collections.Generic.IEnumerable<T> of AttachmentIdentifier to remove. | Improve this Doc View Source RemoveAttachment(IEnumerable<AttachmentName>) Removes a list of InventorySystem.Items.Firearms.Attachments.Components.Attachment of the specified System.Collections.Generic.IEnumerable<T> of InventorySystem.Items.Firearms.Attachments.AttachmentName from the firearm. Declaration public void RemoveAttachment(IEnumerable<AttachmentName> attachmentNames) Parameters Type Name Description System.Collections.Generic.IEnumerable < InventorySystem.Items.Firearms.Attachments.AttachmentName > attachmentNames The System.Collections.Generic.IEnumerable<T> of InventorySystem.Items.Firearms.Attachments.AttachmentName to remove. | Improve this Doc View Source RemoveAttachment(IEnumerable<AttachmentSlot>) Removes a list of InventorySystem.Items.Firearms.Attachments.Components.Attachment of the specified System.Collections.Generic.IEnumerable<T> of InventorySystem.Items.Firearms.Attachments.AttachmentSlot from the firearm. Declaration public void RemoveAttachment(IEnumerable<AttachmentSlot> attachmentSlots) Parameters Type Name Description System.Collections.Generic.IEnumerable < InventorySystem.Items.Firearms.Attachments.AttachmentSlot > attachmentSlots The System.Collections.Generic.IEnumerable<T> of InventorySystem.Items.Firearms.Attachments.AttachmentSlot to remove. | Improve this Doc View Source RemovePreference(Player, FirearmType) Removes a preference from the PlayerPreferences if it already exists. Declaration public void RemovePreference(Player player, FirearmType type) Parameters Type Name Description Player player The Player of which must be removed. FirearmType type The FirearmType to remove. | Improve this Doc View Source RemovePreference(Player, IEnumerable<FirearmType>) Removes a preference from the PlayerPreferences if it already exists. Declaration public void RemovePreference(Player player, IEnumerable<FirearmType> types) Parameters Type Name Description Player player The Player of which must be removed. System.Collections.Generic.IEnumerable < FirearmType > types The System.Collections.Generic.IEnumerable<T> of FirearmType to remove. | Improve this Doc View Source RemovePreference(IEnumerable<Player>, FirearmType) Removes a preference from the PlayerPreferences if it already exists. Declaration public void RemovePreference(IEnumerable<Player> players, FirearmType type) Parameters Type Name Description System.Collections.Generic.IEnumerable < Player > players The System.Collections.Generic.IEnumerable<T> of Player of which must be removed. FirearmType type The FirearmType to remove. | Improve this Doc View Source RemovePreference(IEnumerable<Player>, IEnumerable<FirearmType>) Removes a preference from the PlayerPreferences if it already exists. Declaration public void RemovePreference(IEnumerable<Player> players, IEnumerable<FirearmType> types) Parameters Type Name Description System.Collections.Generic.IEnumerable < Player > players The System.Collections.Generic.IEnumerable<T> of Player of which must be removed. System.Collections.Generic.IEnumerable < FirearmType > types The System.Collections.Generic.IEnumerable<T> of FirearmType to remove. | Improve this Doc View Source TryGetAttachment(AttachmentIdentifier, out Attachment) Tries to get a InventorySystem.Items.Firearms.Attachments.Components.Attachment of the specified AttachmentIdentifier . Declaration public bool TryGetAttachment(AttachmentIdentifier identifier, out Attachment firearmAttachment) Parameters Type Name Description AttachmentIdentifier identifier The AttachmentIdentifier to check. InventorySystem.Items.Firearms.Attachments.Components.Attachment firearmAttachment The corresponding InventorySystem.Items.Firearms.Attachments.Components.Attachment . Returns Type Description System.Boolean A value indicating whether or not the firearm has the specified InventorySystem.Items.Firearms.Attachments.Components.Attachment . | Improve this Doc View Source TryGetAttachment(AttachmentName, out Attachment) Tries to get a InventorySystem.Items.Firearms.Attachments.Components.Attachment of the specified InventorySystem.Items.Firearms.Attachments.AttachmentName . Declaration public bool TryGetAttachment(AttachmentName attachmentName, out Attachment firearmAttachment) Parameters Type Name Description InventorySystem.Items.Firearms.Attachments.AttachmentName attachmentName The InventorySystem.Items.Firearms.Attachments.AttachmentName to check. InventorySystem.Items.Firearms.Attachments.Components.Attachment firearmAttachment The corresponding InventorySystem.Items.Firearms.Attachments.Components.Attachment . Returns Type Description System.Boolean A value indicating whether or not the firearm has the specified InventorySystem.Items.Firearms.Attachments.Components.Attachment . Implements IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.FlashGrenade.html": {
    "href": "api/Exiled.API.Features.Items.FlashGrenade.html",
    "title": "Class FlashGrenade | EXILED Docs",
    "keywords": "Class FlashGrenade A wrapper class for InventorySystem.Items.ThrowableProjectiles.FlashbangGrenade . Inheritance System.Object TypeCastObject < Item > Item Throwable FlashGrenade Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.ThrowableProjectiles.ThrowableItem > Inherited Members Throwable.Base Throwable.PinPullTime Throwable.Repickable Throwable.Throw(Boolean) Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.Weight Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.CreatePickup(Vector3, Quaternion, Boolean) TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class FlashGrenade : Throwable, IWrapper<ItemBase>, IWrapper<ThrowableItem> Constructors | Improve this Doc View Source FlashGrenade(ThrowableItem) Initializes a new instance of the FlashGrenade class. Declaration public FlashGrenade(ThrowableItem itemBase) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.ThrowableItem itemBase The base InventorySystem.Items.ThrowableProjectiles.ThrowableItem class. Properties | Improve this Doc View Source AdditionalBlindedEffect Gets or sets the additional duration of the Blinded effect. Declaration public float AdditionalBlindedEffect { get; set; } Property Value Type Description System.Single | Improve this Doc View Source FuseTime Gets or sets how long the fuse will last. Declaration public float FuseTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MinimalDurationEffect Gets or sets the minimum duration of player can take the effect. Declaration public float MinimalDurationEffect { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Projectile Gets a FlashbangProjectile to change grenade properties. Declaration public FlashbangProjectile Projectile { get; } Property Value Type Description FlashbangProjectile | Improve this Doc View Source SurfaceDistanceIntensifier Gets or sets the how mush the flash grenade going to be intensified when explode at Surface . Declaration public float SurfaceDistanceIntensifier { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Clone() Clones current FlashGrenade object. Declaration public override Item Clone() Returns Type Description Item New FlashGrenade object. Overrides Throwable.Clone() | Improve this Doc View Source SpawnActive(Vector3, Player) Spawns an active grenade on the map at the specified location. Declaration public FlashbangProjectile SpawnActive(Vector3 position, Player owner = null) Parameters Type Name Description UnityEngine.Vector3 position The location to spawn the grenade. Player owner Optional: The Player owner of the grenade. Returns Type Description FlashbangProjectile Spawned grenade . | Improve this Doc View Source ToString() Returns the FlashGrenade in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing FlashGrenade-related data. Overrides Throwable.ToString() Implements IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Flashlight.html": {
    "href": "api/Exiled.API.Features.Items.Flashlight.html",
    "title": "Class Flashlight | EXILED Docs",
    "keywords": "Class Flashlight A wrapped class for InventorySystem.Items.Flashlight.FlashlightItem . Inheritance System.Object TypeCastObject < Item > Item Flashlight Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.Flashlight.FlashlightItem > Inherited Members Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.Weight Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.CreatePickup(Vector3, Quaternion, Boolean) TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Flashlight : Item, IWrapper<ItemBase>, IWrapper<FlashlightItem> Constructors | Improve this Doc View Source Flashlight(FlashlightItem) Initializes a new instance of the Flashlight class. Declaration public Flashlight(FlashlightItem itemBase) Parameters Type Name Description InventorySystem.Items.Flashlight.FlashlightItem itemBase The base InventorySystem.Items.Flashlight.FlashlightItem class. Properties | Improve this Doc View Source Active Gets or sets a value indicating whether the flashlight is turned on. Declaration public bool Active { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Base Gets the InventorySystem.Items.Flashlight.FlashlightItem that this class is encapsulating. Declaration public FlashlightItem Base { get; } Property Value Type Description InventorySystem.Items.Flashlight.FlashlightItem Methods | Improve this Doc View Source Clone() Clones current Flashlight object. Declaration public override Item Clone() Returns Type Description Item New Flashlight object. Overrides Item.Clone() | Improve this Doc View Source ToString() Returns the Flashlight in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Flashlight-related data. Overrides Item.ToString() Implements IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.html": {
    "href": "api/Exiled.API.Features.Items.html",
    "title": "Namespace Exiled.API.Features.Items | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Items Classes Ammo A wrapper class for InventorySystem.Items.Firearms.Ammo.AmmoItem . Armor A wrapper class for InventorySystem.Items.Armor.BodyArmor . Consumable A wrapper class for InventorySystem.Items.Usables.Consumable . ExplosiveGrenade A wrapper class for InventorySystem.Items.ThrowableProjectiles.ExplosionGrenade . Firearm A wrapper class for InventorySystem.Items.Firearms.Firearm . FlashGrenade A wrapper class for InventorySystem.Items.ThrowableProjectiles.FlashbangGrenade . Flashlight A wrapped class for InventorySystem.Items.Flashlight.FlashlightItem . Item A wrapper class for InventorySystem.Items.ItemBase . Jailbird A wrapped class for InventorySystem.Items.Jailbird.JailbirdItem . Keycard A wrapper class for InventorySystem.Items.Keycards.KeycardItem . MicroHid A wrapper class for InventorySystem.Items.MicroHID.MicroHIDItem . Radio A wrapper class for InventorySystem.Items.Radio.RadioItem . Scp1576 A wrapper class for InventorySystem.Items.Usables.Scp1576.Scp1576Item . Scp2176 A wrapper class for Scp2176Projectile . Scp244 A wrapper class for SCP-244. Scp330 A wrapper class for SCP-330 bags. Throwable A wrapper class for throwable items. Usable A wrapper class for InventorySystem.Items.Usables.UsableItem . Enums CandyAddStatus Candy enumeration status."
  },
  "api/Exiled.API.Features.Items.Item.html": {
    "href": "api/Exiled.API.Features.Items.Item.html",
    "title": "Class Item | EXILED Docs",
    "keywords": "Class Item A wrapper class for InventorySystem.Items.ItemBase . Inheritance System.Object TypeCastObject < Item > Item Ammo Armor Firearm Flashlight Jailbird Keycard MicroHid Radio Throwable Usable Implements IWrapper < InventorySystem.Items.ItemBase > Inherited Members TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Item : TypeCastObject<Item>, IWrapper<ItemBase> Constructors | Improve this Doc View Source Item(ItemBase) Initializes a new instance of the Item class. Declaration public Item(ItemBase itemBase) Parameters Type Name Description InventorySystem.Items.ItemBase itemBase The InventorySystem.Items.ItemBase to encapsulate. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.ItemBase of the item. Declaration public ItemBase Base { get; } Property Value Type Description InventorySystem.Items.ItemBase | Improve this Doc View Source Category Gets the ItemCategory of the item. Declaration public ItemCategory Category { get; } Property Value Type Description ItemCategory | Improve this Doc View Source IsAmmo Gets a value indicating whether or not this item is ammunition. Declaration public bool IsAmmo { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsArmor Gets a value indicating whether or not this item is armor. Declaration public bool IsArmor { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsConsumable Gets a value indicating whether or not this item will be destroy when being used. Declaration public bool IsConsumable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInInventory Gets a value indicating whether if the item are in an inventory. Declaration public bool IsInInventory { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsKeycard Gets a value indicating whether or not this item is a keycard. Declaration public bool IsKeycard { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsThrowable Gets a value indicating whether or not this item is a throwable item. Declaration public bool IsThrowable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUsable Gets a value indicating whether or not this item can be used by player. Declaration public bool IsUsable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsWeapon Gets a value indicating whether or not this item is a weapon. Declaration public bool IsWeapon { get; } Property Value Type Description System.Boolean | Improve this Doc View Source List Gets a list of all Item 's on the server. Declaration public static IEnumerable<Item> List { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Item > | Improve this Doc View Source Owner Gets the Player who owns the item. Declaration public Player Owner { get; } Property Value Type Description Player | Improve this Doc View Source Scale Gets or sets the scale for the item. Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Serial Gets or sets the unique serial number for the item. Declaration public ushort Serial { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source TierFlags Gets the ItemTierFlags of the item. Declaration public ItemTierFlags TierFlags { get; } Property Value Type Description ItemTierFlags | Improve this Doc View Source Type Gets the ItemType of the item. Declaration public ItemType Type { get; } Property Value Type Description ItemType | Improve this Doc View Source Weight Gets the Weight of the item. Declaration public float Weight { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source Clone() Clones the current item with a different serial. Declaration public virtual Item Clone() Returns Type Description Item Cloned item object. | Improve this Doc View Source Create(ItemType, Player) Creates a new Item with the proper inherited subclass. Based on the type , the returned Item can be casted into a subclass to gain more control over the object. - Usable items (Adrenaline, Medkit, Painkillers, SCP-207, SCP-268, and SCP-500) should be casted to the Usable class. - All valid ammo should be casted to the Ammo class. - All valid firearms (not including the Micro HID) should be casted to the Firearm class. - All valid keycards should be casted to the Keycard class. - All valid armor should be casted to the Armor class. - Explosive grenades and SCP-018 should be casted to the ExplosiveGrenade class. - Flash grenades should be casted to the FlashGrenade class. The following have their own respective classes: - Flashlights can be casted to Flashlight . - Radios can be casted to Radio . - The Micro HID can be casted to MicroHid . - SCP-244 A and B variants can be casted to Scp244 . - SCP-330 can be casted to Scp330 . - SCP-2176 can be casted to the Scp2176 class. - SCP-1576 can be casted to the Scp1576 class. - Jailbird can be casted to the Jailbird class. Items that are not listed above do not have a subclass, and can only use the base Item class. Declaration public static Item Create(ItemType type, Player owner = null) Parameters Type Name Description ItemType type The ItemType of the item to create. Player owner The Player who owns the item by default. Returns Type Description Item The Item created. This can be cast as a subclass. | Improve this Doc View Source CreatePickup(Vector3, Quaternion, Boolean) Creates the Pickup that based on this Item . Declaration public virtual Pickup CreatePickup(Vector3 position, Quaternion rotation = default(Quaternion), bool spawn = true) Parameters Type Name Description UnityEngine.Vector3 position The location to spawn the item. UnityEngine.Quaternion rotation The rotation of the item. System.Boolean spawn Whether the Pickup should be initially spawned. Returns Type Description Pickup The created Pickup . | Improve this Doc View Source Destroy() Destroy this item. Declaration public void Destroy() | Improve this Doc View Source Get(ItemBase) Gets an existing Item or creates a new instance of one. Declaration public static Item Get(ItemBase itemBase) Parameters Type Name Description InventorySystem.Items.ItemBase itemBase The InventorySystem.Items.ItemBase to convert into an item. Returns Type Description Item The item wrapper for the given InventorySystem.Items.ItemBase . | Improve this Doc View Source Get(UInt16) Gets the Item belonging to the specified serial. Declaration public static Item Get(ushort serial) Parameters Type Name Description System.UInt16 serial The Item serial. Returns Type Description Item Returns the Item found or null if not found. | Improve this Doc View Source Give(Player) Gives this item to a Player . Declaration public void Give(Player player) Parameters Type Name Description Player player The Player to give the item to. | Improve this Doc View Source ToString() Returns the Item in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Item-related data. Overrides System.Object.ToString() Implements IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Jailbird.html": {
    "href": "api/Exiled.API.Features.Items.Jailbird.html",
    "title": "Class Jailbird | EXILED Docs",
    "keywords": "Class Jailbird A wrapped class for InventorySystem.Items.Jailbird.JailbirdItem . Inheritance System.Object TypeCastObject < Item > Item Jailbird Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.Jailbird.JailbirdItem > Inherited Members Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.Weight Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.CreatePickup(Vector3, Quaternion, Boolean) TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Jailbird : Item, IWrapper<ItemBase>, IWrapper<JailbirdItem> Constructors | Improve this Doc View Source Jailbird(JailbirdItem) Initializes a new instance of the Jailbird class. Declaration public Jailbird(JailbirdItem itemBase) Parameters Type Name Description InventorySystem.Items.Jailbird.JailbirdItem itemBase The base InventorySystem.Items.Jailbird.JailbirdItem class. Fields | Improve this Doc View Source ChargesLimit Number of Charges use before the weapon will being destroy. Declaration public const int ChargesLimit = default(int) Field Value Type Description System.Int32 | Improve this Doc View Source ChargesWarning Number of Charges use before the weapon become AlmostDepleted. Declaration public const int ChargesWarning = default(int) Field Value Type Description System.Int32 | Improve this Doc View Source DamageLimit Number of Damage made before the weapon will being destroy. Declaration public const float DamageLimit = default(float) Field Value Type Description System.Single | Improve this Doc View Source DamageWarning Number of Damage made before the weapon become AlmostDepleted. Declaration public const float DamageWarning = default(float) Field Value Type Description System.Single Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Jailbird.JailbirdItem that this class is encapsulating. Declaration public JailbirdItem Base { get; } Property Value Type Description InventorySystem.Items.Jailbird.JailbirdItem | Improve this Doc View Source ChargeDamage Gets or sets the amount of damage dealt with a Jailbird charge hit. Declaration public float ChargeDamage { get; set; } Property Value Type Description System.Single | Improve this Doc View Source FlashDuration Gets or sets the amount of time in seconds that the CustomPlayerEffects.Flashed effect will be applied on being hit. Declaration public float FlashDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAlmostDepleted Gets a value indicating whether the weapon warn the player than the Item will be broken. Declaration public bool IsAlmostDepleted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsChargesWarning Gets a value indicating whether . Declaration public bool IsChargesWarning { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsDamageWarning Gets a value indicating whether . Declaration public bool IsDamageWarning { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MeleeDamage Gets or sets the amount of damage dealt with a Jailbird melee hit. Declaration public float MeleeDamage { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Radius Gets or sets the radius of the Jailbird's hit register. Declaration public float Radius { get; set; } Property Value Type Description System.Single | Improve this Doc View Source RemainingCharges Gets or sets the amount of charges remaining before the Jailbird breaks. Declaration public int RemainingCharges { get; set; } Property Value Type Description System.Int32 Remarks Modifying this value will directly modify TotalCharges . See Also TotalCharges | Improve this Doc View Source RemainingDamage Gets or sets the amount of damage remaining before the Jailbird breaks. Declaration public float RemainingDamage { get; set; } Property Value Type Description System.Single Remarks Modifying this value will directly modify TotalDamageDealt . See Also TotalDamageDealt | Improve this Doc View Source TotalCharges Gets or sets the number of times the item has been charged and used. Declaration public int TotalCharges { get; set; } Property Value Type Description System.Int32 See Also RemainingCharges | Improve this Doc View Source TotalDamageDealt Gets or sets the total amount of damage dealt with the Jailbird. Declaration public float TotalDamageDealt { get; set; } Property Value Type Description System.Single See Also RemainingDamage Methods | Improve this Doc View Source Break() Breaks the Jailbird. Declaration public void Break() | Improve this Doc View Source Clone() Clones current Jailbird object. Declaration public override Item Clone() Returns Type Description Item New Jailbird object. Overrides Item.Clone() | Improve this Doc View Source ToString() Returns the JailBird in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing JailBird-related data. Overrides Item.ToString() Implements IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Keycard.html": {
    "href": "api/Exiled.API.Features.Items.Keycard.html",
    "title": "Class Keycard | EXILED Docs",
    "keywords": "Class Keycard A wrapper class for InventorySystem.Items.Keycards.KeycardItem . Inheritance System.Object TypeCastObject < Item > Item Keycard Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.Keycards.KeycardItem > Inherited Members Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.Weight Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.CreatePickup(Vector3, Quaternion, Boolean) TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Keycard : Item, IWrapper<ItemBase>, IWrapper<KeycardItem> Constructors | Improve this Doc View Source Keycard(KeycardItem) Initializes a new instance of the Keycard class. Declaration public Keycard(KeycardItem itemBase) Parameters Type Name Description InventorySystem.Items.Keycards.KeycardItem itemBase The base InventorySystem.Items.Keycards.KeycardItem class. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Keycards.KeycardItem that this class is encapsulating. Declaration public KeycardItem Base { get; } Property Value Type Description InventorySystem.Items.Keycards.KeycardItem | Improve this Doc View Source Permissions Gets or sets the KeycardPermissions of the keycard. Declaration public KeycardPermissions Permissions { get; set; } Property Value Type Description KeycardPermissions Methods | Improve this Doc View Source Clone() Clones current Keycard object. Declaration public override Item Clone() Returns Type Description Item New Keycard object. Overrides Item.Clone() | Improve this Doc View Source ToString() Returns the Keycard in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Keycard-related data. Overrides Item.ToString() Implements IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.MicroHid.html": {
    "href": "api/Exiled.API.Features.Items.MicroHid.html",
    "title": "Class MicroHid | EXILED Docs",
    "keywords": "Class MicroHid A wrapper class for InventorySystem.Items.MicroHID.MicroHIDItem . Inheritance System.Object TypeCastObject < Item > Item MicroHid Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.MicroHID.MicroHIDItem > Inherited Members Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.Weight Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.CreatePickup(Vector3, Quaternion, Boolean) TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class MicroHid : Item, IWrapper<ItemBase>, IWrapper<MicroHIDItem> Constructors | Improve this Doc View Source MicroHid(MicroHIDItem) Initializes a new instance of the MicroHid class. Declaration public MicroHid(MicroHIDItem itemBase) Parameters Type Name Description InventorySystem.Items.MicroHID.MicroHIDItem itemBase The base InventorySystem.Items.MicroHID.MicroHIDItem class. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.MicroHID.MicroHIDItem base of the item. Declaration public MicroHIDItem Base { get; } Property Value Type Description InventorySystem.Items.MicroHID.MicroHIDItem | Improve this Doc View Source Energy Gets or sets the remaining energy in the MicroHID. Declaration public float Energy { get; set; } Property Value Type Description System.Single | Improve this Doc View Source State Gets or sets the InventorySystem.Items.MicroHID.HidState . Declaration public HidState State { get; set; } Property Value Type Description InventorySystem.Items.MicroHID.HidState Methods | Improve this Doc View Source Clone() Clones current MicroHid object. Declaration public override Item Clone() Returns Type Description Item New MicroHid object. Overrides Item.Clone() | Improve this Doc View Source Fire() Starts firing the MicroHID. Declaration public void Fire() | Improve this Doc View Source Recharge() Recharges the MicroHID. Declaration public void Recharge() | Improve this Doc View Source ToString() Returns the MicroHid in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing MicroHid-related data. Overrides Item.ToString() Implements IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Radio.html": {
    "href": "api/Exiled.API.Features.Items.Radio.html",
    "title": "Class Radio | EXILED Docs",
    "keywords": "Class Radio A wrapper class for InventorySystem.Items.Radio.RadioItem . Inheritance System.Object TypeCastObject < Item > Item Radio Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.Radio.RadioItem > Inherited Members Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.Weight Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.CreatePickup(Vector3, Quaternion, Boolean) TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Radio : Item, IWrapper<ItemBase>, IWrapper<RadioItem> Constructors | Improve this Doc View Source Radio(RadioItem) Initializes a new instance of the Radio class. Declaration public Radio(RadioItem itemBase) Parameters Type Name Description InventorySystem.Items.Radio.RadioItem itemBase The base InventorySystem.Items.Radio.RadioItem class. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Radio.RadioItem that this class is encapsulating. Declaration public RadioItem Base { get; } Property Value Type Description InventorySystem.Items.Radio.RadioItem | Improve this Doc View Source BatteryLevel Gets or sets the percentage of the radio's battery, between 0-100 . Declaration public byte BatteryLevel { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source IsEnabled Gets or sets a value indicating whether the radio is enabled or not. Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Range Gets or sets the current RadioRange . Declaration public RadioRange Range { get; set; } Property Value Type Description RadioRange | Improve this Doc View Source RangeSettings Gets or sets the RadioRangeSettings for the current Range . Declaration public RadioRangeSettings RangeSettings { get; set; } Property Value Type Description RadioRangeSettings Methods | Improve this Doc View Source Clone() Clones current Radio object. Declaration public override Item Clone() Returns Type Description Item New Radio object. Overrides Item.Clone() | Improve this Doc View Source SetRangeSettings(RadioRange, RadioRangeSettings) Sets the RadioRangeSettings of the given range . Declaration public void SetRangeSettings(RadioRange range, RadioRangeSettings settings) Parameters Type Name Description RadioRange range The RadioRange to modify. RadioRangeSettings settings The new settings of the specified range. | Improve this Doc View Source ToString() Returns the Radio in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Radio-related data. Overrides Item.ToString() Implements IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Scp1576.html": {
    "href": "api/Exiled.API.Features.Items.Scp1576.html",
    "title": "Class Scp1576 | EXILED Docs",
    "keywords": "Class Scp1576 A wrapper class for InventorySystem.Items.Usables.Scp1576.Scp1576Item . Inheritance System.Object TypeCastObject < Item > Item Usable Scp1576 Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.Usables.UsableItem > IWrapper < InventorySystem.Items.Usables.Scp1576.Scp1576Item > Inherited Members Usable.Equippable Usable.Holsterable Usable.Weight Usable.IsUsing Usable.UseTime Usable.MaxCancellableTime Usable.RemainingCooldown Usable.PlayerGetCooldown Usable.CreatePickup(Vector3, Quaternion, Boolean) Usable.Use() Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.Clone() Item.ToString() TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Scp1576 : Usable, IWrapper<ItemBase>, IWrapper<UsableItem>, IWrapper<Scp1576Item> Constructors | Improve this Doc View Source Scp1576(Scp1576Item) Initializes a new instance of the Scp1576 class. Declaration public Scp1576(Scp1576Item itemBase) Parameters Type Name Description InventorySystem.Items.Usables.Scp1576.Scp1576Item itemBase The base InventorySystem.Items.Usables.Scp1576.Scp1576Item class. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Usables.UsableItem that this class is encapsulating. Declaration public Scp1576Item Base { get; } Property Value Type Description InventorySystem.Items.Usables.Scp1576.Scp1576Item | Improve this Doc View Source PlaybackTemplate Gets Scp1576Playback. Declaration public Scp1576Playback PlaybackTemplate { get; } Property Value Type Description InventorySystem.Items.Usables.Scp1576.Scp1576Playback Methods | Improve this Doc View Source StopTransmitting() Forcefully stops the transmission of SCP-1576. Declaration public void StopTransmitting() Implements IWrapper<T> IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Scp2176.html": {
    "href": "api/Exiled.API.Features.Items.Scp2176.html",
    "title": "Class Scp2176 | EXILED Docs",
    "keywords": "Class Scp2176 A wrapper class for Scp2176Projectile . Inheritance System.Object TypeCastObject < Item > Item Throwable Scp2176 Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.ThrowableProjectiles.ThrowableItem > Inherited Members Throwable.Base Throwable.PinPullTime Throwable.Repickable Throwable.Throw(Boolean) Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.Weight Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.CreatePickup(Vector3, Quaternion, Boolean) TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Scp2176 : Throwable, IWrapper<ItemBase>, IWrapper<ThrowableItem> Constructors | Improve this Doc View Source Scp2176(ThrowableItem) Initializes a new instance of the Scp2176 class. Declaration public Scp2176(ThrowableItem itemBase) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.ThrowableItem itemBase The base InventorySystem.Items.ThrowableProjectiles.ThrowableItem class. Properties | Improve this Doc View Source FuseTime Gets or sets how long the fuse will last. Declaration public float FuseTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Projectile Gets a Scp2176Projectile to change grenade properties. Declaration public Scp2176Projectile Projectile { get; } Property Value Type Description Scp2176Projectile Methods | Improve this Doc View Source Clone() Clones current Scp2176 object. Declaration public override Item Clone() Returns Type Description Item New Scp2176 object. Overrides Throwable.Clone() | Improve this Doc View Source SpawnActive(Vector3, Player) Spawns an active grenade on the map at the specified location. Declaration public Scp2176Projectile SpawnActive(Vector3 position, Player owner = null) Parameters Type Name Description UnityEngine.Vector3 position The location to spawn the grenade. Player owner Optional: The Player owner of the grenade. Returns Type Description Scp2176Projectile Spawned grenade . | Improve this Doc View Source ToString() Returns the ExplosiveGrenade in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing ExplosiveGrenade-related data. Overrides Throwable.ToString() Implements IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Scp244.html": {
    "href": "api/Exiled.API.Features.Items.Scp244.html",
    "title": "Class Scp244 | EXILED Docs",
    "keywords": "Class Scp244 A wrapper class for SCP-244. Inheritance System.Object TypeCastObject < Item > Item Usable Scp244 Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.Usables.UsableItem > IWrapper < InventorySystem.Items.Usables.Scp244.Scp244Item > Inherited Members Usable.Equippable Usable.Holsterable Usable.Weight Usable.IsUsing Usable.UseTime Usable.MaxCancellableTime Usable.RemainingCooldown Usable.PlayerGetCooldown Usable.Use() Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Scp244 : Usable, IWrapper<ItemBase>, IWrapper<UsableItem>, IWrapper<Scp244Item> Constructors | Improve this Doc View Source Scp244(Scp244Item) Initializes a new instance of the Scp244 class. Declaration public Scp244(Scp244Item itemBase) Parameters Type Name Description InventorySystem.Items.Usables.Scp244.Scp244Item itemBase The base InventorySystem.Items.Usables.Scp244.Scp244Item class. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Usables.Scp244.Scp244Item that this class is encapsulating. Declaration public Scp244Item Base { get; } Property Value Type Description InventorySystem.Items.Usables.Scp244.Scp244Item | Improve this Doc View Source Primed Gets or sets a value indicating whether or not SCP-244 will spawn primed. Declaration public bool Primed { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Clone() Clones current Scp244 object. Declaration public override Item Clone() Returns Type Description Item New Scp244 object. Overrides Item.Clone() | Improve this Doc View Source CreatePickup(Vector3, Quaternion, Boolean) Creates the Pickup that based on this Item . Declaration public override Pickup CreatePickup(Vector3 position, Quaternion rotation = default(Quaternion), bool spawn = true) Parameters Type Name Description UnityEngine.Vector3 position The location to spawn the item. UnityEngine.Quaternion rotation The rotation of the item. System.Boolean spawn Whether the Pickup should be initially spawned. Returns Type Description Pickup The created Pickup . Overrides Usable.CreatePickup(Vector3, Quaternion, Boolean) | Improve this Doc View Source ToString() Returns the SCP-244 in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing SCP-244 related data. Overrides Item.ToString() Implements IWrapper<T> IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Scp330.html": {
    "href": "api/Exiled.API.Features.Items.Scp330.html",
    "title": "Class Scp330 | EXILED Docs",
    "keywords": "Class Scp330 A wrapper class for SCP-330 bags. Inheritance System.Object TypeCastObject < Item > Item Usable Scp330 Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.Usables.UsableItem > IWrapper < InventorySystem.Items.Usables.Scp330.Scp330Bag > Inherited Members Usable.Equippable Usable.Holsterable Usable.Weight Usable.IsUsing Usable.UseTime Usable.MaxCancellableTime Usable.RemainingCooldown Usable.PlayerGetCooldown Usable.Use() Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Scp330 : Usable, IWrapper<ItemBase>, IWrapper<UsableItem>, IWrapper<Scp330Bag> Constructors | Improve this Doc View Source Scp330(Scp330Bag) Initializes a new instance of the Scp330 class. Declaration public Scp330(Scp330Bag itemBase) Parameters Type Name Description InventorySystem.Items.Usables.Scp330.Scp330Bag itemBase The base InventorySystem.Items.Usables.Scp330.Scp330Bag class. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Usables.Scp330.Scp330Bag that this class is encapsulating. Declaration public Scp330Bag Base { get; } Property Value Type Description InventorySystem.Items.Usables.Scp330.Scp330Bag | Improve this Doc View Source Candies Gets the InventorySystem.Items.Usables.Scp330.CandyKindID s held in this bag. Declaration public IReadOnlyCollection<CandyKindID> Candies { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < InventorySystem.Items.Usables.Scp330.CandyKindID > | Improve this Doc View Source ExposedType Gets or sets the exposed type. When set to a candy color, the bag will appear as that candy when dropped with the Exiled.API.Features.Spawn method. Setting it to InventorySystem.Items.Usables.Scp330.CandyKindID.None results in it looking like a bag. Declaration public CandyKindID ExposedType { get; set; } Property Value Type Description InventorySystem.Items.Usables.Scp330.CandyKindID Methods | Improve this Doc View Source AddCandy(CandyKindID) Adds a specific candy to the bag. Declaration public bool AddCandy(CandyKindID type) Parameters Type Name Description InventorySystem.Items.Usables.Scp330.CandyKindID type The InventorySystem.Items.Usables.Scp330.CandyKindID to add. Returns Type Description System.Boolean true if the candy was successfully added to the bag; otherwise, false . | Improve this Doc View Source AddCandy(IEnumerable<CandyKindID>, out CandyAddStatus) Adds a collection of candy's to a bag. Declaration public int AddCandy(IEnumerable<CandyKindID> candies, out CandyAddStatus status) Parameters Type Name Description System.Collections.Generic.IEnumerable < InventorySystem.Items.Usables.Scp330.CandyKindID > candies The InventorySystem.Items.Usables.Scp330.CandyKindID 's to add. CandyAddStatus status The CandyAddStatus 's insertion status. Returns Type Description System.Int32 based on number of candy added. | Improve this Doc View Source Clone() Clones current Scp330 object. Declaration public override Item Clone() Returns Type Description Item New Scp330 object. Overrides Item.Clone() | Improve this Doc View Source CreatePickup(Vector3, Quaternion, Boolean) Creates the Pickup that based on this Item . Declaration public override Pickup CreatePickup(Vector3 position, Quaternion rotation = default(Quaternion), bool spawn = true) Parameters Type Name Description UnityEngine.Vector3 position The UnityEngine.Vector3 location to spawn it. UnityEngine.Quaternion rotation The UnityEngine.Quaternion rotation to give the item. System.Boolean spawn Whether the Scp330Pickup should be initially spawned. Returns Type Description Pickup The created Pickup . Overrides Usable.CreatePickup(Vector3, Quaternion, Boolean) | Improve this Doc View Source DropCandy(CandyKindID, Boolean, Boolean, CandyKindID) Drops candies from the bag. Declaration public IEnumerable<Scp330Pickup> DropCandy(CandyKindID type, bool dropAll = false, bool dropIndividual = false, CandyKindID exposedType = CandyKindID.None) Parameters Type Name Description InventorySystem.Items.Usables.Scp330.CandyKindID type The InventorySystem.Items.Usables.Scp330.CandyKindID of candies to drop. System.Boolean dropAll Whether or not to drop all candies matching the given type, or just one. System.Boolean dropIndividual Whether or not to drop all candies individually, or as a bag, when dropping more than one candy. InventorySystem.Items.Usables.Scp330.CandyKindID exposedType The ExposedType to use, if the override is set to true. Returns Type Description System.Collections.Generic.IEnumerable < Scp330Pickup > a System.Collections.Generic.IEnumerable<T> of Pickup s generated by this method. Can be empty! . | Improve this Doc View Source RemoveAllCandy() Removes all candy from the bag. Declaration public int RemoveAllCandy() Returns Type Description System.Int32 The total amount of candies that were removed from the bag. | Improve this Doc View Source RemoveCandy(CandyKindID, Boolean) Removes a specific candy from the bag. Declaration public int RemoveCandy(CandyKindID type, bool removeAll = false) Parameters Type Name Description InventorySystem.Items.Usables.Scp330.CandyKindID type The InventorySystem.Items.Usables.Scp330.CandyKindID to be removed. System.Boolean removeAll Whether or not to only remove all matching candy. (If true , all candies of the given type are removed). Returns Type Description System.Int32 The total amount of candies that were removed from the bag. | Improve this Doc View Source ToString() Returns the SCP-330 in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing SCP-330 related data. Overrides Item.ToString() Implements IWrapper<T> IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Throwable.html": {
    "href": "api/Exiled.API.Features.Items.Throwable.html",
    "title": "Class Throwable | EXILED Docs",
    "keywords": "Class Throwable A wrapper class for throwable items. Inheritance System.Object TypeCastObject < Item > Item Throwable ExplosiveGrenade FlashGrenade Scp2176 Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.ThrowableProjectiles.ThrowableItem > Inherited Members Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.Weight Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.CreatePickup(Vector3, Quaternion, Boolean) TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Throwable : Item, IWrapper<ItemBase>, IWrapper<ThrowableItem> Constructors | Improve this Doc View Source Throwable(ThrowableItem) Initializes a new instance of the Throwable class. Declaration public Throwable(ThrowableItem itemBase) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.ThrowableItem itemBase The base InventorySystem.Items.ThrowableProjectiles.ThrowableItem class. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.ThrowableProjectiles.ThrowableItem base for this item. Declaration public ThrowableItem Base { get; } Property Value Type Description InventorySystem.Items.ThrowableProjectiles.ThrowableItem | Improve this Doc View Source PinPullTime Gets or sets the amount of time it takes to pull the pin. Declaration public float PinPullTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Projectile Gets a Projectile to change grenade properties. Declaration public Projectile Projectile { get; } Property Value Type Description Projectile | Improve this Doc View Source Repickable Gets or sets a value indicating whether players can pickup grenade after throw. Declaration public bool Repickable { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Clone() Clones current Throwable object. Declaration public override Item Clone() Returns Type Description Item New Throwable object. Overrides Item.Clone() | Improve this Doc View Source Throw(Boolean) Throws the item. Declaration public void Throw(bool fullForce = true) Parameters Type Name Description System.Boolean fullForce Whether to use full or weak force. | Improve this Doc View Source ToString() Returns the Throwable in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Throwable-related data. Overrides Item.ToString() Implements IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Items.Usable.html": {
    "href": "api/Exiled.API.Features.Items.Usable.html",
    "title": "Class Usable | EXILED Docs",
    "keywords": "Class Usable A wrapper class for InventorySystem.Items.Usables.UsableItem . Inheritance System.Object TypeCastObject < Item > Item Usable Consumable Scp1576 Scp244 Scp330 Implements IWrapper < InventorySystem.Items.ItemBase > IWrapper < InventorySystem.Items.Usables.UsableItem > Inherited Members Item.List Item.Serial Item.IsInInventory Item.Scale Item.Type Item.Category Item.TierFlags Item.IsAmmo Item.IsArmor Item.IsKeycard Item.IsConsumable Item.IsThrowable Item.IsUsable Item.IsWeapon Item.Owner Item.Get(ItemBase) Item.Get(UInt16) Item.Create(ItemType, Player) Item.Give(Player) Item.Destroy() Item.Clone() Item.ToString() TypeCastObject<Item>.Cast<TObject>() TypeCastObject<Item>.Cast<TObject>(TObject) TypeCastObject<Item>.As<TObject>() TypeCastObject<Item>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Items Assembly : Exiled.API.dll Syntax public class Usable : Item, IWrapper<ItemBase>, IWrapper<UsableItem> Constructors | Improve this Doc View Source Usable(UsableItem) Initializes a new instance of the Usable class. Declaration public Usable(UsableItem itemBase) Parameters Type Name Description InventorySystem.Items.Usables.UsableItem itemBase The base InventorySystem.Items.Usables.UsableItem class. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Usables.UsableItem that this class is encapsulating. Declaration public UsableItem Base { get; } Property Value Type Description InventorySystem.Items.Usables.UsableItem | Improve this Doc View Source Equippable Gets a value indicating whether this item is equippable. Declaration public bool Equippable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Holsterable Gets a value indicating whether this item is holsterable. Declaration public bool Holsterable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUsing Gets a value indicating whether the item is currently being used. Declaration public bool IsUsing { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxCancellableTime Gets or sets how long after using starts a player has to cancel using the item. Declaration public float MaxCancellableTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source PlayerGetCooldown Gets all the cooldown between uses of this item. Declaration public float PlayerGetCooldown { get; } Property Value Type Description System.Single | Improve this Doc View Source RemainingCooldown Gets or sets the cooldown between repeated uses of this item. Declaration public float RemainingCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source UseTime Gets or sets how long it takes to use the item. Declaration public float UseTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Weight Gets or sets the weight of the item. Declaration public float Weight { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source CreatePickup(Vector3, Quaternion, Boolean) Creates the Pickup that based on this Item . Declaration public override Pickup CreatePickup(Vector3 position, Quaternion rotation = default(Quaternion), bool spawn = true) Parameters Type Name Description UnityEngine.Vector3 position The location to spawn the item. UnityEngine.Quaternion rotation The rotation of the item. System.Boolean spawn Whether the Pickup should be initially spawned. Returns Type Description Pickup The created Pickup . Overrides Item.CreatePickup(Vector3, Quaternion, Boolean) | Improve this Doc View Source Use() Uses the item. Declaration public virtual void Use() Exceptions Type Condition System.InvalidOperationException The Owner of the item cannot be null . Implements IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Lift.html": {
    "href": "api/Exiled.API.Features.Lift.html",
    "title": "Class Lift | EXILED Docs",
    "keywords": "Class Lift The in-game lift. Inheritance System.Object Lift Implements IWrapper < Interactables.Interobjects.ElevatorChamber > IWorldSpace IPosition IRotation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Lift : IWrapper<ElevatorChamber>, IWorldSpace, IPosition, IRotation Properties | Improve this Doc View Source AnimationTime Gets or sets the AnimationTime . Declaration public float AnimationTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Base Gets the base Interactables.Interobjects.ElevatorChamber . Declaration public ElevatorChamber Base { get; } Property Value Type Description Interactables.Interobjects.ElevatorChamber | Improve this Doc View Source Bounds Gets the UnityEngine.Bounds representing the space inside the lift. Declaration public Bounds Bounds { get; } Property Value Type Description UnityEngine.Bounds | Improve this Doc View Source CurrentDestination Gets the CurrentDestination . Declaration public ElevatorDoor CurrentDestination { get; } Property Value Type Description Interactables.Interobjects.ElevatorDoor | Improve this Doc View Source CurrentLevel Gets the CurrentLevel . Declaration public int CurrentLevel { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Doors Gets a value of the internal doors list. Declaration public IReadOnlyCollection<ElevatorDoor> Doors { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < Interactables.Interobjects.ElevatorDoor > | Improve this Doc View Source GameObject Gets the UnityEngine.GameObject of the lift. Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source Group Gets the Interactables.Interobjects.ElevatorManager.ElevatorGroup . Declaration public ElevatorManager.ElevatorGroup Group { get; } Property Value Type Description Interactables.Interobjects.ElevatorManager.ElevatorGroup | Improve this Doc View Source IsLocked Gets a value indicating whether the lift is locked. Declaration public bool IsLocked { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMoving Gets a value indicating whether the lift is currently moving. Declaration public bool IsMoving { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOperative Gets a value indicating whether the lift is operative. Declaration public bool IsOperative { get; } Property Value Type Description System.Boolean | Improve this Doc View Source List Gets a System.Collections.Generic.IEnumerable<T> of Lift which contains all the Lift instances. Declaration public static IEnumerable<Lift> List { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Lift > | Improve this Doc View Source Name Gets the lift's name. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Position Gets or sets the lift's position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Random Gets a random Lift . Declaration public static Lift Random { get; } Property Value Type Description Lift Lift object. | Improve this Doc View Source Rotation Gets or sets the lift's rotation. Declaration public Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Status Gets or sets the lift's Interactables.Interobjects.ElevatorChamber status. Declaration public ElevatorChamber.ElevatorSequence Status { get; set; } Property Value Type Description Interactables.Interobjects.ElevatorChamber.ElevatorSequence | Improve this Doc View Source Transform Gets the lift's UnityEngine.Transform . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source Type Gets the lift's ElevatorType . Declaration public ElevatorType Type { get; } Property Value Type Description ElevatorType Methods | Improve this Doc View Source ChangeLock(DoorLockReason) Changes lock of the lift. Declaration public void ChangeLock(DoorLockReason lockReason) Parameters Type Name Description Interactables.Interobjects.DoorUtils.DoorLockReason lockReason Type of lift lockdown. | Improve this Doc View Source Finalize() Finalizes an instance of the Lift class. Declaration protected void Finalize() | Improve this Doc View Source Get(ElevatorType) Gets the Lift corresponding to the specified ElevatorType , if any. Declaration public static Lift Get(ElevatorType type) Parameters Type Name Description ElevatorType type The ElevatorType . Returns Type Description Lift A Lift or null if not found. | Improve this Doc View Source Get(ElevatorChamber) Gets the Lift belonging to the Interactables.Interobjects.ElevatorChamber , if any. Declaration public static Lift Get(ElevatorChamber elevator) Parameters Type Name Description Interactables.Interobjects.ElevatorChamber elevator The Interactables.Interobjects.ElevatorChamber instance. Returns Type Description Lift A Lift or null if not found. | Improve this Doc View Source Get(ElevatorChamber.ElevatorSequence) Gets a System.Collections.Generic.IEnumerable<T> of Lift which contains all the Lift instances from the specified Status . Declaration public static IEnumerable<Lift> Get(ElevatorChamber.ElevatorSequence status) Parameters Type Name Description Interactables.Interobjects.ElevatorChamber.ElevatorSequence status The specified Interactables.Interobjects.ElevatorChamber . Returns Type Description System.Collections.Generic.IEnumerable < Lift > A Lift or null if not found. | Improve this Doc View Source Get(Func<Lift, Boolean>) Gets a System.Collections.Generic.IEnumerable<T> of Lift filtered based on a predicate. Declaration public static IEnumerable<Lift> Get(Func<Lift, bool> predicate) Parameters Type Name Description System.Func < Lift , System.Boolean > predicate The condition to satify. Returns Type Description System.Collections.Generic.IEnumerable < Lift > A System.Collections.Generic.IEnumerable<T> of Lift which contains elements that satify the condition. | Improve this Doc View Source Get(String) Gets the Lift corresponding to the specified name, if any. Declaration public static Lift Get(string name) Parameters Type Name Description System.String name The lift's name. Returns Type Description Lift A Lift or null if not found. | Improve this Doc View Source Get(GameObject) Gets the Lift belonging to the UnityEngine.GameObject , if any. Declaration public static Lift Get(GameObject gameObject) Parameters Type Name Description UnityEngine.GameObject gameObject The UnityEngine.GameObject . Returns Type Description Lift A Lift or null if not found. | Improve this Doc View Source Get(Vector3) Gets the Lift belonging to the UnityEngine.Vector3 , if any. Declaration public static Lift Get(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position The UnityEngine.Vector3 . Returns Type Description Lift A Lift or null if not found. | Improve this Doc View Source IsInElevator(Vector3) Returns whether or not the provided UnityEngine.Vector3 is inside the lift. Declaration public bool IsInElevator(Vector3 point) Parameters Type Name Description UnityEngine.Vector3 point The position. Returns Type Description System.Boolean true if the point is inside the elevator. Otherwise, false . | Improve this Doc View Source ToString() Returns the Lift in a human-readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Lift-related data. Overrides System.Object.ToString() | Improve this Doc View Source TryMeltPlayer(Player) Tries to melt a Player . Declaration public static bool TryMeltPlayer(Player player) Parameters Type Name Description Player player The Player to melt. Returns Type Description System.Boolean true if the player was melted successfully; otherwise, false . See Also EnableEffect(EffectType, Single, Boolean) | Improve this Doc View Source TryStart(Int32, Boolean) Tries to start the lift. Declaration public bool TryStart(int level, bool isForced = false) Parameters Type Name Description System.Int32 level The destination level. System.Boolean isForced Indicates whether the start will be forced or not. Returns Type Description System.Boolean true if the lift was started successfully; otherwise, false . Implements IWrapper<T> IWorldSpace IPosition IRotation Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Log.html": {
    "href": "api/Exiled.API.Features.Log.html",
    "title": "Class Log | EXILED Docs",
    "keywords": "Class Log A set of tools to print messages on the server console. Inheritance System.Object Log Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Log Methods | Improve this Doc View Source Assert(Boolean, Object) Sends an Error(Object) with the provided message if the condition is false and stops the execution. For example: Player ply = Player.Get(2); Log.Assert(ply is not null, \"The player with the id 2 is null\"); results in it logging an error if the player is null and not continuing. Declaration public static void Assert(bool condition, object message) Parameters Type Name Description System.Boolean condition The conditional expression to evaluate. If the condition is true it will continue. System.Object message The information message. The error and exception will show this message. Exceptions Type Condition System.Exception If the condition is false. It throws an exception stopping the execution. | Improve this Doc View Source Debug(Object) Sends a Discord.LogLevel.Debug level messages to the game console. Server must have exiled_debug config enabled. Declaration public static void Debug(object message) Parameters Type Name Description System.Object message The message to be sent. | Improve this Doc View Source Debug(String) Sends a Discord.LogLevel.Debug level messages to the game console. Server must have exiled_debug config enabled. Declaration public static void Debug(string message) Parameters Type Name Description System.String message The message to be sent. | Improve this Doc View Source DebugObject<T>(T) Sends a Discord.LogLevel.Debug level messages to the game console. Server must have exiled_debug config enabled. Declaration public static T DebugObject<T>(T object) Parameters Type Name Description T object The object to be logged and returned. Returns Type Description T Returns the T object inputted in object . Type Parameters Name Description T The inputted object's type. | Improve this Doc View Source Error(Object) Sends a Discord.LogLevel.Error level messages to the game console. This should be used to send errors only. It's recommended to send any messages in the catch block of a try/catch as errors with the exception string. Declaration public static void Error(object message) Parameters Type Name Description System.Object message The message to be sent. | Improve this Doc View Source Error(String) Sends a Discord.LogLevel.Error level messages to the game console. This should be used to send errors only. It's recommended to send any messages in the catch block of a try/catch as errors with the exception string. Declaration public static void Error(string message) Parameters Type Name Description System.String message The message to be sent. | Improve this Doc View Source Info(Object) Sends a Discord.LogLevel.Info level messages to the game console. Declaration public static void Info(object message) Parameters Type Name Description System.Object message The message to be sent. | Improve this Doc View Source Info(String) Sends a Discord.LogLevel.Info level messages to the game console. Declaration public static void Info(string message) Parameters Type Name Description System.String message The message to be sent. | Improve this Doc View Source Send(Object, LogLevel, ConsoleColor) Sends a log message to the game console. Declaration public static void Send(object message, LogLevel level, ConsoleColor color = ConsoleColor.Gray) Parameters Type Name Description System.Object message The message to be sent. Discord.LogLevel level The message level of importance. System.ConsoleColor color The message color. | Improve this Doc View Source Send(String, LogLevel, ConsoleColor) Sends a log message to the game console. Declaration public static void Send(string message, LogLevel level, ConsoleColor color = ConsoleColor.Gray) Parameters Type Name Description System.String message The message to be sent. Discord.LogLevel level The message level of importance. System.ConsoleColor color The message color. | Improve this Doc View Source SendRaw(Object, ConsoleColor) Sends a raw log message to the game console. Declaration public static void SendRaw(object message, ConsoleColor color) Parameters Type Name Description System.Object message The message to be sent. System.ConsoleColor color The System.ConsoleColor of the message. | Improve this Doc View Source SendRaw(String, ConsoleColor) Sends a raw log message to the game console. Declaration public static void SendRaw(string message, ConsoleColor color) Parameters Type Name Description System.String message The message to be sent. System.ConsoleColor color The System.ConsoleColor of the message. | Improve this Doc View Source Warn(Object) Sends a Discord.LogLevel.Warn level messages to the game console. Declaration public static void Warn(object message) Parameters Type Name Description System.Object message The message to be sent. | Improve this Doc View Source Warn(String) Sends a Discord.LogLevel.Warn level messages to the game console. Declaration public static void Warn(string message) Parameters Type Name Description System.String message The message to be sent."
  },
  "api/Exiled.API.Features.Map.html": {
    "href": "api/Exiled.API.Features.Map.html",
    "title": "Class Map | EXILED Docs",
    "keywords": "Class Map A set of tools to easily handle the in-game map. Inheritance System.Object Map Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Map Properties | Improve this Doc View Source AmbientSoundPlayer Gets the AmbientSoundPlayer . Declaration public static AmbientSoundPlayer AmbientSoundPlayer { get; } Property Value Type Description AmbientSoundPlayer | Improve this Doc View Source AmnesticCloudPrefab Gets the amnestic cloud prefab. Declaration public static Scp939AmnesticCloudInstance AmnesticCloudPrefab { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp939.Scp939AmnesticCloudInstance | Improve this Doc View Source IsLczDecontaminated Gets a value indicating whether decontamination has begun in the light containment zone. Declaration public static bool IsLczDecontaminated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Lockers Gets all MapGeneration.Distributors.Locker objects. Declaration public static ReadOnlyCollection<Locker> Lockers { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < MapGeneration.Distributors.Locker > | Improve this Doc View Source PocketDimensionTeleports Gets all PocketDimensionTeleport objects. Declaration public static ReadOnlyCollection<PocketDimensionTeleport> PocketDimensionTeleports { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < PocketDimensionTeleport > | Improve this Doc View Source Seed Gets or sets the current seed of the map. Declaration public static int Seed { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TantrumPrefab Gets the tantrum prefab. Declaration public static TantrumEnvironmentalHazard TantrumPrefab { get; } Property Value Type Description Hazards.TantrumEnvironmentalHazard | Improve this Doc View Source Toys Gets all AdminToy objects. Declaration public static ReadOnlyCollection<AdminToy> Toys { get; } Property Value Type Description System.Collections.ObjectModel.ReadOnlyCollection < AdminToy > Methods | Improve this Doc View Source Broadcast(Broadcast, Boolean) Broadcasts a message to all players . Declaration public static void Broadcast(Broadcast broadcast, bool shouldClearPrevious = false) Parameters Type Name Description Broadcast broadcast The Broadcast to be broadcasted. System.Boolean shouldClearPrevious Clears all players' broadcasts before sending the new one. | Improve this Doc View Source Broadcast(UInt16, String, Broadcast.BroadcastFlags, Boolean) Broadcasts a message to all players . Declaration public static void Broadcast(ushort duration, string message, Broadcast.BroadcastFlags type = Broadcast.BroadcastFlags.Normal, bool shouldClearPrevious = false) Parameters Type Name Description System.UInt16 duration The duration in seconds. System.String message The message that will be broadcast (supports Unity Rich Text formatting). Broadcast.BroadcastFlags type The broadcast type. System.Boolean shouldClearPrevious Clears all players' broadcasts before sending the new one. | Improve this Doc View Source ClearBroadcasts() Clears all players ' broadcasts. Declaration public static void ClearBroadcasts() | Improve this Doc View Source FindParentRoom(GameObject) Tries to find the room that a UnityEngine.GameObject is inside, first using the UnityEngine.Transform 's parents, then using a Raycast if no room was found. Declaration [Obsolete(\"Use Room.FindParentRoom(GameObject) instead.\")] public static Room FindParentRoom(GameObject objectInRoom) Parameters Type Name Description UnityEngine.GameObject objectInRoom The UnityEngine.GameObject inside the room. Returns Type Description Room The Room that the UnityEngine.GameObject is located inside. Can be null . See Also Get(Vector3) | Improve this Doc View Source GetNearCameras(Vector3, Single) Gets all the near cameras. Declaration public static IEnumerable<Camera> GetNearCameras(Vector3 position, float toleration = 15F) Parameters Type Name Description UnityEngine.Vector3 position The position from which starting to search cameras. System.Single toleration The maximum toleration to define the radius from which get the cameras. Returns Type Description System.Collections.Generic.IEnumerable < Camera > A System.Collections.Generic.IEnumerable<T> of Camera which contains all the found cameras. | Improve this Doc View Source GetRandomLocker() Gets a random MapGeneration.Distributors.Locker . Declaration public static Locker GetRandomLocker() Returns Type Description MapGeneration.Distributors.Locker MapGeneration.Distributors.Locker object. | Improve this Doc View Source GetRandomPickup(ItemType) Gets a random Pickup . Declaration public static Pickup GetRandomPickup(ItemType type = ItemType.None) Parameters Type Name Description ItemType type Filters by ItemType . Returns Type Description Pickup Pickup object. | Improve this Doc View Source PlaceBlood(Vector3, Vector3) Places a blood decal. Declaration public static void PlaceBlood(Vector3 position, Vector3 direction) Parameters Type Name Description UnityEngine.Vector3 position The position of the blood decal. UnityEngine.Vector3 direction The direction of the blood decal. | Improve this Doc View Source PlaceTantrum(Vector3, Boolean) Places a Tantrum (SCP-173's ability) in the indicated position. Declaration public static GameObject PlaceTantrum(Vector3 position, bool isActive = true) Parameters Type Name Description UnityEngine.Vector3 position The position where you want to spawn the Tantrum. System.Boolean isActive Whether or not the tantrum will apply the Stained effect. Returns Type Description UnityEngine.GameObject The tantrum's UnityEngine.GameObject . Remarks If isActive is true , the tantrum is moved slightly up from its original position. Otherwise, the collision will not be detected and the slowness will not work. | Improve this Doc View Source PlayAmbientSound() Plays a random ambient sound. Declaration public static void PlayAmbientSound() | Improve this Doc View Source PlayAmbientSound(Int32) Plays an ambient sound. Declaration public static void PlayAmbientSound(int id) Parameters Type Name Description System.Int32 id The id of the sound to play. | Improve this Doc View Source ShowHint(String, Single) Shows a hint to all players . Declaration public static void ShowHint(string message, float duration = 3F) Parameters Type Name Description System.String message The message that will be broadcasted (supports Unity Rich Text formatting). System.Single duration The duration in seconds. | Improve this Doc View Source StartDecontamination() Starts the light containment zone decontamination process. Declaration public static void StartDecontamination() | Improve this Doc View Source TurnOffAllLights(Single, ZoneType) Turns off all lights in the facility. Declaration public static void TurnOffAllLights(float duration, ZoneType zoneTypes = ZoneType.Unspecified) Parameters Type Name Description System.Single duration The duration of the blackout. ZoneType zoneTypes The ZoneType s to affect. | Improve this Doc View Source TurnOffAllLights(Single, IEnumerable<ZoneType>) Turns off all lights in the facility. Declaration public static void TurnOffAllLights(float duration, IEnumerable<ZoneType> zoneTypes) Parameters Type Name Description System.Single duration The duration of the blackout. System.Collections.Generic.IEnumerable < ZoneType > zoneTypes The ZoneType s to affect."
  },
  "api/Exiled.API.Features.Paths.html": {
    "href": "api/Exiled.API.Features.Paths.html",
    "title": "Class Paths | EXILED Docs",
    "keywords": "Class Paths A set of useful paths. Inheritance System.Object Paths Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Paths Properties | Improve this Doc View Source AppData Gets AppData path. Declaration public static string AppData { get; } Property Value Type Description System.String | Improve this Doc View Source BackupConfig Gets or sets the backup configs path. Declaration public static string BackupConfig { get; set; } Property Value Type Description System.String | Improve this Doc View Source BackupTranslations Gets or sets backup translations path. Declaration public static string BackupTranslations { get; set; } Property Value Type Description System.String | Improve this Doc View Source Config Gets or sets the configuration file path. Declaration public static string Config { get; set; } Property Value Type Description System.String | Improve this Doc View Source Configs Gets or sets the configuration folder path. Declaration public static string Configs { get; set; } Property Value Type Description System.String | Improve this Doc View Source Dependencies Gets or sets Dependencies directory path. Declaration public static string Dependencies { get; set; } Property Value Type Description System.String | Improve this Doc View Source Exiled Gets or sets exiled directory path. Declaration public static string Exiled { get; set; } Property Value Type Description System.String | Improve this Doc View Source IndividualConfigs Gets or sets individual configs directory path. Declaration public static string IndividualConfigs { get; set; } Property Value Type Description System.String | Improve this Doc View Source IndividualTranslations Gets or sets individual translations directory path. Declaration public static string IndividualTranslations { get; set; } Property Value Type Description System.String | Improve this Doc View Source LoaderConfig Gets or sets the loader configuration file path. Declaration public static string LoaderConfig { get; set; } Property Value Type Description System.String | Improve this Doc View Source Log Gets or sets logs path. Declaration public static string Log { get; set; } Property Value Type Description System.String | Improve this Doc View Source ManagedAssemblies Gets managed assemblies directory path. Declaration public static string ManagedAssemblies { get; } Property Value Type Description System.String | Improve this Doc View Source Plugins Gets or sets plugins path. Declaration public static string Plugins { get; set; } Property Value Type Description System.String | Improve this Doc View Source ServerConfig Gets the server's config path. Declaration public static string ServerConfig { get; } Property Value Type Description System.String | Improve this Doc View Source Translations Gets or sets translations path. Declaration public static string Translations { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetConfigPath(String) Gets the config path of a plugin. Declaration public static string GetConfigPath(string pluginPrefix) Parameters Type Name Description System.String pluginPrefix The prefix of the plugin. Returns Type Description System.String The config path of the plugin. | Improve this Doc View Source GetTranslationPath(String) Gets the translation path of a plugin. Declaration public static string GetTranslationPath(string pluginPrefix) Parameters Type Name Description System.String pluginPrefix The prefix of the plugin. Returns Type Description System.String The translation path of the plugin. | Improve this Doc View Source Reload(String) Reloads all paths. Declaration public static void Reload(string rootDirectory = null) Parameters Type Name Description System.String rootDirectory The new root directory."
  },
  "api/Exiled.API.Features.Pickups.AmmoPickup.html": {
    "href": "api/Exiled.API.Features.Pickups.AmmoPickup.html",
    "title": "Class AmmoPickup | EXILED Docs",
    "keywords": "Class AmmoPickup A wrapper class for an Ammo pickup. Inheritance System.Object TypeCastObject < Pickup > Pickup AmmoPickup Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.Firearms.Ammo.AmmoPickup > Inherited Members Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups Assembly : Exiled.API.dll Syntax public class AmmoPickup : Pickup, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<AmmoPickup> Properties | Improve this Doc View Source Ammo Gets or Sets the number of ammo. Declaration public ushort Ammo { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source AmmoType Gets the AmmoType of the item. Declaration public AmmoType AmmoType { get; } Property Value Type Description AmmoType | Improve this Doc View Source Base Gets the InventorySystem.Items.Firearms.Ammo.AmmoPickup that this class is encapsulating. Declaration public AmmoPickup Base { get; } Property Value Type Description InventorySystem.Items.Firearms.Ammo.AmmoPickup | Improve this Doc View Source MaxDisplayedAmmo Gets the max ammo. Declaration public int MaxDisplayedAmmo { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source ToString() Returns the AmmoPickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing AmmoPickup related data. Overrides Pickup.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.BodyArmorPickup.html": {
    "href": "api/Exiled.API.Features.Pickups.BodyArmorPickup.html",
    "title": "Class BodyArmorPickup | EXILED Docs",
    "keywords": "Class BodyArmorPickup A wrapper class for a Body Armor pickup. Inheritance System.Object TypeCastObject < Pickup > Pickup BodyArmorPickup Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.Armor.BodyArmorPickup > Inherited Members Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups Assembly : Exiled.API.dll Syntax public class BodyArmorPickup : Pickup, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<BodyArmorPickup> Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Armor.BodyArmorPickup that this class is encapsulating. Declaration public BodyArmorPickup Base { get; } Property Value Type Description InventorySystem.Items.Armor.BodyArmorPickup Methods | Improve this Doc View Source ToString() Returns the BodyArmorPickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing BodyArmorPickup related data. Overrides Pickup.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.FirearmPickup.html": {
    "href": "api/Exiled.API.Features.Pickups.FirearmPickup.html",
    "title": "Class FirearmPickup | EXILED Docs",
    "keywords": "Class FirearmPickup A wrapper class for a Firearm pickup. Inheritance System.Object TypeCastObject < Pickup > Pickup FirearmPickup Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.Firearms.FirearmPickup > Inherited Members Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups Assembly : Exiled.API.dll Syntax public class FirearmPickup : Pickup, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<FirearmPickup> Properties | Improve this Doc View Source Ammo Gets or sets a value indicating how many ammo have this FirearmPickup . Declaration public byte Ammo { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Attachments Gets or sets a value indicating whether the Attachement code have this FirearmPickup . Declaration public uint Attachments { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Base Gets the InventorySystem.Items.Firearms.FirearmPickup that this class is encapsulating. Declaration public FirearmPickup Base { get; } Property Value Type Description InventorySystem.Items.Firearms.FirearmPickup | Improve this Doc View Source Flags Gets or sets the InventorySystem.Items.Firearms.FirearmStatusFlags . Declaration public FirearmStatusFlags Flags { get; set; } Property Value Type Description InventorySystem.Items.Firearms.FirearmStatusFlags | Improve this Doc View Source IsDistributed Gets or sets a value indicating whether the pickup is already distributed. Declaration public bool IsDistributed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Status Gets or sets the InventorySystem.Items.Firearms.FirearmStatus . Declaration public FirearmStatus Status { get; set; } Property Value Type Description InventorySystem.Items.Firearms.FirearmStatus Methods | Improve this Doc View Source ToString() Returns the FirearmPickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing FirearmPickup related data. Overrides Pickup.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.GrenadePickup.html": {
    "href": "api/Exiled.API.Features.Pickups.GrenadePickup.html",
    "title": "Class GrenadePickup | EXILED Docs",
    "keywords": "Class GrenadePickup A wrapper class for a grenade pickup. Inheritance System.Object TypeCastObject < Pickup > Pickup GrenadePickup Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.ThrowableProjectiles.TimedGrenadePickup > Inherited Members Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() Pickup.ToString() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups Assembly : Exiled.API.dll Syntax public class GrenadePickup : Pickup, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<TimedGrenadePickup> Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.ThrowableProjectiles.TimedGrenadePickup that this class is encapsulating. Declaration public TimedGrenadePickup Base { get; } Property Value Type Description InventorySystem.Items.ThrowableProjectiles.TimedGrenadePickup | Improve this Doc View Source ProjectileType Gets the ProjectileType of the item. Declaration public ProjectileType ProjectileType { get; } Property Value Type Description ProjectileType Methods | Improve this Doc View Source Explode() Trigger the grenade to make it Explode. Declaration public void Explode() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.html": {
    "href": "api/Exiled.API.Features.Pickups.html",
    "title": "Namespace Exiled.API.Features.Pickups | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Pickups Classes AmmoPickup A wrapper class for an Ammo pickup. BodyArmorPickup A wrapper class for a Body Armor pickup. FirearmPickup A wrapper class for a Firearm pickup. GrenadePickup A wrapper class for a grenade pickup. JailbirdPickup A wrapper class for a jailbird pickup. KeycardPickup A wrapper class for a Keycard pickup. MicroHIDPickup A wrapper class for a MicroHID pickup. Pickup A wrapper class for InventorySystem.Items.Pickups.ItemPickupBase . RadioPickup A wrapper class for a Radio pickup. Scp1576Pickup A wrapper class for dropped SCP-330 bags. Scp244Pickup A wrapper class for a SCP-244 pickup. Scp330Pickup A wrapper class for dropped SCP-330 bags."
  },
  "api/Exiled.API.Features.Pickups.JailbirdPickup.html": {
    "href": "api/Exiled.API.Features.Pickups.JailbirdPickup.html",
    "title": "Class JailbirdPickup | EXILED Docs",
    "keywords": "Class JailbirdPickup A wrapper class for a jailbird pickup. Inheritance System.Object TypeCastObject < Pickup > Pickup JailbirdPickup Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.Jailbird.JailbirdPickup > Inherited Members Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups Assembly : Exiled.API.dll Syntax public class JailbirdPickup : Pickup, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<JailbirdPickup> Fields | Improve this Doc View Source ChargesLimit Number of Charges use before the weapon will being destroy. Declaration public const int ChargesLimit = default(int) Field Value Type Description System.Int32 | Improve this Doc View Source ChargesWarning Number of Charges use before the weapon become AlmostDepleted. Declaration public const int ChargesWarning = default(int) Field Value Type Description System.Int32 | Improve this Doc View Source DamageLimit Number of Damage made before the weapon will being destroy. Declaration public const float DamageLimit = default(float) Field Value Type Description System.Single | Improve this Doc View Source DamageWarning Number of Damage made before the weapon become AlmostDepleted. Declaration public const float DamageWarning = default(float) Field Value Type Description System.Single Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Jailbird.JailbirdPickup that this class is encapsulating. Declaration public JailbirdPickup Base { get; } Property Value Type Description InventorySystem.Items.Jailbird.JailbirdPickup | Improve this Doc View Source IsAlmostDepleted Gets a value indicating whether the weapon warn the player than the Item will be broken. Declaration public bool IsAlmostDepleted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsChargesWarning Gets a value indicating whether . Declaration public bool IsChargesWarning { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsDamageWarning Gets a value indicating whether . Declaration public bool IsDamageWarning { get; } Property Value Type Description System.Boolean | Improve this Doc View Source RemainingCharges Gets or sets the amount of charges remaining before the Jailbird breaks. Declaration public int RemainingCharges { get; set; } Property Value Type Description System.Int32 Remarks Modifying this value will directly modify TotalCharges . See Also TotalCharges | Improve this Doc View Source RemainingDamage Gets or sets the amount of damage remaining before the Jailbird breaks. Declaration public float RemainingDamage { get; set; } Property Value Type Description System.Single Remarks Modifying this value will directly modify TotalDamageDealt . See Also TotalDamageDealt | Improve this Doc View Source TotalCharges Gets or sets the number of times the item has been charged and used. Declaration public int TotalCharges { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalDamageDealt Gets or sets the total amount of damage dealt with the Jailbird. Declaration public float TotalDamageDealt { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source ToString() Returns the jailbird in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing jailbird related data. Overrides Pickup.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.KeycardPickup.html": {
    "href": "api/Exiled.API.Features.Pickups.KeycardPickup.html",
    "title": "Class KeycardPickup | EXILED Docs",
    "keywords": "Class KeycardPickup A wrapper class for a Keycard pickup. Inheritance System.Object TypeCastObject < Pickup > Pickup KeycardPickup Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.Keycards.KeycardPickup > Inherited Members Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() Pickup.ToString() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups Assembly : Exiled.API.dll Syntax public class KeycardPickup : Pickup, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<KeycardPickup> Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Keycards.KeycardPickup that this class is encapsulating. Declaration public KeycardPickup Base { get; } Property Value Type Description InventorySystem.Items.Keycards.KeycardPickup Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.MicroHIDPickup.html": {
    "href": "api/Exiled.API.Features.Pickups.MicroHIDPickup.html",
    "title": "Class MicroHIDPickup | EXILED Docs",
    "keywords": "Class MicroHIDPickup A wrapper class for a MicroHID pickup. Inheritance System.Object TypeCastObject < Pickup > Pickup MicroHIDPickup Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.MicroHID.MicroHIDPickup > Inherited Members Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups Assembly : Exiled.API.dll Syntax public class MicroHIDPickup : Pickup, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<MicroHIDPickup> Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.MicroHID.MicroHIDPickup that this class is encapsulating. Declaration public MicroHIDPickup Base { get; } Property Value Type Description InventorySystem.Items.MicroHID.MicroHIDPickup | Improve this Doc View Source Energy Gets or sets the MicroHID Energy. Declaration public float Energy { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source ToString() Returns the MicroHIDPickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing MicroHIDPickup related data. Overrides Pickup.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.Pickup.html": {
    "href": "api/Exiled.API.Features.Pickups.Pickup.html",
    "title": "Class Pickup | EXILED Docs",
    "keywords": "Class Pickup A wrapper class for InventorySystem.Items.Pickups.ItemPickupBase . Inheritance System.Object TypeCastObject < Pickup > Pickup AmmoPickup BodyArmorPickup FirearmPickup GrenadePickup JailbirdPickup KeycardPickup MicroHIDPickup Projectile RadioPickup Scp1576Pickup Scp244Pickup Scp330Pickup Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation Inherited Members TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups Assembly : Exiled.API.dll Syntax public class Pickup : TypeCastObject<Pickup>, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.ItemBase of the item. Declaration public ItemPickupBase Base { get; } Property Value Type Description InventorySystem.Items.Pickups.ItemPickupBase | Improve this Doc View Source GameObject Gets the UnityEngine.GameObject of the Pickup. Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source Info Gets or sets the pickup information. Declaration public PickupSyncInfo Info { get; set; } Property Value Type Description InventorySystem.Items.Pickups.PickupSyncInfo | Improve this Doc View Source InUse Gets or sets a value indicating whether the pickup is currently in use. Declaration public bool InUse { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLocked Gets or sets a value indicating whether the pickup is locked (can't be picked up). Declaration public bool IsLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSpawned Gets a value indicating whether this pickup is spawned. Declaration public bool IsSpawned { get; } Property Value Type Description System.Boolean | Improve this Doc View Source List Gets a System.Collections.Generic.IEnumerable<T> of Pickup which contains all the Pickup instances. Declaration public static IEnumerable<Pickup> List { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Pickup > | Improve this Doc View Source PickupTime Gets or sets the amount of time it takes to pick up this item, based on Weight . Declaration public float PickupTime { get; set; } Property Value Type Description System.Single Remarks Notes: Changing this value will change the item's Weight . This does not account for status effects such as Hypothermia ; see PickupTimeForPlayer(Player) to account for status effects. See Also Weight PickupTimeForPlayer(Player) | Improve this Doc View Source Position Gets or sets the pickup position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 See Also CreateAndSpawn(ItemType, Vector3, Quaternion, Player) | Improve this Doc View Source PreviousOwner Gets or sets the previous owner of this item. Declaration public Player PreviousOwner { get; set; } Property Value Type Description Player See Also CreateAndSpawn(ItemType, Vector3, Quaternion, Player) | Improve this Doc View Source RelativePosition Gets or sets the relative position of the pickup. Declaration public RelativePosition RelativePosition { get; set; } Property Value Type Description RelativePositioning.RelativePosition | Improve this Doc View Source Room Gets the current Room the Pickup is in. Declaration public Room Room { get; } Property Value Type Description Room | Improve this Doc View Source Rotation Gets or sets the pickup rotation. Declaration public Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion See Also CreateAndSpawn(ItemType, Vector3, Quaternion, Player) | Improve this Doc View Source Scale Gets or sets the pickup's scale value. Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Serial Gets or sets the unique serial number for the item. Declaration public ushort Serial { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source Transform Gets the UnityEngine.Transform of the Pickup. Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source Type Gets the ItemType of the item. Declaration public ItemType Type { get; } Property Value Type Description ItemType | Improve this Doc View Source Weight Gets or sets the weight of the item. Declaration public float Weight { get; set; } Property Value Type Description System.Single See Also PickupTime Methods | Improve this Doc View Source Clone() Clones current Pickup object. Declaration public Pickup Clone() Returns Type Description Pickup New Pickup object. | Improve this Doc View Source Create(ItemType) Creates and returns a new Pickup with the proper inherited subclass. Based on the type , the returned Pickup can be casted into a subclass to gain more control over the object. - All valid ammo should be casted to the AmmoPickup class. - All valid firearms (not including the Micro HID) should be casted to the FirearmPickup class. - All valid keycards should be casted to the KeycardPickup class. - All valid armor should be casted to the BodyArmorPickup class. - All grenades and throwables (SCP-018 and SCP-2176) should be casted to the GrenadePickup class. The following have their own respective classes: - Radios can be casted to RadioPickup . - The Micro HID can be casted to MicroHIDPickup . - SCP-244 A and B variants can be casted to Scp244Pickup . - SCP-330 can be casted to Scp330Pickup . Items that are not listed above do not have a subclass, and can only use the base Pickup class. Declaration public static Pickup Create(ItemType type) Parameters Type Name Description ItemType type The ItemType of the pickup. Returns Type Description Pickup The created Pickup . See Also Create ( ProjectileType ) | Improve this Doc View Source CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Creates and spawns a Pickup . Declaration public static Pickup CreateAndSpawn(ItemType type, Vector3 position, Quaternion rotation, Player previousOwner = null) Parameters Type Name Description ItemType type The ItemType of the pickup. UnityEngine.Vector3 position The position to spawn the Pickup at. UnityEngine.Quaternion rotation The rotation to spawn the Pickup . Player previousOwner An optional previous owner of the item. Returns Type Description Pickup The Pickup . See documentation of Create(ItemType) for more information on casting. See Also CreateAndSpawn ( ProjectileType , UnityEngine.Vector3 , UnityEngine.Quaternion , System.Boolean , Player ) | Improve this Doc View Source Destroy() Destroys the already spawned pickup. Declaration public void Destroy() See Also UnSpawn() | Improve this Doc View Source Get(ItemPickupBase) Gets an existing Pickup or creates a new instance of one. Declaration public static Pickup Get(ItemPickupBase pickupBase) Parameters Type Name Description InventorySystem.Items.Pickups.ItemPickupBase pickupBase The InventorySystem.Items.Pickups.ItemPickupBase to convert into a Pickup . Returns Type Description Pickup The Pickup wrapper for the given InventorySystem.Items.Pickups.ItemPickupBase . | Improve this Doc View Source Get(ItemType) Gets all Pickup with the given ItemType . Declaration public static IEnumerable<Pickup> Get(ItemType type) Parameters Type Name Description ItemType type The ItemType to look for. Returns Type Description System.Collections.Generic.IEnumerable < Pickup > A System.Collections.Generic.IEnumerable<T> of Pickup . See Also GetRandomPickup(ItemType) | Improve this Doc View Source Get(UInt16) Gets the Pickup with the given Serial . Declaration public static Pickup Get(ushort serial) Parameters Type Name Description System.UInt16 serial The serial of the Pickup you search. Returns Type Description Pickup return the Pickup with Serial choose. | Improve this Doc View Source Get(GameObject) Gets the Pickup with the given UnityEngine.GameObject . Declaration public static Pickup Get(GameObject gameObject) Parameters Type Name Description UnityEngine.GameObject gameObject The gameobject of the Pickup you search. Returns Type Description Pickup return the Pickup with gameObject choose. | Improve this Doc View Source PickupTimeForPlayer(Player) Returns the amount of time it will take for the provided player to pick up this item, based on Weight and active status effects. Declaration public float PickupTimeForPlayer(Player player) Parameters Type Name Description Player player The player to check search time. Returns Type Description System.Single The amount of time it will take for the provided player to pick up this item. Exceptions Type Condition System.ArgumentNullException player cannot be null. See Also PickupTime | Improve this Doc View Source Spawn() Spawns pickup on server. Declaration public void Spawn() See Also UnSpawn() | Improve this Doc View Source Spawn(Pickup, Vector3, Quaternion, Player) Spawns a Pickup . Declaration public static Pickup Spawn(Pickup pickup, Vector3 position, Quaternion rotation, Player previousOwner = null) Parameters Type Name Description Pickup pickup The Pickup too spawn. UnityEngine.Vector3 position The position to spawn the Pickup at. UnityEngine.Quaternion rotation The rotation to spawn the Pickup . Player previousOwner An optional previous owner of the item. Returns Type Description Pickup The Pickup Spawn. See Also Spawn ( Projectile , UnityEngine.Vector3 , UnityEngine.Quaternion , System.Boolean , Player ) | Improve this Doc View Source ToString() Returns the Pickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Pickup-related data. Overrides System.Object.ToString() | Improve this Doc View Source UnSpawn() Unspawns pickup on server. Declaration public void UnSpawn() See Also Spawn() Destroy() Implements IWrapper<T> IWorldSpace IPosition IRotation Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.Projectiles.EffectGrenadeProjectile.html": {
    "href": "api/Exiled.API.Features.Pickups.Projectiles.EffectGrenadeProjectile.html",
    "title": "Class EffectGrenadeProjectile | EXILED Docs",
    "keywords": "Class EffectGrenadeProjectile A wrapper class for EffectGrenade. Inheritance System.Object TypeCastObject < Pickup > Pickup Projectile TimeGrenadeProjectile EffectGrenadeProjectile ExplosionGrenadeProjectile FlashbangProjectile Scp2176Projectile Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.ThrowableProjectiles.ThrownProjectile > IWrapper < InventorySystem.Items.ThrowableProjectiles.TimeGrenade > IWrapper < InventorySystem.Items.ThrowableProjectiles.EffectGrenade > Inherited Members TimeGrenadeProjectile.IsAlreadyDetonated TimeGrenadeProjectile.FuseTime TimeGrenadeProjectile.IsActive TimeGrenadeProjectile.Explode() Projectile.ProjectileType Projectile.Create(ProjectileType) Projectile.CreateAndSpawn(ProjectileType, Vector3, Quaternion, Boolean, Player) Projectile.Spawn(Projectile, Vector3, Quaternion, Boolean, Player) Projectile.Active() Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups.Projectiles Assembly : Exiled.API.dll Syntax public class EffectGrenadeProjectile : TimeGrenadeProjectile, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<ThrownProjectile>, IWrapper<TimeGrenade>, IWrapper<EffectGrenade> Constructors | Improve this Doc View Source EffectGrenadeProjectile(EffectGrenade) Initializes a new instance of the EffectGrenadeProjectile class. Declaration public EffectGrenadeProjectile(EffectGrenade pickupBase) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.EffectGrenade pickupBase The base InventorySystem.Items.ThrowableProjectiles.EffectGrenade class. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.ThrowableProjectiles.EffectGrenade that this class is encapsulating. Declaration public EffectGrenade Base { get; } Property Value Type Description InventorySystem.Items.ThrowableProjectiles.EffectGrenade Methods | Improve this Doc View Source ToString() Returns the EffectGrenadePickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing EffectGrenadePickup-related data. Overrides TimeGrenadeProjectile.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.Projectiles.ExplosionGrenadeProjectile.html": {
    "href": "api/Exiled.API.Features.Pickups.Projectiles.ExplosionGrenadeProjectile.html",
    "title": "Class ExplosionGrenadeProjectile | EXILED Docs",
    "keywords": "Class ExplosionGrenadeProjectile A wrapper class for ExplosionGrenade. Inheritance System.Object TypeCastObject < Pickup > Pickup Projectile TimeGrenadeProjectile EffectGrenadeProjectile ExplosionGrenadeProjectile Scp018Projectile Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.ThrowableProjectiles.ThrownProjectile > IWrapper < InventorySystem.Items.ThrowableProjectiles.TimeGrenade > IWrapper < InventorySystem.Items.ThrowableProjectiles.EffectGrenade > IWrapper < InventorySystem.Items.ThrowableProjectiles.ExplosionGrenade > Inherited Members TimeGrenadeProjectile.IsAlreadyDetonated TimeGrenadeProjectile.FuseTime TimeGrenadeProjectile.IsActive TimeGrenadeProjectile.Explode() Projectile.ProjectileType Projectile.Create(ProjectileType) Projectile.CreateAndSpawn(ProjectileType, Vector3, Quaternion, Boolean, Player) Projectile.Spawn(Projectile, Vector3, Quaternion, Boolean, Player) Projectile.Active() Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups.Projectiles Assembly : Exiled.API.dll Syntax public class ExplosionGrenadeProjectile : EffectGrenadeProjectile, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<ThrownProjectile>, IWrapper<TimeGrenade>, IWrapper<EffectGrenade>, IWrapper<ExplosionGrenade> Constructors | Improve this Doc View Source ExplosionGrenadeProjectile(ExplosionGrenade) Initializes a new instance of the ExplosionGrenadeProjectile class. Declaration public ExplosionGrenadeProjectile(ExplosionGrenade pickupBase) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.ExplosionGrenade pickupBase The base InventorySystem.Items.ThrowableProjectiles.ExplosionGrenade class. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.ThrowableProjectiles.ExplosionGrenade that this class is encapsulating. Declaration public ExplosionGrenade Base { get; } Property Value Type Description InventorySystem.Items.ThrowableProjectiles.ExplosionGrenade | Improve this Doc View Source BurnDuration Gets or sets the maximum duration of the Burned effect. Declaration public float BurnDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ConcussDuration Gets or sets the maximum duration of the Concussed effect. Declaration public float ConcussDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source DeafenDuration Gets or sets the maximum duration of the Deafened effect. Declaration public float DeafenDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxRadius Gets or sets the maximum radius of the ExplosionGrenade. Declaration public float MaxRadius { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MinimalDurationEffect Gets or sets the minimum duration of player can take the effect. Declaration public float MinimalDurationEffect { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ScpDamageMultiplier Gets or sets the damage of the PlayerRoles.Team.SCPs going to get. Declaration public float ScpDamageMultiplier { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source ToString() Returns the ExplosionGrenadePickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing ExplosionGrenadePickup-related data. Overrides EffectGrenadeProjectile.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> IWrapper<T> IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.Projectiles.FlashbangProjectile.html": {
    "href": "api/Exiled.API.Features.Pickups.Projectiles.FlashbangProjectile.html",
    "title": "Class FlashbangProjectile | EXILED Docs",
    "keywords": "Class FlashbangProjectile A wrapper class for FlashbangGrenade. Inheritance System.Object TypeCastObject < Pickup > Pickup Projectile TimeGrenadeProjectile EffectGrenadeProjectile FlashbangProjectile Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.ThrowableProjectiles.ThrownProjectile > IWrapper < InventorySystem.Items.ThrowableProjectiles.TimeGrenade > IWrapper < InventorySystem.Items.ThrowableProjectiles.EffectGrenade > IWrapper < InventorySystem.Items.ThrowableProjectiles.FlashbangGrenade > Inherited Members TimeGrenadeProjectile.IsAlreadyDetonated TimeGrenadeProjectile.FuseTime TimeGrenadeProjectile.IsActive TimeGrenadeProjectile.Explode() Projectile.ProjectileType Projectile.Create(ProjectileType) Projectile.CreateAndSpawn(ProjectileType, Vector3, Quaternion, Boolean, Player) Projectile.Spawn(Projectile, Vector3, Quaternion, Boolean, Player) Projectile.Active() Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups.Projectiles Assembly : Exiled.API.dll Syntax public class FlashbangProjectile : EffectGrenadeProjectile, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<ThrownProjectile>, IWrapper<TimeGrenade>, IWrapper<EffectGrenade>, IWrapper<FlashbangGrenade> Constructors | Improve this Doc View Source FlashbangProjectile(FlashbangGrenade) Initializes a new instance of the FlashbangProjectile class. Declaration public FlashbangProjectile(FlashbangGrenade pickupBase) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.FlashbangGrenade pickupBase The base InventorySystem.Items.ThrowableProjectiles.FlashbangGrenade class. Properties | Improve this Doc View Source AdditionalBlindedEffect Gets or sets the additional duration of the Blinded effect. Declaration public float AdditionalBlindedEffect { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Base Gets the InventorySystem.Items.ThrowableProjectiles.FlashbangGrenade that this class is encapsulating. Declaration public FlashbangGrenade Base { get; } Property Value Type Description InventorySystem.Items.ThrowableProjectiles.FlashbangGrenade | Improve this Doc View Source MinimalDurationEffect Gets or sets the minimum duration of player can take the effect. Declaration public float MinimalDurationEffect { get; set; } Property Value Type Description System.Single | Improve this Doc View Source SurfaceDistanceIntensifier Gets or sets the how mush the FlashBang going to be intensified when explode at Surface . Declaration public float SurfaceDistanceIntensifier { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source ToString() Returns the FlashbangPickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing FlashbangPickup-related data. Overrides EffectGrenadeProjectile.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> IWrapper<T> IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.Projectiles.html": {
    "href": "api/Exiled.API.Features.Pickups.Projectiles.html",
    "title": "Namespace Exiled.API.Features.Pickups.Projectiles | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Pickups.Projectiles Classes EffectGrenadeProjectile A wrapper class for EffectGrenade. ExplosionGrenadeProjectile A wrapper class for ExplosionGrenade. FlashbangProjectile A wrapper class for FlashbangGrenade. Projectile A wrapper class for Projectile. Scp018Projectile A wrapper class for Scp018Projectile. Scp2176Projectile A wrapper class for an SCP-2176 Projectile. TimeGrenadeProjectile A wrapper class for TimeGrenade."
  },
  "api/Exiled.API.Features.Pickups.Projectiles.Projectile.html": {
    "href": "api/Exiled.API.Features.Pickups.Projectiles.Projectile.html",
    "title": "Class Projectile | EXILED Docs",
    "keywords": "Class Projectile A wrapper class for Projectile. Inheritance System.Object TypeCastObject < Pickup > Pickup Projectile TimeGrenadeProjectile Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.ThrowableProjectiles.ThrownProjectile > Inherited Members Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups.Projectiles Assembly : Exiled.API.dll Syntax public class Projectile : Pickup, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<ThrownProjectile> Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.ThrowableProjectiles.ThrownProjectile that this class is encapsulating. Declaration public ThrownProjectile Base { get; } Property Value Type Description InventorySystem.Items.ThrowableProjectiles.ThrownProjectile | Improve this Doc View Source ProjectileType Gets the ProjectileType of the item. Declaration public ProjectileType ProjectileType { get; } Property Value Type Description ProjectileType Methods | Improve this Doc View Source Active() Activates the current Projectile . Declaration public void Active() | Improve this Doc View Source Create(ProjectileType) Creates and returns a new Projectile with the proper inherited subclass. Based on the projectiletype , the returned Projectile can be casted into a subclass to gain more control over the object. The following have their own respective classes: - FragGrenade can be casted to ExplosionGrenadeProjectile . - Flashbang can be casted to FlashbangProjectile . - Scp018 A and B variants can be casted to Scp018Projectile . - Scp2176 can be casted to Scp2176Projectile . Projectile that are not listed will cause an Exception. Declaration public static Projectile Create(ProjectileType projectiletype) Parameters Type Name Description ProjectileType projectiletype The ProjectileType of the pickup. Returns Type Description Projectile The created Pickup . | Improve this Doc View Source CreateAndSpawn(ProjectileType, Vector3, Quaternion, Boolean, Player) Creates and spawns a Projectile . Declaration public static Projectile CreateAndSpawn(ProjectileType type, Vector3 position, Quaternion rotation, bool shouldBeActive = true, Player previousOwner = null) Parameters Type Name Description ProjectileType type The ItemType of the pickup. UnityEngine.Vector3 position The position to spawn the Projectile at. UnityEngine.Quaternion rotation The rotation to spawn the Projectile . System.Boolean shouldBeActive Whether the Projectile should be in active state after spawn. Player previousOwner An optional previous owner of the item. Returns Type Description Projectile The Projectile . See documentation of Create(ItemType) for more information on casting. | Improve this Doc View Source Spawn(Projectile, Vector3, Quaternion, Boolean, Player) Spawns a Projectile . Declaration public static Projectile Spawn(Projectile pickup, Vector3 position, Quaternion rotation, bool shouldBeActive = true, Player previousOwner = null) Parameters Type Name Description Projectile pickup The Projectile too spawn. UnityEngine.Vector3 position The position to spawn the Projectile at. UnityEngine.Quaternion rotation The rotation to spawn the Projectile . System.Boolean shouldBeActive Whether the Projectile should be in active state after spawn. Player previousOwner An optional previous owner of the item. Returns Type Description Projectile The Projectile Spawn. | Improve this Doc View Source ToString() Returns the ProjectilePickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing ProjectilePickup-related data. Overrides Pickup.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.Projectiles.Scp018Projectile.html": {
    "href": "api/Exiled.API.Features.Pickups.Projectiles.Scp018Projectile.html",
    "title": "Class Scp018Projectile | EXILED Docs",
    "keywords": "Class Scp018Projectile A wrapper class for Scp018Projectile. Inheritance System.Object TypeCastObject < Pickup > Pickup Projectile TimeGrenadeProjectile EffectGrenadeProjectile ExplosionGrenadeProjectile Scp018Projectile Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.ThrowableProjectiles.ThrownProjectile > IWrapper < InventorySystem.Items.ThrowableProjectiles.TimeGrenade > IWrapper < InventorySystem.Items.ThrowableProjectiles.EffectGrenade > IWrapper < InventorySystem.Items.ThrowableProjectiles.ExplosionGrenade > IWrapper < InventorySystem.Items.ThrowableProjectiles.Scp018Projectile > Inherited Members ExplosionGrenadeProjectile.MaxRadius ExplosionGrenadeProjectile.MinimalDurationEffect ExplosionGrenadeProjectile.BurnDuration ExplosionGrenadeProjectile.DeafenDuration ExplosionGrenadeProjectile.ConcussDuration ExplosionGrenadeProjectile.ScpDamageMultiplier TimeGrenadeProjectile.IsAlreadyDetonated TimeGrenadeProjectile.FuseTime TimeGrenadeProjectile.IsActive TimeGrenadeProjectile.Explode() Projectile.ProjectileType Projectile.Create(ProjectileType) Projectile.CreateAndSpawn(ProjectileType, Vector3, Quaternion, Boolean, Player) Projectile.Spawn(Projectile, Vector3, Quaternion, Boolean, Player) Projectile.Active() Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups.Projectiles Assembly : Exiled.API.dll Syntax public class Scp018Projectile : ExplosionGrenadeProjectile, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<ThrownProjectile>, IWrapper<TimeGrenade>, IWrapper<EffectGrenade>, IWrapper<ExplosionGrenade>, IWrapper<Scp018Projectile> Constructors | Improve this Doc View Source Scp018Projectile(Scp018Projectile) Initializes a new instance of the Scp018Projectile class. Declaration public Scp018Projectile(Scp018Projectile pickupBase) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.Scp018Projectile pickupBase The base InventorySystem.Items.ThrowableProjectiles.Scp018Projectile class. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.ThrowableProjectiles.ExplosionGrenade that this class is encapsulating. Declaration public Scp018Projectile Base { get; } Property Value Type Description InventorySystem.Items.ThrowableProjectiles.Scp018Projectile | Improve this Doc View Source Damage Gets the current damage of SCP-018. Declaration public float Damage { get; } Property Value Type Description System.Single | Improve this Doc View Source FriendlyFireTime Gets or sets the time for SCP-018 not to ignore the friendly fire. Declaration public float FriendlyFireTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IgnoreFriendlyFire Gets a value indicating whether or not SCP-018 can injure teammates. Declaration public bool IgnoreFriendlyFire { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source ToString() Returns the Scp018Pickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Scp018Pickup-related data. Overrides ExplosionGrenadeProjectile.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> IWrapper<T> IWrapper<T> IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.Projectiles.Scp2176Projectile.html": {
    "href": "api/Exiled.API.Features.Pickups.Projectiles.Scp2176Projectile.html",
    "title": "Class Scp2176Projectile | EXILED Docs",
    "keywords": "Class Scp2176Projectile A wrapper class for an SCP-2176 Projectile. Inheritance System.Object TypeCastObject < Pickup > Pickup Projectile TimeGrenadeProjectile EffectGrenadeProjectile Scp2176Projectile Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.ThrowableProjectiles.ThrownProjectile > IWrapper < InventorySystem.Items.ThrowableProjectiles.TimeGrenade > IWrapper < InventorySystem.Items.ThrowableProjectiles.EffectGrenade > IWrapper < InventorySystem.Items.ThrowableProjectiles.Scp2176Projectile > Inherited Members TimeGrenadeProjectile.IsAlreadyDetonated TimeGrenadeProjectile.FuseTime TimeGrenadeProjectile.IsActive TimeGrenadeProjectile.Explode() Projectile.ProjectileType Projectile.Create(ProjectileType) Projectile.CreateAndSpawn(ProjectileType, Vector3, Quaternion, Boolean, Player) Projectile.Spawn(Projectile, Vector3, Quaternion, Boolean, Player) Projectile.Active() Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups.Projectiles Assembly : Exiled.API.dll Syntax public class Scp2176Projectile : EffectGrenadeProjectile, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<ThrownProjectile>, IWrapper<TimeGrenade>, IWrapper<EffectGrenade>, IWrapper<Scp2176Projectile> Constructors | Improve this Doc View Source Scp2176Projectile(Scp2176Projectile) Initializes a new instance of the Scp2176Projectile class. Declaration public Scp2176Projectile(Scp2176Projectile pickupBase) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.Scp2176Projectile pickupBase The base InventorySystem.Items.ThrowableProjectiles.Scp2176Projectile class. Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.ThrowableProjectiles.ExplosionGrenade that this class is encapsulating. Declaration public Scp2176Projectile Base { get; } Property Value Type Description InventorySystem.Items.ThrowableProjectiles.Scp2176Projectile | Improve this Doc View Source DropSound Gets or sets a value indicating whether SCP-2176's next collision will make the dropped sound effect. Declaration public bool DropSound { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsAlreadyTriggered Gets a value indicating whether or not SCP-2176 has shattered. Declaration public bool IsAlreadyTriggered { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source ToString() Returns the Scp2176Pickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Scp2176Pickup related data. Overrides EffectGrenadeProjectile.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> IWrapper<T> IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.Projectiles.TimeGrenadeProjectile.html": {
    "href": "api/Exiled.API.Features.Pickups.Projectiles.TimeGrenadeProjectile.html",
    "title": "Class TimeGrenadeProjectile | EXILED Docs",
    "keywords": "Class TimeGrenadeProjectile A wrapper class for TimeGrenade. Inheritance System.Object TypeCastObject < Pickup > Pickup Projectile TimeGrenadeProjectile EffectGrenadeProjectile Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.ThrowableProjectiles.ThrownProjectile > IWrapper < InventorySystem.Items.ThrowableProjectiles.TimeGrenade > Inherited Members Projectile.ProjectileType Projectile.Create(ProjectileType) Projectile.CreateAndSpawn(ProjectileType, Vector3, Quaternion, Boolean, Player) Projectile.Spawn(Projectile, Vector3, Quaternion, Boolean, Player) Projectile.Active() Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups.Projectiles Assembly : Exiled.API.dll Syntax public class TimeGrenadeProjectile : Projectile, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<ThrownProjectile>, IWrapper<TimeGrenade> Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.ThrowableProjectiles.TimeGrenade that this class is encapsulating. Declaration public TimeGrenade Base { get; } Property Value Type Description InventorySystem.Items.ThrowableProjectiles.TimeGrenade | Improve this Doc View Source FuseTime Gets or sets FuseTime. Declaration public float FuseTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsActive Gets or sets a value indicating whether the greande is active. Declaration public bool IsActive { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsAlreadyDetonated Gets a value indicating whether the grenade has already exploded. Declaration public bool IsAlreadyDetonated { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Explode() Immediately exploding the TimeGrenadeProjectile . Declaration public void Explode() | Improve this Doc View Source ToString() Returns the TimeGrenadePickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing TimeGrenadePickup related data. Overrides Projectile.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.RadioPickup.html": {
    "href": "api/Exiled.API.Features.Pickups.RadioPickup.html",
    "title": "Class RadioPickup | EXILED Docs",
    "keywords": "Class RadioPickup A wrapper class for a Radio pickup. Inheritance System.Object TypeCastObject < Pickup > Pickup RadioPickup Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.Radio.RadioPickup > Inherited Members Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups Assembly : Exiled.API.dll Syntax public class RadioPickup : Pickup, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<RadioPickup> Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Radio.RadioPickup that this class is encapsulating. Declaration public RadioPickup Base { get; } Property Value Type Description InventorySystem.Items.Radio.RadioPickup | Improve this Doc View Source BatteryLevel Gets or sets the Radio Energy. Declaration public float BatteryLevel { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsEnabled Gets or sets a value indicating whether the radio is active. Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Range Gets or sets the RadioRange . Declaration public RadioRange Range { get; set; } Property Value Type Description RadioRange Methods | Improve this Doc View Source ToString() Returns the RadioPickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing RadioPickup related data. Overrides Pickup.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.Scp1576Pickup.html": {
    "href": "api/Exiled.API.Features.Pickups.Scp1576Pickup.html",
    "title": "Class Scp1576Pickup | EXILED Docs",
    "keywords": "Class Scp1576Pickup A wrapper class for dropped SCP-330 bags. Inheritance System.Object TypeCastObject < Pickup > Pickup Scp1576Pickup Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.Usables.Scp1576.Scp1576Pickup > Inherited Members Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups Assembly : Exiled.API.dll Syntax public class Scp1576Pickup : Pickup, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<Scp1576Pickup> Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Usables.Scp1576.Scp1576Pickup that this class is encapsulating. Declaration public Scp1576Pickup Base { get; } Property Value Type Description InventorySystem.Items.Usables.Scp1576.Scp1576Pickup Methods | Improve this Doc View Source ToString() Returns the Scp1576Pickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Scp1576Pickup related data. Overrides Pickup.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.Scp244Pickup.html": {
    "href": "api/Exiled.API.Features.Pickups.Scp244Pickup.html",
    "title": "Class Scp244Pickup | EXILED Docs",
    "keywords": "Class Scp244Pickup A wrapper class for a SCP-244 pickup. Inheritance System.Object TypeCastObject < Pickup > Pickup Scp244Pickup Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.Usables.Scp244.Scp244DeployablePickup > Inherited Members Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups Assembly : Exiled.API.dll Syntax public class Scp244Pickup : Pickup, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<Scp244DeployablePickup> Properties | Improve this Doc View Source ActivationDot Gets or sets the activation angle, where 1 is a minimum, and -1 it's a maximum activation angle. Declaration public float ActivationDot { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Base Gets the InventorySystem.Items.Usables.Scp244.Scp244DeployablePickup that this class is encapsulating. Declaration public Scp244DeployablePickup Base { get; } Property Value Type Description InventorySystem.Items.Usables.Scp244.Scp244DeployablePickup | Improve this Doc View Source CurrentDiameter Gets the current size effect of the Scp244's Hypothermia. Declaration public float CurrentDiameter { get; } Property Value Type Description System.Single | Improve this Doc View Source CurrentSizePercent Gets or sets the current size percent of the Scp244's Hypothermia. Declaration public float CurrentSizePercent { get; set; } Property Value Type Description System.Single | Improve this Doc View Source GrowSpeed Gets the speed of Scp244Pickup 's too grow. Declaration public float GrowSpeed { get; } Property Value Type Description System.Single | Improve this Doc View Source Health Gets or sets the Scp244's remaining health. Declaration public float Health { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsBreakable Gets a value indicating whether or not this Scp244 is breakable. Declaration public bool IsBreakable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsBroken Gets a value indicating whether or not this Scp244 is broken. Declaration public bool IsBroken { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Lifetime Gets the amount of time this Scp244 has been on the ground. Declaration public TimeSpan Lifetime { get; } Property Value Type Description System.TimeSpan | Improve this Doc View Source State Gets or sets the InventorySystem.Items.Usables.Scp244.Scp244State . Declaration public Scp244State State { get; set; } Property Value Type Description InventorySystem.Items.Usables.Scp244.Scp244State | Improve this Doc View Source TimeToGrow Gets the time for the sphere to finish their expansion. Declaration public float TimeToGrow { get; } Property Value Type Description System.Single Methods | Improve this Doc View Source Damage(DamageHandler) Damages the Scp244Pickup. Declaration public bool Damage(DamageHandler handler) Parameters Type Name Description DamageHandler handler The DamageHandler used to deal damage. Returns Type Description System.Boolean true if the the damage has been deal; otherwise, false . | Improve this Doc View Source ToString() Returns the Scp244Pickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Scp244Pickup related data. Overrides Pickup.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pickups.Scp330Pickup.html": {
    "href": "api/Exiled.API.Features.Pickups.Scp330Pickup.html",
    "title": "Class Scp330Pickup | EXILED Docs",
    "keywords": "Class Scp330Pickup A wrapper class for dropped SCP-330 bags. Inheritance System.Object TypeCastObject < Pickup > Pickup Scp330Pickup Implements IWrapper < InventorySystem.Items.Pickups.ItemPickupBase > IWorldSpace IPosition IRotation IWrapper < InventorySystem.Items.Usables.Scp330.Scp330Pickup > Inherited Members Pickup.List Pickup.GameObject Pickup.Transform Pickup.Room Pickup.Serial Pickup.Scale Pickup.Weight Pickup.PickupTime Pickup.Type Pickup.IsLocked Pickup.Info Pickup.PreviousOwner Pickup.InUse Pickup.Position Pickup.RelativePosition Pickup.Rotation Pickup.IsSpawned Pickup.Get(ItemPickupBase) Pickup.Get(ItemType) Pickup.Get(UInt16) Pickup.Get(GameObject) Pickup.Create(ItemType) Pickup.CreateAndSpawn(ItemType, Vector3, Quaternion, Player) Pickup.Spawn(Pickup, Vector3, Quaternion, Player) Pickup.Clone() Pickup.PickupTimeForPlayer(Player) Pickup.Spawn() Pickup.UnSpawn() Pickup.Destroy() TypeCastObject<Pickup>.Cast<TObject>() TypeCastObject<Pickup>.Cast<TObject>(TObject) TypeCastObject<Pickup>.As<TObject>() TypeCastObject<Pickup>.Is<TObject>(TObject) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pickups Assembly : Exiled.API.dll Syntax public class Scp330Pickup : Pickup, IWrapper<ItemPickupBase>, IWorldSpace, IPosition, IRotation, IWrapper<Scp330Pickup> Properties | Improve this Doc View Source Base Gets the InventorySystem.Items.Usables.Scp330.Scp330Pickup that this class is encapsulating. Declaration public Scp330Pickup Base { get; } Property Value Type Description InventorySystem.Items.Usables.Scp330.Scp330Pickup | Improve this Doc View Source Candies Gets or sets the InventorySystem.Items.Usables.Scp330.CandyKindID s held in this bag. Declaration public List<CandyKindID> Candies { get; set; } Property Value Type Description System.Collections.Generic.List < InventorySystem.Items.Usables.Scp330.CandyKindID > | Improve this Doc View Source ExposedCandy Gets or sets the exposed InventorySystem.Items.Usables.Scp330.CandyKindID . Declaration public CandyKindID ExposedCandy { get; set; } Property Value Type Description InventorySystem.Items.Usables.Scp330.CandyKindID Methods | Improve this Doc View Source ToString() Returns the Scp330Pickup in a human readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Scp330Pickup related data. Overrides Pickup.ToString() Implements IWrapper<T> IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Player.html": {
    "href": "api/Exiled.API.Features.Player.html",
    "title": "Class Player | EXILED Docs",
    "keywords": "Class Player Represents the in-game player, by encapsulating a ReferenceHub . Inheritance System.Object Player Implements IEntity IPosition Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Player : IEntity, IPosition Constructors | Improve this Doc View Source Player(ReferenceHub) Initializes a new instance of the Player class. Declaration public Player(ReferenceHub referenceHub) Parameters Type Name Description ReferenceHub referenceHub The ReferenceHub of the player to be encapsulated. | Improve this Doc View Source Player(GameObject) Initializes a new instance of the Player class. Declaration public Player(GameObject gameObject) Parameters Type Name Description UnityEngine.GameObject gameObject The UnityEngine.GameObject of the player. Properties | Improve this Doc View Source ActiveArtificialHealthProcesses Gets a System.Collections.Generic.IEnumerable<T> of all active Artificial Health processes on the player. Declaration public IEnumerable<AhpStat.AhpProcess> ActiveArtificialHealthProcesses { get; } Property Value Type Description System.Collections.Generic.IEnumerable < PlayerStatsSystem.AhpStat.AhpProcess > | Improve this Doc View Source ActiveEffects Gets all currently active CustomPlayerEffects.StatusEffectBase . Declaration public IEnumerable<StatusEffectBase> ActiveEffects { get; } Property Value Type Description System.Collections.Generic.IEnumerable < CustomPlayerEffects.StatusEffectBase > See Also EnableEffect(EffectType, Single, Boolean) EnableEffect(StatusEffectBase, Single, Boolean) EnableEffect(String, Single, Boolean) EnableEffect<T>(Single, Boolean) EnableEffects(IEnumerable<EffectType>, Single, Boolean) | Improve this Doc View Source AgreedToRecording Gets a value indicating whether or not the player has agreed to microphone recording. Declaration public bool AgreedToRecording { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Ammo Gets the player's ammo. Declaration public Dictionary<ItemType, ushort> Ammo { get; } Property Value Type Description System.Collections.Generic.Dictionary < ItemType , System.UInt16 > | Improve this Doc View Source ArtificialHealth Gets or sets the player's artificial health. If the health is greater than the MaxArtificialHealth , it will also be changed to match the artificial health. Declaration public float ArtificialHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source AuthenticationToken Gets the player's authentication token. Declaration public string AuthenticationToken { get; } Property Value Type Description System.String | Improve this Doc View Source AuthenticationType Gets the player's authentication type. Declaration public AuthenticationType AuthenticationType { get; } Property Value Type Description AuthenticationType | Improve this Doc View Source BadgeHidden Gets or sets a value indicating whether or not the player's badge is hidden. Declaration public bool BadgeHidden { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CameraTransform Gets the encapsulated ReferenceHub 's PlayerCameraReference . Declaration public Transform CameraTransform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source ComponentsInChildren Declaration public IReadOnlyCollection<EActor> ComponentsInChildren { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < EActor > | Improve this Doc View Source Connection Gets player's Mirror.NetworkConnection . Declaration public NetworkConnection Connection { get; } Property Value Type Description Mirror.NetworkConnection | Improve this Doc View Source Cuffer Gets or sets a value indicating the Player that currently has the player cuffed. This value will be null if the player is not cuffed. Setting this value to null will uncuff the player if they are cuffed. Declaration public Player Cuffer { get; set; } Property Value Type Description Player | Improve this Doc View Source CurrentArmor Gets the armor that the player is currently wearing. Value will be null if the player is not wearing any armor. Declaration public Armor CurrentArmor { get; } Property Value Type Description Armor | Improve this Doc View Source CurrentHint Gets the hint currently watched by the player. Declaration public Hint CurrentHint { get; } Property Value Type Description Hint | Improve this Doc View Source CurrentItem Gets or sets the item in the player's hand. Value will be null if the player is not holding anything. Declaration public Item CurrentItem { get; set; } Property Value Type Description Item See Also DropHeldItem() | Improve this Doc View Source CurrentRoom Gets the current Room the player is in. Declaration public Room CurrentRoom { get; } Property Value Type Description Room | Improve this Doc View Source CurrentSpectatingPlayers Gets a Player System.Collections.Generic.IEnumerable<T> of spectators that are currently spectating this Player . Declaration public IEnumerable<Player> CurrentSpectatingPlayers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Player > | Improve this Doc View Source CustomInfo Gets or sets the player's custom player info string. This string is displayed along with the player's InfoArea . Declaration public string CustomInfo { get; set; } Property Value Type Description System.String | Improve this Doc View Source CustomName Gets or sets the player's nickname, if null it sets the original nickname. Declaration public string CustomName { get; set; } Property Value Type Description System.String | Improve this Doc View Source CustomRoleFriendlyFireMultiplier Gets or sets a System.Collections.Generic.Dictionary<TKey, TValue> containing cached System.String and their System.Collections.Generic.Dictionary<TKey, TValue> which is cached Role with FF multiplier. This is for unique custom roles. Declaration public Dictionary<string, Dictionary<RoleTypeId, float>> CustomRoleFriendlyFireMultiplier { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Collections.Generic.Dictionary < PlayerRoles.RoleTypeId , System.Single >> Remarks Consider adding this as object, Dict so that CustomRoles, and Strings can be parsed. | Improve this Doc View Source CustomUserId Gets or sets the player's custom user id. Declaration public string CustomUserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Dictionary Gets a System.Collections.Generic.Dictionary<TKey, TValue> containing all Player 's on the server. Declaration public static Dictionary<GameObject, Player> Dictionary { get; } Property Value Type Description System.Collections.Generic.Dictionary < UnityEngine.GameObject , Player > | Improve this Doc View Source DisplayNickname Gets or sets the player's nickname displayed to other player. Declaration public string DisplayNickname { get; set; } Property Value Type Description System.String | Improve this Doc View Source DoNotTrack Gets a value indicating whether or not the player has Do Not Track (DNT) enabled. If this value is true , data about the player unrelated to server security shouldn't be stored. Declaration public bool DoNotTrack { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Footprint Gets the player's Footprinting.Footprint . Declaration public Footprint Footprint { get; } Property Value Type Description Footprinting.Footprint | Improve this Doc View Source FriendlyFireMultiplier Gets or sets a System.Collections.Generic.Dictionary<TKey, TValue> containing cached PlayerRoles.RoleTypeId and their FF multiplier. This is for non-unique roles. Declaration public Dictionary<RoleTypeId, float> FriendlyFireMultiplier { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < PlayerRoles.RoleTypeId , System.Single > | Improve this Doc View Source GameObject Gets the encapsulated UnityEngine.GameObject . Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source GlobalBadge Gets the global badge of the player. Value will be null if the player does not have a global badge. Declaration public Badge? GlobalBadge { get; } Property Value Type Description System.Nullable < Badge > | Improve this Doc View Source Group Gets or sets the player's group. Declaration public UserGroup Group { get; set; } Property Value Type Description UserGroup | Improve this Doc View Source GroupName Gets or sets the player's group name. Declaration public string GroupName { get; set; } Property Value Type Description System.String | Improve this Doc View Source HasCustomName Gets a value indicating whether or not the player has an active CustomName. Declaration public bool HasCustomName { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasFlashlightModuleEnabled Gets a value indicating whether or not the player has enabled weapon's flashlight module. Declaration public bool HasFlashlightModuleEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasHint Gets a value indicating whether or not the player is viewing a hint. Declaration public bool HasHint { get; } Property Value Type Description System.Boolean | Improve this Doc View Source HasReservedSlot Gets a value indicating whether or not the player has a reserved slot. Declaration public bool HasReservedSlot { get; } Property Value Type Description System.Boolean See Also GiveReservedSlot() AddReservedSlot(String) | Improve this Doc View Source Health Gets or sets the player's health. If the health is greater than the MaxHealth , the MaxHealth will also be changed to match the health. Declaration public float Health { get; set; } Property Value Type Description System.Single | Improve this Doc View Source HintDisplay Gets the Hints.HintDisplay of the player. Declaration public HintDisplay HintDisplay { get; } Property Value Type Description Hints.HintDisplay | Improve this Doc View Source HumeShield Gets or sets the player's Hume Shield. Declaration public float HumeShield { get; set; } Property Value Type Description System.Single Remarks This value can bypass the role's hume shield maximum. However, this value will only be visible to the end-player as Hume Shield if IsHumeShieldedRole is true . Otherwise, the game will treat the player as though they have the amount of Hume Shield specified, even though they cannot see it. | Improve this Doc View Source HumeShieldStat Gets the player's PlayerStatsSystem.HumeShieldStat . Declaration public HumeShieldStat HumeShieldStat { get; } Property Value Type Description PlayerStatsSystem.HumeShieldStat | Improve this Doc View Source Id Gets or sets the player's id. Declaration public int Id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source IdsCache Gets a System.Collections.Generic.Dictionary<TKey, TValue> containing cached Player and their ids. Declaration public static Dictionary<int, Player> IdsCache { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.Int32 , Player > | Improve this Doc View Source InfoArea Gets or sets the player's player info area bitmask. This property can be used to hide player name elements, such as the player's name, badges, etc. Declaration public PlayerInfoArea InfoArea { get; set; } Property Value Type Description PlayerInfoArea | Improve this Doc View Source InfoViewRange Gets or sets the range at which this player's info can be viewed by others. Declaration public float InfoViewRange { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Inventory Gets the player's InventorySystem.Inventory . Declaration public Inventory Inventory { get; } Property Value Type Description InventorySystem.Inventory | Improve this Doc View Source IPAddress Gets the player's IP address. Declaration public string IPAddress { get; } Property Value Type Description System.String | Improve this Doc View Source IsAimingDownWeapon Gets a value indicating whether or not the player is aiming with a weapon. Declaration public bool IsAimingDownWeapon { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsAlive Gets a value indicating whether or not the player is alive. Declaration public bool IsAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsBypassModeEnabled Gets or sets a value indicating whether or not the player's bypass mode is enabled. Declaration public bool IsBypassModeEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsCHI Gets a value indicating whether or not the player's PlayerRoles.RoleTypeId is any Chaos rank. Equivalent to checking the player's PlayerRoles.Team . Declaration public bool IsCHI { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsConnected Gets a value indicating whether the player is fully connected to the server. Declaration public bool IsConnected { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsCuffed Gets a value indicating whether or not the player is cuffed. Declaration public bool IsCuffed { get; } Property Value Type Description System.Boolean Remarks Players can be cuffed without another player being the cuffer. | Improve this Doc View Source IsDead Gets a value indicating whether or not the player is dead. Declaration public bool IsDead { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsFriendlyFireEnabled Gets a value indicating whether or not the player's friendly fire is enabled. This property only determines if this player can deal damage to players on the same team; This player can be damaged by other players on their own team even if this property is false . Declaration public bool IsFriendlyFireEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGlobalModerator Gets a value indicating whether or not the player is a global moderator. Declaration public bool IsGlobalModerator { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGlobalMuted Gets or sets a value indicating whether or not the player is global muted. Declaration public bool IsGlobalMuted { get; set; } Property Value Type Description System.Boolean Remarks This property will NOT persistently mute and unmute the player. For persistent mutes, see Mute(Boolean) and UnMute(Boolean) . | Improve this Doc View Source IsGodModeEnabled Gets or sets a value indicating whether or not the player has godmode enabled. Declaration public bool IsGodModeEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsHost Gets a value indicating whether or not the player is the host. Declaration public bool IsHost { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsHuman Gets a value indicating whether or not the player's PlayerRoles.RoleTypeId is any human rank. Declaration public bool IsHuman { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInPocketDimension Gets a value indicating whether or not the player is in the pocket dimension. Declaration public bool IsInPocketDimension { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsIntercomMuted Gets or sets a value indicating whether or not the player is intercom muted. Declaration public bool IsIntercomMuted { get; set; } Property Value Type Description System.Boolean Remarks This property will NOT persistently mute and unmute the player. For persistent mutes, see Mute(Boolean) and UnMute(Boolean) . | Improve this Doc View Source IsInventoryEmpty Gets a value indicating whether or not the player's inventory is empty. Declaration public bool IsInventoryEmpty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInventoryFull Gets a value indicating whether or not the player's inventory is full. Declaration public bool IsInventoryFull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsJumping Gets a value indicating whether or not the player is jumping. Declaration public bool IsJumping { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMuted Gets or sets a value indicating whether or not the player is muted. Declaration public bool IsMuted { get; set; } Property Value Type Description System.Boolean Remarks This property will NOT persistently mute and unmute the player. For persistent mutes, see Mute(Boolean) and UnMute(Boolean) . | Improve this Doc View Source IsNoclipPermitted Gets or sets a value indicating whether or not the player is allowed to enter noclip mode. Declaration public bool IsNoclipPermitted { get; set; } Property Value Type Description System.Boolean Remarks For forcing the player into noclip mode, see IsNoclipEnabled . See Also IsNoclipEnabled | Improve this Doc View Source IsNorthwoodStaff Gets a value indicating whether or not the player is Northwood staff. Declaration public bool IsNorthwoodStaff { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNTF Gets a value indicating whether or not the player's PlayerRoles.RoleTypeId is any NTF rank. Equivalent to checking the player's PlayerRoles.Team . Declaration public bool IsNTF { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsOverwatchEnabled Gets or sets a value indicating whether or not the player's overwatch is enabled. Declaration public bool IsOverwatchEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsReloading Gets a value indicating whether or not the player is reloading a weapon. Declaration public bool IsReloading { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsScp Gets a value indicating whether or not the player's PlayerRoles.RoleTypeId is any SCP. Equivalent to checking the player's PlayerRoles.Team . Declaration public bool IsScp { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSpawnProtected Gets or sets a value indicating whether or not the player is spawn protected. Declaration public bool IsSpawnProtected { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSpeaking Gets a value indicating whether or not the player is speaking. Declaration public bool IsSpeaking { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsStaffBypassEnabled Gets a value indicating whether or not the staff bypass is enabled. Declaration public bool IsStaffBypassEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTransmitting Gets a value indicating whether or not the player is transmitting on a Radio. Declaration public bool IsTransmitting { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTutorial Gets a value indicating whether or not the player's PlayerRoles.RoleTypeId is equal to PlayerRoles.RoleTypeId.Tutorial . Declaration public bool IsTutorial { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUsingStamina Gets or sets a value indicating whether or not the player should use stamina system. Declaration public bool IsUsingStamina { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsVerified Gets a value indicating whether or not the player is verified. Declaration public bool IsVerified { get; } Property Value Type Description System.Boolean Remarks This is always false if online_mode is set to false . | Improve this Doc View Source Items Gets the player's items. Declaration public IReadOnlyCollection<Item> Items { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < Item > | Improve this Doc View Source KickPower Gets a value indicating a player's kick power. Declaration public byte KickPower { get; } Property Value Type Description System.Byte | Improve this Doc View Source LeadingTeam Gets the player's LeadingTeam . Declaration public LeadingTeam LeadingTeam { get; } Property Value Type Description LeadingTeam | Improve this Doc View Source Lift Gets the current Lift the player is in. Can be null . Declaration public Lift Lift { get; } Property Value Type Description Lift | Improve this Doc View Source List Gets a list of all Player 's on the server. Declaration public static IEnumerable<Player> List { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Player > | Improve this Doc View Source MaxArtificialHealth Gets or sets the player's maximum artificial health. Declaration public float MaxArtificialHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MaxHealth Gets or sets the player's maximum health. Declaration public float MaxHealth { get; set; } Property Value Type Description System.Single | Improve this Doc View Source NetId Gets the player's net ID. Declaration public uint NetId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source NetworkIdentity Gets the player's Mirror.NetworkIdentity . Declaration public NetworkIdentity NetworkIdentity { get; } Property Value Type Description Mirror.NetworkIdentity | Improve this Doc View Source Nickname Gets the player's nickname. Declaration public string Nickname { get; } Property Value Type Description System.String | Improve this Doc View Source Ping Gets the player's ping. Declaration public int Ping { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Position Gets or sets the player's position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 See Also Teleport(Vector3) Teleport(Object) | Improve this Doc View Source Preferences Gets a System.Collections.Generic.Dictionary<TKey, TValue> which contains all player's preferences. Declaration public Dictionary<FirearmType, AttachmentIdentifier[]> Preferences { get; } Property Value Type Description System.Collections.Generic.Dictionary < FirearmType , AttachmentIdentifier []> | Improve this Doc View Source RadioPlayback Gets the ReferenceHub 's VoiceChat.Playbacks.PersonalRadioPlayback , can be null. Declaration public PersonalRadioPlayback RadioPlayback { get; } Property Value Type Description VoiceChat.Playbacks.PersonalRadioPlayback | Improve this Doc View Source RankColor Gets or sets the player's rank color. Declaration public string RankColor { get; set; } Property Value Type Description System.String | Improve this Doc View Source RankName Gets or sets the player's rank name. Declaration public string RankName { get; set; } Property Value Type Description System.String | Improve this Doc View Source RawUserId Gets the player's user id without the authentication. Declaration public string RawUserId { get; } Property Value Type Description System.String | Improve this Doc View Source ReferenceHub Gets the encapsulated ReferenceHub . Declaration public ReferenceHub ReferenceHub { get; } Property Value Type Description ReferenceHub | Improve this Doc View Source RelativePosition Gets or sets the relative player's position. Declaration public RelativePosition RelativePosition { get; set; } Property Value Type Description RelativePositioning.RelativePosition Remarks The value will be default if the player's role is not an FpcRole . | Improve this Doc View Source RemoteAdminAccess Gets a value indicating whether or not the player has Remote Admin access. Declaration public bool RemoteAdminAccess { get; } Property Value Type Description System.Boolean | Improve this Doc View Source RemoteAdminPermissions Gets or sets a value indicating the actual RA permissions. Declaration public PlayerPermissions RemoteAdminPermissions { get; set; } Property Value Type Description PlayerPermissions | Improve this Doc View Source Role Gets a Role that is unique to this player and this class. This allows modification of various aspects related to the role solely. The type of the Role is different based on the PlayerRoles.RoleTypeId of the player, and casting should be used to modify the role. PlayerRoles.RoleTypeId.Spectator = SpectatorRole . PlayerRoles.RoleTypeId.Overwatch = OverwatchRole . PlayerRoles.RoleTypeId.None = NoneRole . PlayerRoles.RoleTypeId.Scp049 = Scp049Role . PlayerRoles.RoleTypeId.Scp0492 = Scp0492Role . PlayerRoles.RoleTypeId.Scp079 = Scp079Role . PlayerRoles.RoleTypeId.Scp096 = Scp096Role . PlayerRoles.RoleTypeId.Scp106 = Scp106Role . PlayerRoles.RoleTypeId.Scp173 = Scp173Role . PlayerRoles.RoleTypeId.Scp939 = Scp939Role . If not listed above, the type of Role will be HumanRole . If the role object is stored, it may become invalid if the player changes roles. Thus, the IsValid property can be checked. If this property is false , the role should be discarded and this property should be used again to get the new Role. This role is automatically cached until it changes, and it is recommended to use this property directly rather than storing the property yourself. Roles and RoleTypeIds can be compared directly. Player.Role == RoleTypeId.Scp079 is valid and will return true if the player is SCP-079. To set the player's role, see Set(RoleTypeId, SpawnReason, RoleSpawnFlags) . Declaration public Role Role { get; } Property Value Type Description Role See Also Set ( PlayerRoles.RoleTypeId , SpawnReason , PlayerRoles.RoleSpawnFlags ) | Improve this Doc View Source RoleManager Gets the PlayerRoles.PlayerRoleManager . Declaration public PlayerRoleManager RoleManager { get; } Property Value Type Description PlayerRoles.PlayerRoleManager | Improve this Doc View Source Rotation Gets or sets the player's rotation. Declaration public Vector3 Rotation { get; set; } Property Value Type Description UnityEngine.Vector3 Returns the direction the player is looking at. | Improve this Doc View Source Scale Gets or sets the player's scale. Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source ScpPreferences Gets or sets the player's SCP preferences. Declaration public ScpSpawnPreferences.SpawnPreferences ScpPreferences { get; set; } Property Value Type Description PlayerRoles.RoleAssign.ScpSpawnPreferences.SpawnPreferences | Improve this Doc View Source Sender Gets the player's command sender instance. Declaration public PlayerCommandSender Sender { get; } Property Value Type Description RemoteAdmin.PlayerCommandSender | Improve this Doc View Source SessionVariables Gets the dictionary of the player's session variables. Session variables can be used to save temporary data on players. Data is stored in a System.Collections.Generic.Dictionary<TKey, TValue> . The key of the data is always a System.String , whereas the value can be any System.Object . The data stored in a player's session variables can be accessed by different assemblies; it is recommended to uniquely identify stored data so that it does not conflict with other plugins that may also be using the same name. Data saved with session variables is not being saved on player disconnect. If the data must be saved after the player's disconnects, a database must be used instead. Declaration public Dictionary<string, object> SessionVariables { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > | Improve this Doc View Source Stamina Gets or sets the amount of stamina the player has. Declaration public float Stamina { get; set; } Property Value Type Description System.Single Remarks This will always be a value between 0-1 , 0 representing no stamina and 1 representing maximum stamina. | Improve this Doc View Source StaminaStat Gets the StaminaStat class. Declaration public StaminaStat StaminaStat { get; } Property Value Type Description PlayerStatsSystem.StaminaStat | Improve this Doc View Source Transform Gets the ReferenceHub 's UnityEngine.Transform . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source UniqueRole Gets or sets a unique custom role that does not adbide to base game for this player. Used in conjunction with CustomRoleFriendlyFireMultiplier . Declaration public string UniqueRole { get; set; } Property Value Type Description System.String | Improve this Doc View Source UnitName Gets the player's unit name. Declaration public string UnitName { get; } Property Value Type Description System.String | Improve this Doc View Source UserId Gets the player's user id. Declaration public string UserId { get; } Property Value Type Description System.String | Improve this Doc View Source UserIdsCache Gets a System.Collections.Generic.Dictionary<TKey, TValue> containing cached Player and their user ids. Declaration public static Dictionary<string, Player> UserIdsCache { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , Player > | Improve this Doc View Source Velocity Gets the Player 's current movement speed. Declaration public Vector3 Velocity { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source VoiceChannel Gets or sets the player's voice channel. Declaration public VoiceChatChannel VoiceChannel { get; set; } Property Value Type Description VoiceChat.VoiceChatChannel | Improve this Doc View Source VoiceChatMuteFlags Gets or sets the player's VoiceChat.VcMuteFlags . Declaration public VcMuteFlags VoiceChatMuteFlags { get; set; } Property Value Type Description VoiceChat.VcMuteFlags | Improve this Doc View Source VoiceColor Gets the player's voice color. Declaration public Color VoiceColor { get; } Property Value Type Description UnityEngine.Color | Improve this Doc View Source VoiceModule Gets the ReferenceHub 's VoiceModule , can be null. Declaration public VoiceModuleBase VoiceModule { get; } Property Value Type Description PlayerRoles.Voice.VoiceModuleBase | Improve this Doc View Source Zone Gets the current zone the player is in. Declaration public ZoneType Zone { get; } Property Value Type Description ZoneType Methods | Improve this Doc View Source AddAhp(Single, Single, Single, Single, Single, Boolean) Gives a new PlayerStatsSystem.AhpStat . Declaration public void AddAhp(float amount, float limit = 75F, float decay = 1.2F, float efficacy = 0.7F, float sustain = 0F, bool persistant = false) Parameters Type Name Description System.Single amount The amount to give the player. System.Single limit The maximum AHP for this stat. System.Single decay How much value is lost per second. System.Single efficacy Percent of incoming damage absorbed by this stat. System.Single sustain The number of seconds to delay the start of the decay. System.Boolean persistant Whether or not the process is removed when the value hits 0. | Improve this Doc View Source AddAmmo(AmmoType, UInt16) Adds the amount of a specified ammo type to the player's inventory. Declaration public void AddAmmo(AmmoType ammoType, ushort amount) Parameters Type Name Description AmmoType ammoType The AmmoType to be added. System.UInt16 amount The amount of ammo to be added. | Improve this Doc View Source AddAmmo(FirearmType, UInt16) Adds the amount of a weapon's ammo type to the player's inventory. Declaration public void AddAmmo(FirearmType weaponType, ushort amount) Parameters Type Name Description FirearmType weaponType The ItemType of the weapon. System.UInt16 amount The amount of ammo to be added. | Improve this Doc View Source AddComponent(Type, String) Declaration public EActor AddComponent(Type type, string name = \"\") Parameters Type Name Description System.Type type System.String name Returns Type Description EActor | Improve this Doc View Source AddComponent<T>(String) Declaration public T AddComponent<T>(string name = \"\") where T : EActor Parameters Type Name Description System.String name Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source AddComponent<T>(Type, String) Declaration public T AddComponent<T>(Type type, string name = \"\") where T : EActor Parameters Type Name Description System.Type type System.String name Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source AddItem(Firearm, IEnumerable<AttachmentIdentifier>) Adds an item to the player's inventory. Declaration public void AddItem(Firearm item, IEnumerable<AttachmentIdentifier> identifiers) Parameters Type Name Description Firearm item The item to be added. System.Collections.Generic.IEnumerable < AttachmentIdentifier > identifiers The attachments to be added to the item. | Improve this Doc View Source AddItem(Firearm, Int32, IEnumerable<AttachmentIdentifier>) Adds the amount of items to the player's inventory. Declaration public void AddItem(Firearm firearm, int amount, IEnumerable<AttachmentIdentifier> identifiers) Parameters Type Name Description Firearm firearm The firearm to be added. System.Int32 amount The amount of items to be added. System.Collections.Generic.IEnumerable < AttachmentIdentifier > identifiers The attachments to be added to the item. | Improve this Doc View Source AddItem(Item) Adds an item to the player's inventory. Declaration public void AddItem(Item item) Parameters Type Name Description Item item The item to be added. | Improve this Doc View Source AddItem(Item, Int32) Adds the amount of items to the player's inventory. Declaration public void AddItem(Item item, int amount) Parameters Type Name Description Item item The item to be added. System.Int32 amount The amount of items to be added. | Improve this Doc View Source AddItem(FirearmPickup, IEnumerable<AttachmentIdentifier>) Adds an item to the player's inventory. Declaration public Item AddItem(FirearmPickup pickup, IEnumerable<AttachmentIdentifier> identifiers) Parameters Type Name Description FirearmPickup pickup The FirearmPickup of the item to be added. System.Collections.Generic.IEnumerable < AttachmentIdentifier > identifiers The attachments to be added to Pickup of the item. Returns Type Description Item The Item that was added. | Improve this Doc View Source AddItem(Pickup) Adds an item to the player's inventory. Declaration public Item AddItem(Pickup pickup) Parameters Type Name Description Pickup pickup The Pickup of the item to be added. Returns Type Description Item The Item that was added. | Improve this Doc View Source AddItem(ItemBase, Item) Adds an item to the player's inventory. Declaration public Item AddItem(ItemBase itemBase, Item item = null) Parameters Type Name Description InventorySystem.Items.ItemBase itemBase The item to be added. Item item The Item object of the item. Returns Type Description Item The Item that was added. | Improve this Doc View Source AddItem(ItemType, IEnumerable<AttachmentIdentifier>) Adds an item of the specified type with default durability(ammo/charge) and no mods to the player's inventory. Declaration public Item AddItem(ItemType itemType, IEnumerable<AttachmentIdentifier> identifiers = null) Parameters Type Name Description ItemType itemType The item to be added. System.Collections.Generic.IEnumerable < AttachmentIdentifier > identifiers The attachments to be added to the item. Returns Type Description Item The Item given to the player. | Improve this Doc View Source AddItem(ItemType, Int32) Adds the amount of items of the specified type with default durability(ammo/charge) and no mods to the player's inventory. Declaration public IEnumerable<Item> AddItem(ItemType itemType, int amount) Parameters Type Name Description ItemType itemType The item to be added. System.Int32 amount The amount of items to be added. Returns Type Description System.Collections.Generic.IEnumerable < Item > An System.Collections.Generic.IEnumerable<T> containing the items given. | Improve this Doc View Source AddItem(ItemType, Int32, IEnumerable<AttachmentIdentifier>) Adds the amount of items of the specified type with default durability(ammo/charge) and no mods to the player's inventory. Declaration public IEnumerable<Item> AddItem(ItemType itemType, int amount, IEnumerable<AttachmentIdentifier> identifiers) Parameters Type Name Description ItemType itemType The item to be added. System.Int32 amount The amount of items to be added. System.Collections.Generic.IEnumerable < AttachmentIdentifier > identifiers The attachments to be added to the item. Returns Type Description System.Collections.Generic.IEnumerable < Item > An System.Collections.Generic.IEnumerable<T> containing the items given. | Improve this Doc View Source AddItem(Dictionary<Firearm, IEnumerable<AttachmentIdentifier>>) Adds the list of items to the player's inventory. Declaration public void AddItem(Dictionary<Firearm, IEnumerable<AttachmentIdentifier>> firearms) Parameters Type Name Description System.Collections.Generic.Dictionary < Firearm , System.Collections.Generic.IEnumerable < AttachmentIdentifier >> firearms The System.Collections.Generic.Dictionary<TKey, TValue> of Firearm and System.Collections.Generic.IEnumerable<T> of AttachmentIdentifier to be added. | Improve this Doc View Source AddItem(Dictionary<ItemType, IEnumerable<AttachmentIdentifier>>) Adds the list of items of the specified type with default durability(ammo/charge) and no mods to the player's inventory. Declaration public IEnumerable<Item> AddItem(Dictionary<ItemType, IEnumerable<AttachmentIdentifier>> items) Parameters Type Name Description System.Collections.Generic.Dictionary < ItemType , System.Collections.Generic.IEnumerable < AttachmentIdentifier >> items The System.Collections.Generic.Dictionary<TKey, TValue> of ItemType and System.Collections.Generic.IEnumerable<T> of AttachmentIdentifier to be added. Returns Type Description System.Collections.Generic.IEnumerable < Item > An System.Collections.Generic.IEnumerable<T> containing the items given. | Improve this Doc View Source AddItem(IEnumerable<Item>) Adds the list of items to the player's inventory. Declaration public void AddItem(IEnumerable<Item> items) Parameters Type Name Description System.Collections.Generic.IEnumerable < Item > items The list of items to be added. | Improve this Doc View Source AddItem(IEnumerable<ItemType>) Adds the list of items of the specified type with default durability(ammo/charge) and no mods to the player's inventory. Declaration public IEnumerable<Item> AddItem(IEnumerable<ItemType> items) Parameters Type Name Description System.Collections.Generic.IEnumerable < ItemType > items The list of items to be added. Returns Type Description System.Collections.Generic.IEnumerable < Item > An System.Collections.Generic.IEnumerable<T> containing the items given. | Improve this Doc View Source AddReservedSlot(String) Adds a player's UserId to the list of reserved slots. Declaration public static bool AddReservedSlot(string userId) Parameters Type Name Description System.String userId The UserId of the player to add. Returns Type Description System.Boolean true if the slot was successfully added, or false if the provided UserId already has a reserved slot. Remarks This method does not permanently give a user a reserved slot. The slot will be removed if the reserved slots are reloaded. See Also GiveReservedSlot() | Improve this Doc View Source ApplyRandomEffect(EffectCategory, Single, Boolean) Enables a random EffectType on the player. Declaration public EffectType ApplyRandomEffect(EffectCategory category = EffectCategory.None, float duration = 0F, bool addDurationIfActive = false) Parameters Type Name Description EffectCategory category An optional category to filter the applied effect. Set to None for any effect. System.Single duration The amount of time the effect will be active for. System.Boolean addDurationIfActive If the effect is already active, setting to true will add this duration onto the effect. Returns Type Description EffectType A EffectType that was given to the player. | Improve this Doc View Source Ban(Int32, String, Player) Bans the player. Declaration public void Ban(int duration, string reason, Player issuer = null) Parameters Type Name Description System.Int32 duration The ban duration, in seconds. System.String reason The ban reason. Player issuer The ban issuer. | Improve this Doc View Source Ban(TimeSpan, String, Player) Bans the player. Declaration public void Ban(TimeSpan duration, string reason, Player issuer = null) Parameters Type Name Description System.TimeSpan duration The length of time to ban. System.String reason The ban reason. Player issuer The ban issuer. | Improve this Doc View Source BlinkTag() Blink the player's tag. Declaration public IEnumerator<float> BlinkTag() Returns Type Description System.Collections.Generic.IEnumerator < System.Single > Used to wait. | Improve this Doc View Source Broadcast(Broadcast, Boolean) Broadcasts the given Broadcast to the player. Declaration public void Broadcast(Broadcast broadcast, bool shouldClearPrevious = false) Parameters Type Name Description Broadcast broadcast The Broadcast to be broadcasted. System.Boolean shouldClearPrevious Clears all player's broadcasts before sending the new one. | Improve this Doc View Source Broadcast(UInt16, String, Broadcast.BroadcastFlags, Boolean) Shows a broadcast to the player. Doesn't get logged to the console and can be monospaced. Declaration public void Broadcast(ushort duration, string message, Broadcast.BroadcastFlags type = Broadcast.BroadcastFlags.Normal, bool shouldClearPrevious = false) Parameters Type Name Description System.UInt16 duration The broadcast duration. System.String message The message to be broadcasted. Broadcast.BroadcastFlags type The broadcast type. System.Boolean shouldClearPrevious Clears all player's broadcasts before sending the new one. | Improve this Doc View Source ChangeEffectIntensity(EffectType, Byte, Single) Changes the intensity of a CustomPlayerEffects.StatusEffectBase . Declaration public void ChangeEffectIntensity(EffectType type, byte intensity, float duration = 0F) Parameters Type Name Description EffectType type The EffectType to change. System.Byte intensity The new intensity to use. System.Single duration The new duration to add to the effect. | Improve this Doc View Source ChangeEffectIntensity(String, Byte, Single) Changes the intensity of a CustomPlayerEffects.StatusEffectBase . Declaration public void ChangeEffectIntensity(string effectName, byte intensity, float duration = 0F) Parameters Type Name Description System.String effectName The name of the CustomPlayerEffects.StatusEffectBase to enable. System.Byte intensity The intensity of the effect. System.Single duration The new length of the effect. Defaults to infinite length. | Improve this Doc View Source ChangeEffectIntensity<T>(Byte, Single) Changes the intensity of a CustomPlayerEffects.StatusEffectBase . Declaration public void ChangeEffectIntensity<T>(byte intensity, float duration = 0F) where T : StatusEffectBase Parameters Type Name Description System.Byte intensity The intensity of the effect. System.Single duration The new duration to add to the effect. Type Parameters Name Description T The CustomPlayerEffects.StatusEffectBase to change the intensity of. | Improve this Doc View Source ClearBroadcasts() Clears the player's brodcast. Doesn't get logged to the console. Declaration public void ClearBroadcasts() | Improve this Doc View Source ClearInventory(Boolean) Clears the player's inventory, including all ammo and items. Declaration public void ClearInventory(bool destroy = true) Parameters Type Name Description System.Boolean destroy Whether or not to fully destroy the old items. See Also ResetInventory(IEnumerable<Item>) ResetInventory(IEnumerable<ItemType>) DropItems() | Improve this Doc View Source CountItem(ProjectileType) Counts how many items of a certain ProjectileType a player has. Declaration public int CountItem(ProjectileType grenadeType) Parameters Type Name Description ProjectileType grenadeType The ProjectileType to search for. Returns Type Description System.Int32 How many items of that ProjectileType the player has. See Also CountItem(ItemType) | Improve this Doc View Source CountItem(ItemCategory) Counts how many items of a certain ItemCategory a player has. Declaration public int CountItem(ItemCategory category) Parameters Type Name Description ItemCategory category The category to search for. Returns Type Description System.Int32 How many items of that ItemCategory the player has. See Also CountItem(ItemType) | Improve this Doc View Source CountItem(ItemType) Counts how many items of a certain ItemType a player has. Declaration public int CountItem(ItemType item) Parameters Type Name Description ItemType item The item to search for. Returns Type Description System.Int32 How many items of that ItemType the player has. Remarks For counting ammo, see GetAmmo(AmmoType) . See Also GetAmmo(AmmoType) CountItem(ItemCategory) | Improve this Doc View Source DisableAllEffects() Disables all currently active CustomPlayerEffects.StatusEffectBase . Declaration public void DisableAllEffects() See Also DisableEffects(IEnumerable<EffectType>) | Improve this Doc View Source DisableAllEffects(EffectCategory) Disables all currently active CustomPlayerEffects.StatusEffectBase . Declaration public void DisableAllEffects(EffectCategory category) Parameters Type Name Description EffectCategory category A category to filter the disabled effects. See Also DisableAllEffects() | Improve this Doc View Source DisableEffect(EffectType) Disables a specific status effect on the player. Declaration public void DisableEffect(EffectType effect) Parameters Type Name Description EffectType effect The EffectType to disable. | Improve this Doc View Source DisableEffect<T>() Disables a specific CustomPlayerEffects.StatusEffectBase on the player. Declaration public void DisableEffect<T>() where T : StatusEffectBase Type Parameters Name Description T The CustomPlayerEffects.StatusEffectBase to disable. | Improve this Doc View Source DisableEffects(IEnumerable<EffectType>) Disables a System.Collections.Generic.IEnumerable<T> of EffectType on the player. Declaration public void DisableEffects(IEnumerable<EffectType> effects) Parameters Type Name Description System.Collections.Generic.IEnumerable < EffectType > effects The System.Collections.Generic.IEnumerable<T> of EffectType to disable. | Improve this Doc View Source Disconnect(String) Disconnects the player. Declaration public void Disconnect(string reason = null) Parameters Type Name Description System.String reason The disconnection reason. | Improve this Doc View Source DropAmmo(AmmoType, UInt16, Boolean) Drops a specific AmmoType out of the player's inventory. Declaration public bool DropAmmo(AmmoType ammoType, ushort amount, bool checkMinimals = false) Parameters Type Name Description AmmoType ammoType The AmmoType that will be dropped. System.UInt16 amount The amount of ammo that will be dropped. System.Boolean checkMinimals Whether or not ammo limits will be taken into consideration. Returns Type Description System.Boolean true if ammo was dropped; otherwise, false . | Improve this Doc View Source DropHeldItem() Drops the held item. Will not do anything if the player is not holding an item. Declaration public void DropHeldItem() See Also CurrentItem | Improve this Doc View Source DropItem(Item) Drops an item from the player's inventory. Declaration public Pickup DropItem(Item item) Parameters Type Name Description Item item The item to be dropped. Returns Type Description Pickup dropped Pickup . | Improve this Doc View Source DropItems() Drops all items in the player's inventory, including all ammo and items. Declaration public void DropItems() See Also ClearInventory(Boolean) | Improve this Doc View Source EnableEffect(StatusEffectBase, Single, Boolean) Enables a CustomPlayerEffects.StatusEffectBase on the player. Declaration public bool EnableEffect(StatusEffectBase statusEffect, float duration = 0F, bool addDurationIfActive = false) Parameters Type Name Description CustomPlayerEffects.StatusEffectBase statusEffect The name of the CustomPlayerEffects.StatusEffectBase to enable. System.Single duration The amount of time the effect will be active for. System.Boolean addDurationIfActive If the effect is already active, setting to true will add this duration onto the effect. Returns Type Description System.Boolean A bool indicating whether or not the effect was valid and successfully enabled. | Improve this Doc View Source EnableEffect(EffectType, Single, Boolean) Enables a status effect on the player. Declaration public void EnableEffect(EffectType type, float duration = 0F, bool addDurationIfActive = false) Parameters Type Name Description EffectType type The EffectType to enable. System.Single duration The amount of time the effect will be active for. System.Boolean addDurationIfActive If the effect is already active, setting to true will add this duration onto the effect. | Improve this Doc View Source EnableEffect(Effect) Enables a status effect on the player. Declaration public void EnableEffect(Effect effect) Parameters Type Name Description Effect effect The Effect to enable. | Improve this Doc View Source EnableEffect(String, Single, Boolean) Enables a CustomPlayerEffects.StatusEffectBase on the player. Declaration public StatusEffectBase EnableEffect(string effectName, float duration = 0F, bool addDurationIfActive = false) Parameters Type Name Description System.String effectName The name of the CustomPlayerEffects.StatusEffectBase to enable. System.Single duration The amount of time the effect will be active for. System.Boolean addDurationIfActive If the effect is already active, setting to true will add this duration onto the effect. Returns Type Description CustomPlayerEffects.StatusEffectBase The CustomPlayerEffects.StatusEffectBase instance of the activated effect. | Improve this Doc View Source EnableEffect<T>(Single, Boolean) Enables a CustomPlayerEffects.StatusEffectBase on the player. Declaration public bool EnableEffect<T>(float duration = 0F, bool addDurationIfActive = false) where T : StatusEffectBase Parameters Type Name Description System.Single duration The amount of time the effect will be active for. System.Boolean addDurationIfActive If the effect is already active, setting to true will add this duration onto the effect. Returns Type Description System.Boolean A bool indicating whether or not the effect was valid and successfully enabled. Type Parameters Name Description T The CustomPlayerEffects.StatusEffectBase to enable. | Improve this Doc View Source EnableEffects(IEnumerable<EffectType>, Single, Boolean) Enables a System.Collections.Generic.IEnumerable<T> of EffectType on the player. Declaration public void EnableEffects(IEnumerable<EffectType> types, float duration = 0F, bool addDurationIfActive = false) Parameters Type Name Description System.Collections.Generic.IEnumerable < EffectType > types The System.Collections.Generic.IEnumerable<T> of EffectType to enable. System.Single duration The amount of time the effects will be active for. System.Boolean addDurationIfActive If an effect is already active, setting to true will add this duration onto the effect. | Improve this Doc View Source EnableEffects(IEnumerable<Effect>) Enables a System.Collections.Generic.IEnumerable<T> of Effect on the player. Declaration public void EnableEffects(IEnumerable<Effect> effects) Parameters Type Name Description System.Collections.Generic.IEnumerable < Effect > effects The System.Collections.Generic.IEnumerable<T> of Effect to enable. | Improve this Doc View Source Finalize() Finalizes an instance of the Player class. Declaration protected void Finalize() | Improve this Doc View Source Get(CommandSender) Gets the Player belonging to the CommandSender , if any. Declaration public static Player Get(CommandSender sender) Parameters Type Name Description CommandSender sender The command sender. Returns Type Description Player A Player or null if not found. | Improve this Doc View Source Get(ICommandSender) Gets the Player belonging to the CommandSystem.ICommandSender , if any. Declaration public static Player Get(ICommandSender sender) Parameters Type Name Description CommandSystem.ICommandSender sender The command sender. Returns Type Description Player A Player or null if not found. | Improve this Doc View Source Get(Side) Gets a Player System.Collections.Generic.IEnumerable<T> filtered by side. Can be empty. Declaration public static IEnumerable<Player> Get(Side side) Parameters Type Name Description Side side The players' side. Returns Type Description System.Collections.Generic.IEnumerable < Player > The filtered System.Collections.Generic.IEnumerable<T> . | Improve this Doc View Source Get(NetworkConnection) Gets the Player belonging to a specific Mirror.NetworkConnection , if any. Declaration public static Player Get(NetworkConnection conn) Parameters Type Name Description Mirror.NetworkConnection conn The player's Mirror.NetworkConnection . Returns Type Description Player The Player owning the Mirror.NetworkConnection , or null if not found. | Improve this Doc View Source Get(NetworkIdentity) Gets the Player belonging to a specific Mirror.NetworkIdentity , if any. Declaration public static Player Get(NetworkIdentity netIdentity) Parameters Type Name Description Mirror.NetworkIdentity netIdentity The player's Mirror.NetworkIdentity . Returns Type Description Player The Player owning the Mirror.NetworkIdentity , or null if not found. | Improve this Doc View Source Get(RoleTypeId) Gets a Player System.Collections.Generic.IEnumerable<T> filtered by role. Can be empty. Declaration public static IEnumerable<Player> Get(RoleTypeId role) Parameters Type Name Description PlayerRoles.RoleTypeId role The players' role. Returns Type Description System.Collections.Generic.IEnumerable < Player > The filtered System.Collections.Generic.IEnumerable<T> . | Improve this Doc View Source Get(Team) Gets a Player System.Collections.Generic.IEnumerable<T> filtered by team. Can be empty. Declaration public static IEnumerable<Player> Get(Team team) Parameters Type Name Description PlayerRoles.Team team The players' team. Returns Type Description System.Collections.Generic.IEnumerable < Player > The filtered System.Collections.Generic.IEnumerable<T> . | Improve this Doc View Source Get(Player) Gets the Player from NwPluginAPI class. Declaration public static Player Get(Player apiPlayer) Parameters Type Name Description PluginAPI.Core.Player apiPlayer The PluginAPI.Core.Player class. Returns Type Description Player A Player or null if not found. | Improve this Doc View Source Get(ReferenceHub) Gets the Player belonging to the ReferenceHub , if any. Declaration public static Player Get(ReferenceHub referenceHub) Parameters Type Name Description ReferenceHub referenceHub The player's ReferenceHub . Returns Type Description Player A Player or null if not found. | Improve this Doc View Source Get(Func<Player, Boolean>) Gets a System.Collections.Generic.IEnumerable<T> of Player filtered based on a predicate. Declaration public static IEnumerable<Player> Get(Func<Player, bool> predicate) Parameters Type Name Description System.Func < Player , System.Boolean > predicate The condition to satisfy. Returns Type Description System.Collections.Generic.IEnumerable < Player > A System.Collections.Generic.IEnumerable<T> of Player which contains elements that satify the condition. | Improve this Doc View Source Get(Int32) Gets the player belonging to the specified id. Declaration public static Player Get(int id) Parameters Type Name Description System.Int32 id The player id. Returns Type Description Player Returns the player found or null if not found. | Improve this Doc View Source Get(String) Gets the Player by identifier. Declaration public static Player Get(string args) Parameters Type Name Description System.String args The player's nickname, ID, steamID64 or Discord ID. Returns Type Description Player Returns the player found or null if not found. | Improve this Doc View Source Get(UInt32) Gets the Player belonging to a specific netId, if any. Declaration public static Player Get(uint netId) Parameters Type Name Description System.UInt32 netId The player's Mirror.NetworkIdentity.netId . Returns Type Description Player The Player owning the netId, or null if not found. | Improve this Doc View Source Get(Collider) Gets the Player belonging to the UnityEngine.Collider , if any. Declaration public static Player Get(Collider collider) Parameters Type Name Description UnityEngine.Collider collider UnityEngine.Collider . Returns Type Description Player A Player or null if not found. | Improve this Doc View Source Get(GameObject) Gets the Player belonging to the UnityEngine.GameObject , if any. Declaration public static Player Get(GameObject gameObject) Parameters Type Name Description UnityEngine.GameObject gameObject The player's UnityEngine.GameObject . Returns Type Description Player A Player or null if not found. | Improve this Doc View Source GetAmmo(AmmoType) Gets the ammo count of a specified ammo type in a player's inventory. Declaration public ushort GetAmmo(AmmoType ammoType) Parameters Type Name Description AmmoType ammoType The AmmoType to be searched for in the player's inventory. Returns Type Description System.UInt16 The specified ammo count. | Improve this Doc View Source GetAmmoLimit(AmmoType) Gets the maximum amount of ammo the player can hold, given the ammo AmmoType . This method factors in the armor the player is wearing, as well as server configuration. For the maximum amount of ammo that can be given regardless of worn armor and server configuration, see ServerConfigSynchronizer.AmmoLimit . Declaration public int GetAmmoLimit(AmmoType type) Parameters Type Name Description AmmoType type The AmmoType of the ammo to check. Returns Type Description System.Int32 The maximum amount of ammo this player can carry. Guaranteed to be between 0 and ServerConfigSynchronizer.AmmoLimit . | Improve this Doc View Source GetCategoryLimit(ItemCategory) Gets the maximum amount of an ItemCategory the player can hold, based on the armor the player is wearing, as well as server configuration. Declaration public int GetCategoryLimit(ItemCategory category) Parameters Type Name Description ItemCategory category The ItemCategory to check. Returns Type Description System.Int32 The maximum amount of items in the category that the player can hold. | Improve this Doc View Source GetComponent(Type) Declaration public EActor GetComponent(Type type) Parameters Type Name Description System.Type type Returns Type Description EActor | Improve this Doc View Source GetComponent<T>() Declaration public T GetComponent<T>() where T : EActor Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetComponent<T>(Type) Declaration public T GetComponent<T>(Type type) where T : EActor Parameters Type Name Description System.Type type Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source GetCooldownItem(Single, ItemType) Set the time cooldown on this ItemType. Declaration public void GetCooldownItem(float time, ItemType itemType) Parameters Type Name Description System.Single time The times for the cooldown. ItemType itemType The itemtypes to choose for being cooldown. | Improve this Doc View Source GetEffect(EffectType) Gets an instance of CustomPlayerEffects.StatusEffectBase by EffectType . Declaration public StatusEffectBase GetEffect(EffectType type) Parameters Type Name Description EffectType type The EffectType . Returns Type Description CustomPlayerEffects.StatusEffectBase The CustomPlayerEffects.StatusEffectBase . | Improve this Doc View Source GetEffectIntensity<T>() Gets a System.Byte indicating the intensity of the given CustomPlayerEffects.StatusEffectBase . Declaration public byte GetEffectIntensity<T>() where T : StatusEffectBase Returns Type Description System.Byte The intensity of the effect. Type Parameters Name Description T The CustomPlayerEffects.StatusEffectBase to check. Exceptions Type Condition System.ArgumentException Thrown if the given type is not a valid CustomPlayerEffects.StatusEffectBase . | Improve this Doc View Source GetModule<T>() Gets a PlayerStatsSystem.StatBase module from the player's PlayerStatsSystem.PlayerStats component. Declaration public T GetModule<T>() where T : StatBase Returns Type Description T The T module that was requested. Type Parameters Name Description T The returned object type. | Improve this Doc View Source GetNearCameras(Single) Declaration public IEnumerable<Camera> GetNearCameras(float toleration = 15F) Parameters Type Name Description System.Single toleration Returns Type Description System.Collections.Generic.IEnumerable < Camera > | Improve this Doc View Source GetScpPreference(RoleTypeId) Gets a user's SCP preference. Declaration public int GetScpPreference(RoleTypeId roleType) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The SCP RoleType. Returns Type Description System.Int32 A value from -5 to 5 , representing a player's preference to play as the provided SCP. Will return 0 for invalid SCPs. | Improve this Doc View Source GiveReservedSlot() Adds the player's UserId to the list of reserved slots. Declaration public bool GiveReservedSlot() Returns Type Description System.Boolean true if the slot was successfully added, or false if the player already has a reserved slot. Remarks This method does not permanently give a user a reserved slot. The slot will be removed if the reserved slots are reloaded. See Also AddReservedSlot(String) | Improve this Doc View Source Handcuff() Handcuff the player as administrator. Declaration public void Handcuff() | Improve this Doc View Source Handcuff(Player) Handcuff the player. Declaration public void Handcuff(Player cuffer) Parameters Type Name Description Player cuffer The cuffer player. | Improve this Doc View Source HasComponent(Type, Boolean) Declaration public bool HasComponent(Type type, bool depthInheritance = false) Parameters Type Name Description System.Type type System.Boolean depthInheritance Returns Type Description System.Boolean | Improve this Doc View Source HasComponent<T>(Boolean) Declaration public bool HasComponent<T>(bool depthInheritance = false) Parameters Type Name Description System.Boolean depthInheritance Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source HasItem(Item) Indicates whether or not the player has an item. Declaration public bool HasItem(Item item) Parameters Type Name Description Item item The item to search for. Returns Type Description System.Boolean true , if the player has it; otherwise, false . | Improve this Doc View Source HasItem(ItemType) Indicates whether or not the player has an item type. Declaration public bool HasItem(ItemType type) Parameters Type Name Description ItemType type The type to search for. Returns Type Description System.Boolean true , if the player has it; otherwise, false . | Improve this Doc View Source Heal(Single, Boolean) Heals the player. Declaration public void Heal(float amount, bool overrideMaxHealth = false) Parameters Type Name Description System.Single amount The amount of health to heal. System.Boolean overrideMaxHealth Whether or not healing should exceed their max health. | Improve this Doc View Source Hurt(Player, Single, DamageType, DamageHandlerBase.CassieAnnouncement) Hurts the player. Declaration public void Hurt(Player attacker, float amount, DamageType damageType = DamageType.Unknown, DamageHandlerBase.CassieAnnouncement cassieAnnouncement = null) Parameters Type Name Description Player attacker The Player attacking player. System.Single amount The langword_csharp_float amount of damage to deal. DamageType damageType The DamageType of the damage dealt. DamageHandlerBase.CassieAnnouncement cassieAnnouncement The DamageHandlerBase.CassieAnnouncement cassie announcement to make if the damage kills the player. | Improve this Doc View Source Hurt(Player, Single, DamageType, DamageHandlerBase.CassieAnnouncement, String) Hurts the player. Declaration public void Hurt(Player attacker, float amount, DamageType damageType = DamageType.Unknown, DamageHandlerBase.CassieAnnouncement cassieAnnouncement = null, string deathText = null) Parameters Type Name Description Player attacker The Player attacking player. System.Single amount The langword_csharp_float amount of damage to deal. DamageType damageType The DamageType of the damage dealt. DamageHandlerBase.CassieAnnouncement cassieAnnouncement The DamageHandlerBase.CassieAnnouncement cassie announcement to make if the damage kills the player. System.String deathText The langword_csharp_string death text to appear on Player screen. | Improve this Doc View Source Hurt(Player, Single, Vector3, Int32) Hurts the player. Declaration public void Hurt(Player attacker, float damage, Vector3 force = default(Vector3), int armorPenetration = 0) Parameters Type Name Description Player attacker The Player attacking player. System.Single damage The langword_csharp_float amount of damage to deal. UnityEngine.Vector3 force The throw force. System.Int32 armorPenetration The armor penetration amount. | Improve this Doc View Source Hurt(DamageHandlerBase) Hurts the player. Declaration public void Hurt(DamageHandlerBase damageHandlerBase) Parameters Type Name Description PlayerStatsSystem.DamageHandlerBase damageHandlerBase The PlayerStatsSystem.DamageHandlerBase used to deal damage. | Improve this Doc View Source Hurt(Single, DamageType, String) Hurts the player. Declaration public void Hurt(float amount, DamageType damageType = DamageType.Unknown, string cassieAnnouncement = \"\") Parameters Type Name Description System.Single amount The langword_csharp_float amount of damage to deal. DamageType damageType The DamageType of the damage dealt. System.String cassieAnnouncement The langword_csharp_string cassie announcement to make if the damage kills the player. | Improve this Doc View Source Hurt(Single, String, String) Hurts the player. Declaration public void Hurt(float damage, string damageReason, string cassieAnnouncement = \"\") Parameters Type Name Description System.Single damage The amount of damage to deal. System.String damageReason The reason for the damage being dealt. System.String cassieAnnouncement The cassie announcement to make. | Improve this Doc View Source IsEffectActive<T>() Gets a System.Boolean describing whether or not the given CustomPlayerEffects.StatusEffectBase is currently enabled. Declaration public bool IsEffectActive<T>() where T : StatusEffectBase Returns Type Description System.Boolean A System.Boolean determining whether or not the player effect is active. Type Parameters Name Description T The CustomPlayerEffects.StatusEffectBase to check. | Improve this Doc View Source Kick(String, Player) Kicks the player. Declaration public void Kick(string reason, Player issuer = null) Parameters Type Name Description System.String reason The kick reason. Player issuer The kick issuer. | Improve this Doc View Source Kill(DamageType, String) Kills the player. Declaration public void Kill(DamageType damageType, string cassieAnnouncement = \"\") Parameters Type Name Description DamageType damageType The DamageType the player has been killed. System.String cassieAnnouncement The cassie announcement to make upon death. | Improve this Doc View Source Kill(DamageHandlerBase) Kills the player. Declaration public void Kill(DamageHandlerBase damageHandlerBase) Parameters Type Name Description PlayerStatsSystem.DamageHandlerBase damageHandlerBase The PlayerStatsSystem.DamageHandlerBase . | Improve this Doc View Source Kill(String, String) Kills the player. Declaration public void Kill(string deathReason, string cassieAnnouncement = \"\") Parameters Type Name Description System.String deathReason The reason the player has been killed. System.String cassieAnnouncement The cassie announcement to make upon death. | Improve this Doc View Source Mute(Boolean) Persistently mutes the player. For temporary mutes, see IsMuted and IsIntercomMuted . Declaration public void Mute(bool isIntercom = false) Parameters Type Name Description System.Boolean isIntercom Whether or not this mute is for the intercom only. | Improve this Doc View Source OpenReportWindow(String) Opens the report window. Declaration public void OpenReportWindow(string text) Parameters Type Name Description System.String text The text to send. | Improve this Doc View Source PlaceBlood(Vector3) Declaration public void PlaceBlood(Vector3 direction) Parameters Type Name Description UnityEngine.Vector3 direction | Improve this Doc View Source PlaceTantrum(Boolean) Places a Tantrum (SCP-173's ability) under the player. Declaration public GameObject PlaceTantrum(bool isActive = true) Parameters Type Name Description System.Boolean isActive Whether or not the tantrum will apply the Stained effect. Returns Type Description UnityEngine.GameObject The tantrum's GameObject . Remarks If isActive is true , the tantrum is moved slightly up from its original position. Otherwise, the collision will not be detected and the slowness will not work. | Improve this Doc View Source PlayGunSound(ItemType, Byte, Byte) Declaration public void PlayGunSound(ItemType type, byte volume, byte audioClipId = 0) Parameters Type Name Description ItemType type System.Byte volume System.Byte audioClipId | Improve this Doc View Source PlayShieldBreakSound() Plays the Hume Shield break sound effect from the player. Declaration public void PlayShieldBreakSound() Remarks This will only function if the player's IsHumeShieldedRole is true . | Improve this Doc View Source RandomTeleport(IEnumerable<Type>) Teleports the player to a random object. Declaration public void RandomTeleport(IEnumerable<Type> types) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > types The list of object types to choose from. | Improve this Doc View Source RandomTeleport(Type) Teleports player to a random object of a specific type. Declaration public void RandomTeleport(Type type) Parameters Type Name Description System.Type type Object for teleport. | Improve this Doc View Source RandomTeleport<T>() Teleports player to a random object of a specific type. Declaration public void RandomTeleport<T>() Type Parameters Name Description T Object for teleport. | Improve this Doc View Source Reconnect(UInt16, Single, Boolean, RoundRestartType) Reconnects the player to the server. Can be used to redirect them to another server on a different port but same IP. Declaration public void Reconnect(ushort newPort = 0, float delay = 5F, bool reconnect = true, RoundRestartType roundRestartType = RoundRestartType.FullRestart) Parameters Type Name Description System.UInt16 newPort New port. System.Single delay Player reconnection delay. System.Boolean reconnect Whether or not player should be reconnected. RoundRestarting.RoundRestartType roundRestartType Type of round restart. | Improve this Doc View Source ReloadReservedSlots() Reloads the reserved slot list, clearing all reserved slot changes made with add/remove methods and reverting to the reserved slots files. Declaration public static void ReloadReservedSlots() | Improve this Doc View Source ReloadWeapon() Forces the player to reload their current weapon. Declaration public void ReloadWeapon() Exceptions Type Condition System.InvalidOperationException If the item is not a firearm. | Improve this Doc View Source RemoteAdminMessage(String, Boolean, String) Sends a message to the player's Remote Admin console. Declaration public void RemoteAdminMessage(string message, bool success = true, string pluginName = null) Parameters Type Name Description System.String message The message to be sent. System.Boolean success Indicates whether or not the message should be highlighted as success. System.String pluginName The plugin name. | Improve this Doc View Source RemoveHandcuffs() Removes the player's handcuffs. Declaration public void RemoveHandcuffs() | Improve this Doc View Source RemoveHeldItem(Boolean) Removes the held InventorySystem.Items.ItemBase from the player's inventory. Declaration public bool RemoveHeldItem(bool destroy = true) Parameters Type Name Description System.Boolean destroy Whether or not to destroy the item. Returns Type Description System.Boolean Returns a value indicating whether or not the InventorySystem.Items.ItemBase was removed. | Improve this Doc View Source RemoveItem(Item, Boolean) Removes an Item from the player's inventory. Declaration public bool RemoveItem(Item item, bool destroy = true) Parameters Type Name Description Item item The Item to remove. System.Boolean destroy Whether or not to destroy the item. Returns Type Description System.Boolean A value indicating whether or not the Item was removed. | Improve this Doc View Source RemoveItem(Func<Item, Boolean>, Boolean) Removes all Item 's that satisfy the condition from the player's inventory. Declaration public int RemoveItem(Func<Item, bool> predicate, bool destroy = true) Parameters Type Name Description System.Func < Item , System.Boolean > predicate The condition to satisfy. System.Boolean destroy Whether or not to destroy the items. Returns Type Description System.Int32 Count of a successfully removed Item 's. | Improve this Doc View Source ResetInventory(IEnumerable<Item>) Resets the player's inventory to the provided list of items, clearing any items it already possess. Declaration public void ResetInventory(IEnumerable<Item> newItems) Parameters Type Name Description System.Collections.Generic.IEnumerable < Item > newItems The new items that have to be added to the inventory. | Improve this Doc View Source ResetInventory(IEnumerable<ItemType>) Resets the player's inventory to the provided list of items, clearing any items it already possess. Declaration public void ResetInventory(IEnumerable<ItemType> newItems) Parameters Type Name Description System.Collections.Generic.IEnumerable < ItemType > newItems The new items that have to be added to the inventory. | Improve this Doc View Source ResetStamina() Resets the Player 's stamina. Declaration public void ResetStamina() | Improve this Doc View Source SendConsoleMessage(String, String) Sends a console message to the player's console. Declaration public void SendConsoleMessage(string message, string color) Parameters Type Name Description System.String message The message to be sent. System.String color The message color. | Improve this Doc View Source SetAmmo(AmmoType, UInt16) Sets the amount of a specified ammo type to the player's inventory. Declaration public void SetAmmo(AmmoType ammoType, ushort amount) Parameters Type Name Description AmmoType ammoType The AmmoType to be set. System.UInt16 amount The amount of ammo to be set. | Improve this Doc View Source SetCustomRoleFriendlyFire(String, RoleTypeId, Single) Tries to add PlayerRoles.RoleTypeId to FriendlyFire rules. Declaration public void SetCustomRoleFriendlyFire(string roleTypeId, RoleTypeId roleToAdd, float ffMult) Parameters Type Name Description System.String roleTypeId Role associated for CustomFF. PlayerRoles.RoleTypeId roleToAdd Role to add. System.Single ffMult Friendly fire multiplier. | Improve this Doc View Source SetCustomRoleFriendlyFire(String, KeyValuePair<RoleTypeId, Single>) Wrapper to call SetCustomRoleFriendlyFire(String, RoleTypeId, Single) . Declaration public void SetCustomRoleFriendlyFire(string roleTypeId, KeyValuePair<RoleTypeId, float> roleFf) Parameters Type Name Description System.String roleTypeId Role associated for CustomFF. System.Collections.Generic.KeyValuePair < PlayerRoles.RoleTypeId , System.Single > roleFf Role with FF to add even if it exists. | Improve this Doc View Source SetFriendlyFire(RoleTypeId, Single) Tries to add PlayerRoles.RoleTypeId to FriendlyFire rules. Declaration public void SetFriendlyFire(RoleTypeId roleToAdd, float ffMult) Parameters Type Name Description PlayerRoles.RoleTypeId roleToAdd Role to add. System.Single ffMult Friendly fire multiplier. | Improve this Doc View Source SetFriendlyFire(KeyValuePair<RoleTypeId, Single>) Wrapper to call SetFriendlyFire(RoleTypeId, Single) . Declaration public void SetFriendlyFire(KeyValuePair<RoleTypeId, float> roleFF) Parameters Type Name Description System.Collections.Generic.KeyValuePair < PlayerRoles.RoleTypeId , System.Single > roleFF Role with FF to add even if it exists. | Improve this Doc View Source SetRank(String, UserGroup) Sets the player's rank. Declaration public void SetRank(string name, UserGroup group) Parameters Type Name Description System.String name The rank name to be set. UserGroup group The group to be set. | Improve this Doc View Source ShowHint(Hint) Show a hint to the player. Declaration public void ShowHint(Hint hint) Parameters Type Name Description Hint hint The hint to be shown. | Improve this Doc View Source ShowHint(String, Single) Shows a hint to the player. Declaration public void ShowHint(string message, float duration = 3F) Parameters Type Name Description System.String message The message to be shown. System.Single duration The duration the text will be on screen. | Improve this Doc View Source ShowHitMarker(Single) Sends a HitMarker to the player. Declaration public void ShowHitMarker(float size = 1F) Parameters Type Name Description System.Single size The size of the hitmarker, ranging from 0 to Hitmarker.MaxSize ). | Improve this Doc View Source Teleport(Object) Teleports the player to the given object. Declaration public void Teleport(object obj) Parameters Type Name Description System.Object obj The object to teleport the player to. | Improve this Doc View Source Teleport(Vector3) Teleports the player to the given UnityEngine.Vector3 coordinates. Declaration public void Teleport(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position The UnityEngine.Vector3 coordinates to move the player to. | Improve this Doc View Source ThrowGrenade(ProjectileType, Boolean) Forces the player to throw a grenade. Declaration public Throwable ThrowGrenade(ProjectileType type, bool fullForce = true) Parameters Type Name Description ProjectileType type The ProjectileType to be thrown. System.Boolean fullForce Whether to throw with full or half force. Returns Type Description Throwable The Throwable item that was spawned. | Improve this Doc View Source ThrowItem(Throwable, Boolean) Forcefully throws a throwable item. Declaration public void ThrowItem(Throwable throwable, bool fullForce = true) Parameters Type Name Description Throwable throwable The Throwable to be thrown. System.Boolean fullForce Whether to throw with full or half force. | Improve this Doc View Source ToString() Converts the player in a human-readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Player-related data. Overrides System.Object.ToString() | Improve this Doc View Source TryAddCandy(CandyKindID) Gives the player a specific candy. Will give the player a bag if they do not already have one. Declaration public bool TryAddCandy(CandyKindID candyType) Parameters Type Name Description InventorySystem.Items.Usables.Scp330.CandyKindID candyType The InventorySystem.Items.Usables.Scp330.CandyKindID to give. Returns Type Description System.Boolean true if a candy was given. | Improve this Doc View Source TryAddCustomRoleFriendlyFire(Dictionary<String, Dictionary<RoleTypeId, Single>>) Adds the Custom role to the CustomRoleFriendlyFireMultiplier if they did not already exist. Declaration public void TryAddCustomRoleFriendlyFire(Dictionary<string, Dictionary<RoleTypeId, float>> customRoleFriendlyFireMultiplier) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.Collections.Generic.Dictionary < PlayerRoles.RoleTypeId , System.Single >> customRoleFriendlyFireMultiplier Custom role with FF role rules. | Improve this Doc View Source TryAddCustomRoleFriendlyFire(String, RoleTypeId, Single) Tries to add PlayerRoles.RoleTypeId to FriendlyFire rules for CustomRole. Declaration public bool TryAddCustomRoleFriendlyFire(string roleTypeId, RoleTypeId roleToAdd, float ffMult) Parameters Type Name Description System.String roleTypeId Role associated for CustomFF. PlayerRoles.RoleTypeId roleToAdd Role to add. System.Single ffMult Friendly fire multiplier. Returns Type Description System.Boolean Whether or not the item was able to be added. | Improve this Doc View Source TryAddCustomRoleFriendlyFire(String, Dictionary<RoleTypeId, Single>, Boolean) Tries to add PlayerRoles.RoleTypeId to FriendlyFire rules. Declaration public bool TryAddCustomRoleFriendlyFire(string customRoleName, Dictionary<RoleTypeId, float> ffRules, bool overwrite = false) Parameters Type Name Description System.String customRoleName Role associated for CustomFF. System.Collections.Generic.Dictionary < PlayerRoles.RoleTypeId , System.Single > ffRules Roles to add with friendly fire values. System.Boolean overwrite Whether to overwrite current values if they exist - does NOT delete previous entries if they are not in provided rules. Returns Type Description System.Boolean Whether or not the item was able to be added. | Improve this Doc View Source TryAddCustomRoleFriendlyFire(String, KeyValuePair<RoleTypeId, Single>) Tries to add PlayerRoles.RoleTypeId to FriendlyFire rules for CustomRole. Declaration public bool TryAddCustomRoleFriendlyFire(string roleTypeId, KeyValuePair<RoleTypeId, float> roleFf) Parameters Type Name Description System.String roleTypeId Role associated for CustomFF. System.Collections.Generic.KeyValuePair < PlayerRoles.RoleTypeId , System.Single > roleFf Role to add and FF multiplier. Returns Type Description System.Boolean Whether or not the item was able to be added. | Improve this Doc View Source TryAddFriendlyFire(RoleTypeId, Single) Tries to add PlayerRoles.RoleTypeId to FriendlyFire rules. Declaration public bool TryAddFriendlyFire(RoleTypeId roleToAdd, float ffMult) Parameters Type Name Description PlayerRoles.RoleTypeId roleToAdd Role to add. System.Single ffMult Friendly fire multiplier. Returns Type Description System.Boolean Whether or not the item was able to be added. | Improve this Doc View Source TryAddFriendlyFire(Dictionary<RoleTypeId, Single>, Boolean) Tries to add PlayerRoles.RoleTypeId to FriendlyFire rules. Declaration public bool TryAddFriendlyFire(Dictionary<RoleTypeId, float> ffRules, bool overwrite = false) Parameters Type Name Description System.Collections.Generic.Dictionary < PlayerRoles.RoleTypeId , System.Single > ffRules Roles to add with friendly fire values. System.Boolean overwrite Whether or not to overwrite current values if they exist. Returns Type Description System.Boolean Whether or not the item was able to be added. | Improve this Doc View Source TryAddFriendlyFire(KeyValuePair<RoleTypeId, Single>) Tries to add PlayerRoles.RoleTypeId to FriendlyFire rules. Declaration public bool TryAddFriendlyFire(KeyValuePair<RoleTypeId, float> pairedRoleFF) Parameters Type Name Description System.Collections.Generic.KeyValuePair < PlayerRoles.RoleTypeId , System.Single > pairedRoleFF Role FF multiplier to add. Returns Type Description System.Boolean Whether or not the item was able to be added. | Improve this Doc View Source TryGet(CommandSender, out Player) Try-get a player given a CommandSender . Declaration public static bool TryGet(CommandSender sender, out Player player) Parameters Type Name Description CommandSender sender The CommandSender . Player player The player that matches the given CommandSender , or null if no player is found. Returns Type Description System.Boolean A boolean indicating whether or not a player was found. | Improve this Doc View Source TryGet(ICommandSender, out Player) Try-get a player given a CommandSystem.ICommandSender . Declaration public static bool TryGet(ICommandSender sender, out Player player) Parameters Type Name Description CommandSystem.ICommandSender sender The CommandSystem.ICommandSender . Player player The player that matches the given CommandSystem.ICommandSender , or null if no player is found. Returns Type Description System.Boolean A boolean indicating whether or not a player was found. | Improve this Doc View Source TryGet(NetworkConnection, out Player) Try-get a player given a Mirror.NetworkConnection . Declaration public static bool TryGet(NetworkConnection conn, out Player player) Parameters Type Name Description Mirror.NetworkConnection conn The Mirror.NetworkConnection . Player player The player that matches the given Mirror.NetworkConnection , or null if no player is found. Returns Type Description System.Boolean A boolean indicating whether or not a player was found. | Improve this Doc View Source TryGet(NetworkIdentity, out Player) Try-get a player given a Mirror.NetworkIdentity . Declaration public static bool TryGet(NetworkIdentity netIdentity, out Player player) Parameters Type Name Description Mirror.NetworkIdentity netIdentity The Mirror.NetworkIdentity . Player player The player that matches the given Mirror.NetworkIdentity , or null if no player is found. Returns Type Description System.Boolean A boolean indicating whether or not a player was found. | Improve this Doc View Source TryGet(Player, out Player) Try-get the Player from NwPluginAPI class. Declaration public static bool TryGet(Player apiPlayer, out Player player) Parameters Type Name Description PluginAPI.Core.Player apiPlayer The PluginAPI.Core.Player class. Player player The player found or null if not found. Returns Type Description System.Boolean A boolean indicating whether or not a player was found. | Improve this Doc View Source TryGet(ReferenceHub, out Player) Try-get a player given a ReferenceHub . Declaration public static bool TryGet(ReferenceHub referenceHub, out Player player) Parameters Type Name Description ReferenceHub referenceHub The ReferenceHub . Player player The player that matches the given ReferenceHub , or null if no player is found. Returns Type Description System.Boolean A boolean indicating whether or not a player was found. | Improve this Doc View Source TryGet(Int32, out Player) Try-get a player given an ID. Declaration public static bool TryGet(int id, out Player player) Parameters Type Name Description System.Int32 id The user ID. Player player The player that matches the given ID, or null if no player is found. Returns Type Description System.Boolean A boolean indicating whether or not a player was found. | Improve this Doc View Source TryGet(String, out Player) Try-get a player by identifier. Declaration public static bool TryGet(string args, out Player player) Parameters Type Name Description System.String args The player's nickname, ID, steamID64 or Discord ID. Player player The player found or null if not found. Returns Type Description System.Boolean A boolean indicating whether or not a player was found. | Improve this Doc View Source TryGet(UInt32, out Player) Try-get a player given a network ID. Declaration public static bool TryGet(uint netId, out Player player) Parameters Type Name Description System.UInt32 netId The network ID. Player player The player that matches the given net ID, or null if no player is found. Returns Type Description System.Boolean A boolean indicating whether or not a player was found. | Improve this Doc View Source TryGet(GameObject, out Player) Try-get a player given a UnityEngine.GameObject . Declaration public static bool TryGet(GameObject gameObject, out Player player) Parameters Type Name Description UnityEngine.GameObject gameObject The UnityEngine.GameObject . Player player The player that matches the given UnityEngine.GameObject , or null if no player is found. Returns Type Description System.Boolean A boolean indicating whether or not a player was found. | Improve this Doc View Source TryGetComponent(Type, out EActor) Declaration public bool TryGetComponent(Type type, out EActor component) Parameters Type Name Description System.Type type EActor component Returns Type Description System.Boolean | Improve this Doc View Source TryGetComponent<T>(out T) Declaration public bool TryGetComponent<T>(out T component) where T : EActor Parameters Type Name Description T component Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryGetComponent<T>(Type, out T) Declaration public bool TryGetComponent<T>(Type type, out T component) where T : EActor Parameters Type Name Description System.Type type T component Returns Type Description System.Boolean Type Parameters Name Description T | Improve this Doc View Source TryGetEffect(EffectType, out StatusEffectBase) Tries to get an instance of CustomPlayerEffects.StatusEffectBase by EffectType . Declaration public bool TryGetEffect(EffectType type, out StatusEffectBase statusEffect) Parameters Type Name Description EffectType type The EffectType . CustomPlayerEffects.StatusEffectBase statusEffect The CustomPlayerEffects.StatusEffectBase . Returns Type Description System.Boolean A bool indicating whether or not the statusEffect was successfully gotten. | Improve this Doc View Source TryGetEffect<T>(out T) Tries to get an instance of CustomPlayerEffects.StatusEffectBase by EffectType . Declaration public bool TryGetEffect<T>(out T statusEffect) where T : StatusEffectBase Parameters Type Name Description T statusEffect The CustomPlayerEffects.StatusEffectBase . Returns Type Description System.Boolean A bool indicating whether or not the statusEffect was successfully gotten. Type Parameters Name Description T The CustomPlayerEffects.StatusEffectBase to get. | Improve this Doc View Source TryGetItem(UInt16, out Item) Tries to get an item from a player's inventory. Declaration public bool TryGetItem(ushort serial, out Item item) Parameters Type Name Description System.UInt16 serial The unique identifier of the item. Item item The Item found. null if it doesn't exist. Returns Type Description System.Boolean true if the item is found, false otherwise. | Improve this Doc View Source TryGetSessionVariable<T>(String, out T) Safely gets an System.Object from SessionVariables , then casts it to T . Declaration public bool TryGetSessionVariable<T>(string key, out T result) Parameters Type Name Description System.String key The key of the object to get. T result When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter is used. Returns Type Description System.Boolean true if the SessionVariables contains an element with the specified key; otherwise, false . Type Parameters Name Description T The returned object type. | Improve this Doc View Source TryRemoveCustomeRoleFriendlyFire(String) Tries to remove PlayerRoles.RoleTypeId from FriendlyFire rules. Declaration public bool TryRemoveCustomeRoleFriendlyFire(string role) Parameters Type Name Description System.String role Role to add. Returns Type Description System.Boolean Whether or not the item was able to be added. | Improve this Doc View Source TryRemoveFriendlyFire(RoleTypeId) Tries to remove PlayerRoles.RoleTypeId from FriendlyFire rules. Declaration public bool TryRemoveFriendlyFire(RoleTypeId role) Parameters Type Name Description PlayerRoles.RoleTypeId role Role to add. Returns Type Description System.Boolean Whether or not the item was able to be added. | Improve this Doc View Source TrySetCustomRoleFriendlyFire(Dictionary<String, Dictionary<RoleTypeId, Single>>) Sets the CustomRoleFriendlyFireMultiplier . Declaration public void TrySetCustomRoleFriendlyFire(Dictionary<string, Dictionary<RoleTypeId, float>> customRoleFriendlyFireMultiplier) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , System.Collections.Generic.Dictionary < PlayerRoles.RoleTypeId , System.Single >> customRoleFriendlyFireMultiplier New rules for CustomeRoleFriendlyFireMultiplier to set to. | Improve this Doc View Source TrySetCustomRoleFriendlyFire(String, Dictionary<RoleTypeId, Single>) Sets the CustomRoleFriendlyFireMultiplier . Declaration public void TrySetCustomRoleFriendlyFire(string roleTypeId, Dictionary<RoleTypeId, float> customRoleFriendlyFireMultiplier) Parameters Type Name Description System.String roleTypeId Role to associate FF rules to. System.Collections.Generic.Dictionary < PlayerRoles.RoleTypeId , System.Single > customRoleFriendlyFireMultiplier New rules for CustomeRoleFriendlyFireMultiplier to set to. | Improve this Doc View Source UnMute(Boolean) Revokes a persistent mute. For temporary mutes, see IsMuted and IsIntercomMuted . Declaration public void UnMute(bool isIntercom = false) Parameters Type Name Description System.Boolean isIntercom Whether or not this un-mute is for the intercom only. | Improve this Doc View Source UseItem(Item) Forces the player to use an item. Declaration public void UseItem(Item item) Parameters Type Name Description Item item The item to be used. Exceptions Type Condition System.ArgumentException The provided item is not a usable item. | Improve this Doc View Source UseItem(ItemType) Forces the player to use an item. Declaration public void UseItem(ItemType usableItem) Parameters Type Name Description ItemType usableItem The ItemType to be used. | Improve this Doc View Source Vaporize(Player, String) Kills the player and vaporizes the body. Declaration public void Vaporize(Player attacker = null, string cassieAnnouncement = \"\") Parameters Type Name Description Player attacker The Player attacking player. System.String cassieAnnouncement The cassie announcement to make upon death. Operators | Improve this Doc View Source Implicit(Player to Player) Converts NwPluginAPI player to EXILED player. Declaration public static implicit operator Player(Player player) Parameters Type Name Description PluginAPI.Core.Player player The NwPluginAPI player. Returns Type Description Player EXILED player. Implements IEntity IPosition Extension Methods Permissions.CheckPermission(Player, String) Permissions.CheckPermission(Player, PlayerPermissions[]) Extensions.ResetInventory(Player, IEnumerable<String>, Boolean) Extensions.GetCustomRoles(Player) MirrorExtensions.PlayBeepSound(Player) MirrorExtensions.SetPlayerInfoForTargetOnly(Player, Player, String) MirrorExtensions.PlayGunSound(Player, Vector3, ItemType, Byte, Byte) MirrorExtensions.SetName(Player, Player, String) MirrorExtensions.ChangeAppearance(Player, RoleTypeId) MirrorExtensions.PlayCassieAnnouncement(Player, String, Boolean, Boolean, Boolean) MirrorExtensions.MessageTranslated(Player, String, String, Boolean, Boolean, Boolean) MirrorExtensions.SendFakeSyncVar(Player, NetworkIdentity, Type, String, Object) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Plugin-1.html": {
    "href": "api/Exiled.API.Features.Plugin-1.html",
    "title": "Class Plugin<TConfig> | EXILED Docs",
    "keywords": "Class Plugin<TConfig> Expose how a plugin has to be made. Inheritance System.Object Plugin<TConfig> Plugin<TConfig, TTranslation> CreditTags CustomItems CustomRoles Events Permissions Implements IPlugin <TConfig> System.IComparable < IPlugin < IConfig >> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public abstract class Plugin<TConfig> : IPlugin<TConfig>, IComparable<IPlugin<IConfig>> where TConfig : IConfig, new() Type Parameters Name Description TConfig The config type. Constructors | Improve this Doc View Source Plugin() Initializes a new instance of the Plugin<TConfig> class. Declaration public Plugin() Properties | Improve this Doc View Source Assembly Declaration public Assembly Assembly { get; protected set; } Property Value Type Description System.Reflection.Assembly | Improve this Doc View Source Author Declaration public virtual string Author { get; } Property Value Type Description System.String | Improve this Doc View Source Commands Declaration public Dictionary<Type, Dictionary<Type, ICommand>> Commands { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.Dictionary < System.Type , CommandSystem.ICommand >> | Improve this Doc View Source Config Declaration public TConfig Config { get; } Property Value Type Description TConfig | Improve this Doc View Source ConfigPath Declaration public string ConfigPath { get; } Property Value Type Description System.String | Improve this Doc View Source IgnoreRequiredVersionCheck Declaration public virtual bool IgnoreRequiredVersionCheck { get; } Property Value Type Description System.Boolean | Improve this Doc View Source InternalTranslation Declaration public ITranslation InternalTranslation { get; protected set; } Property Value Type Description ITranslation | Improve this Doc View Source Name Declaration public virtual string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Prefix Declaration public virtual string Prefix { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Declaration public virtual PluginPriority Priority { get; } Property Value Type Description PluginPriority | Improve this Doc View Source RequiredExiledVersion Declaration public virtual Version RequiredExiledVersion { get; } Property Value Type Description System.Version | Improve this Doc View Source TranslationPath Declaration public string TranslationPath { get; } Property Value Type Description System.String | Improve this Doc View Source Version Declaration public virtual Version Version { get; } Property Value Type Description System.Version Methods | Improve this Doc View Source CompareTo(IPlugin<IConfig>) Declaration public int CompareTo(IPlugin<IConfig> other) Parameters Type Name Description IPlugin < IConfig > other Returns Type Description System.Int32 | Improve this Doc View Source OnDisabled() Declaration public virtual void OnDisabled() | Improve this Doc View Source OnEnabled() Declaration public virtual void OnEnabled() | Improve this Doc View Source OnRegisteringCommands() Declaration public virtual void OnRegisteringCommands() | Improve this Doc View Source OnReloaded() Declaration public virtual void OnReloaded() | Improve this Doc View Source OnUnregisteringCommands() Declaration public virtual void OnUnregisteringCommands() Implements IPlugin<TConfig> System.IComparable<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Plugin-2.html": {
    "href": "api/Exiled.API.Features.Plugin-2.html",
    "title": "Class Plugin<TConfig, TTranslation> | EXILED Docs",
    "keywords": "Class Plugin<TConfig, TTranslation> Expose how a plugin has to be made. Inheritance System.Object Plugin <TConfig> Plugin<TConfig, TTranslation> Implements IPlugin <TConfig> System.IComparable < IPlugin < IConfig >> Inherited Members Plugin<TConfig>.Assembly Plugin<TConfig>.Name Plugin<TConfig>.Prefix Plugin<TConfig>.Author Plugin<TConfig>.Priority Plugin<TConfig>.Version Plugin<TConfig>.RequiredExiledVersion Plugin<TConfig>.IgnoreRequiredVersionCheck Plugin<TConfig>.Commands Plugin<TConfig>.Config Plugin<TConfig>.InternalTranslation Plugin<TConfig>.ConfigPath Plugin<TConfig>.TranslationPath Plugin<TConfig>.OnEnabled() Plugin<TConfig>.OnDisabled() Plugin<TConfig>.OnReloaded() Plugin<TConfig>.OnRegisteringCommands() Plugin<TConfig>.OnUnregisteringCommands() Plugin<TConfig>.CompareTo(IPlugin<IConfig>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public abstract class Plugin<TConfig, TTranslation> : Plugin<TConfig>, IPlugin<TConfig>, IComparable<IPlugin<IConfig>> where TConfig : IConfig, new() where TTranslation : ITranslation, new() Type Parameters Name Description TConfig The config type. TTranslation The translation type. Constructors | Improve this Doc View Source Plugin() Initializes a new instance of the Plugin<TConfig, TTranslation> class. Declaration public Plugin() Properties | Improve this Doc View Source Translation Gets the plugin translations. Declaration public TTranslation Translation { get; } Property Value Type Description TTranslation Implements IPlugin<TConfig> System.IComparable<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pools.DictionaryPool-2.html": {
    "href": "api/Exiled.API.Features.Pools.DictionaryPool-2.html",
    "title": "Class DictionaryPool<TKey, TValue> | EXILED Docs",
    "keywords": "Class DictionaryPool<TKey, TValue> Defines a system used to store and retrieve System.Collections.Generic.Dictionary<TKey, TValue> objects. Inheritance System.Object DictionaryPool<TKey, TValue> Implements IPool < System.Collections.Generic.Dictionary <TKey, TValue>> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pools Assembly : Exiled.API.dll Syntax public class DictionaryPool<TKey, TValue> : IPool<Dictionary<TKey, TValue>> Type Parameters Name Description TKey The type of the key in the dictionary. TValue The type of the value in the dictionary. Properties | Improve this Doc View Source Pool Gets a DictionaryPool<TKey, TValue> that stores dictionaries. Declaration public static DictionaryPool<TKey, TValue> Pool { get; } Property Value Type Description DictionaryPool <TKey, TValue> Methods | Improve this Doc View Source Get() Rent a System.Collections.Generic.Dictionary<TKey, TValue> temporarily. Declaration public Dictionary<TKey, TValue> Get() Returns Type Description System.Collections.Generic.Dictionary <TKey, TValue> The System.Collections.Generic.Dictionary<TKey, TValue> . | Improve this Doc View Source Get(IEnumerable<KeyValuePair<TKey, TValue>>) Rent a System.Collections.Generic.Dictionary<TKey, TValue> temporarily. Fills it with the provided System.Collections.Generic.IEnumerable<T> of System.Collections.Generic.KeyValuePair<TKey, TValue> . Declaration public Dictionary<TKey, TValue> Get(IEnumerable<KeyValuePair<TKey, TValue>> pairs) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair <TKey, TValue>> pairs The items to fill the dictionary with. Returns Type Description System.Collections.Generic.Dictionary <TKey, TValue> The System.Collections.Generic.Dictionary<TKey, TValue> . | Improve this Doc View Source Return(Dictionary<TKey, TValue>) Returns a finished System.Collections.Generic.Dictionary<TKey, TValue> to the pool, clearing all of its contents. Declaration public void Return(Dictionary<TKey, TValue> obj) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> obj The System.Collections.Generic.Dictionary<TKey, TValue> to return. | Improve this Doc View Source ToArrayReturn(Dictionary<TKey, TValue>) Returns the System.Collections.Generic.Dictionary<TKey, TValue> to the pool and returns its contents as an array. Declaration public KeyValuePair<TKey, TValue>[] ToArrayReturn(Dictionary<TKey, TValue> obj) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> obj The System.Collections.Generic.Dictionary<TKey, TValue> to return. Returns Type Description System.Collections.Generic.KeyValuePair <TKey, TValue>[] The contents of the returned dictionary as an array. Implements IPool<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object) See Also ListPool <T> HashSetPool <T>"
  },
  "api/Exiled.API.Features.Pools.HashSetPool-1.html": {
    "href": "api/Exiled.API.Features.Pools.HashSetPool-1.html",
    "title": "Class HashSetPool<T> | EXILED Docs",
    "keywords": "Class HashSetPool<T> Defines a system used to store and retrieve System.Collections.Generic.HashSet<T> objects. Inheritance System.Object HashSetPool<T> Implements IPool < System.Collections.Generic.HashSet <T>> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pools Assembly : Exiled.API.dll Syntax public class HashSetPool<T> : IPool<HashSet<T>> Type Parameters Name Description T The type of the objects in the hash set. Properties | Improve this Doc View Source Pool Gets a HashSetPool<T> that stores hash sets. Declaration public static HashSetPool<T> Pool { get; } Property Value Type Description HashSetPool <T> Methods | Improve this Doc View Source Get() Declaration public HashSet<T> Get() Returns Type Description System.Collections.Generic.HashSet <T> | Improve this Doc View Source Get(IEnumerable<T>) Retrieves a stored object of type System.Collections.Generic.HashSet<T> , or creates it if it does not exist. The hashset will be filled with all the provided items . Declaration public HashSet<T> Get(IEnumerable<T> items) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> items The items to fill the hashset with. Returns Type Description System.Collections.Generic.HashSet <T> The stored object, or a new object, of type System.Collections.Generic.HashSet<T> . | Improve this Doc View Source Return(HashSet<T>) Declaration public void Return(HashSet<T> obj) Parameters Type Name Description System.Collections.Generic.HashSet <T> obj | Improve this Doc View Source ToArrayReturn(HashSet<T>) Returns the System.Collections.Generic.HashSet<T> to the pool and returns its contents as an array. Declaration public T[] ToArrayReturn(HashSet<T> obj) Parameters Type Name Description System.Collections.Generic.HashSet <T> obj The System.Collections.Generic.HashSet<T> to return. Returns Type Description T[] The contents of the returned hashset as an array. Implements IPool<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object) See Also DictionaryPool <TKey, TValue> ListPool <T>"
  },
  "api/Exiled.API.Features.Pools.html": {
    "href": "api/Exiled.API.Features.Pools.html",
    "title": "Namespace Exiled.API.Features.Pools | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Pools Classes DictionaryPool<TKey, TValue> Defines a system used to store and retrieve System.Collections.Generic.Dictionary<TKey, TValue> objects. HashSetPool<T> Defines a system used to store and retrieve System.Collections.Generic.HashSet<T> objects. ListPool<T> Defines a system used to store and retrieve System.Collections.Generic.List<T> objects. QueuePool<T> Defines a system used to store and retrieve System.Collections.Generic.Queue<T> objects. StringBuilderPool Defines a system used to store and retrieve System.Text.StringBuilder objects. Interfaces IPool<T> Defines the contract for a class that stores and retrieves commonly used objects."
  },
  "api/Exiled.API.Features.Pools.IPool-1.html": {
    "href": "api/Exiled.API.Features.Pools.IPool-1.html",
    "title": "Interface IPool<T> | EXILED Docs",
    "keywords": "Interface IPool<T> Defines the contract for a class that stores and retrieves commonly used objects. Namespace : Exiled.API.Features.Pools Assembly : Exiled.API.dll Syntax public interface IPool<T> Type Parameters Name Description T The type that is stored in the pool. Methods | Improve this Doc View Source Get() Retrieves a stored object of type T , or creates it if it does not exist. Declaration T Get() Returns Type Description T The stored object, or a new object, of type T . | Improve this Doc View Source Return(T) Returns the object to the pool. Declaration void Return(T obj) Parameters Type Name Description T obj The object to return, of type T . Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Pools.ListPool-1.html": {
    "href": "api/Exiled.API.Features.Pools.ListPool-1.html",
    "title": "Class ListPool<T> | EXILED Docs",
    "keywords": "Class ListPool<T> Defines a system used to store and retrieve System.Collections.Generic.List<T> objects. Inheritance System.Object ListPool<T> Implements IPool < System.Collections.Generic.List <T>> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pools Assembly : Exiled.API.dll Syntax public class ListPool<T> : IPool<List<T>> Type Parameters Name Description T The type of the objects in the list. Properties | Improve this Doc View Source Pool Gets a ListPool<T> that stores lists. Declaration public static ListPool<T> Pool { get; } Property Value Type Description ListPool <T> Methods | Improve this Doc View Source Get() Declaration public List<T> Get() Returns Type Description System.Collections.Generic.List <T> | Improve this Doc View Source Get(IEnumerable<T>) Retrieves a stored object of type System.Collections.Generic.List<T> , or creates it if it does not exist. The list will be filled with all the provided items . Declaration public List<T> Get(IEnumerable<T> items) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> items The items to fill the list with. Returns Type Description System.Collections.Generic.List <T> The stored object, or a new object, of type System.Collections.Generic.List<T> . | Improve this Doc View Source Get(Int32) Retrieves a stored object of type System.Collections.Generic.List<T> , or creates it if it does not exist. The capacity of the list will be equal to or greater than capacity . Declaration public List<T> Get(int capacity) Parameters Type Name Description System.Int32 capacity The capacity of content in the System.Collections.Generic.List<T> . Returns Type Description System.Collections.Generic.List <T> The stored object, or a new object, of type System.Collections.Generic.List<T> . | Improve this Doc View Source Return(List<T>) Declaration public void Return(List<T> obj) Parameters Type Name Description System.Collections.Generic.List <T> obj | Improve this Doc View Source ToArrayReturn(List<T>) Returns the System.Collections.Generic.List<T> to the pool and returns its contents as an array. Declaration public T[] ToArrayReturn(List<T> obj) Parameters Type Name Description System.Collections.Generic.List <T> obj The System.Collections.Generic.List<T> to return. Returns Type Description T[] The contents of the returned list as an array. Implements IPool<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object) See Also DictionaryPool <TKey, TValue> HashSetPool <T>"
  },
  "api/Exiled.API.Features.Pools.QueuePool-1.html": {
    "href": "api/Exiled.API.Features.Pools.QueuePool-1.html",
    "title": "Class QueuePool<T> | EXILED Docs",
    "keywords": "Class QueuePool<T> Defines a system used to store and retrieve System.Collections.Generic.Queue<T> objects. Inheritance System.Object QueuePool<T> Implements IPool < System.Collections.Generic.Queue <T>> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pools Assembly : Exiled.API.dll Syntax public class QueuePool<T> : IPool<Queue<T>> Type Parameters Name Description T The type of the objects in the list. Properties | Improve this Doc View Source Pool Gets a QueuePool<T> that stores lists. Declaration public static QueuePool<T> Pool { get; } Property Value Type Description QueuePool <T> Methods | Improve this Doc View Source Get() Declaration public Queue<T> Get() Returns Type Description System.Collections.Generic.Queue <T> | Improve this Doc View Source Get(IEnumerable<T>) Retrieves a stored object of type System.Collections.Generic.List<T> , or creates it if it does not exist. The list will be filled with all the provided items . Declaration public Queue<T> Get(IEnumerable<T> items) Parameters Type Name Description System.Collections.Generic.IEnumerable <T> items The items to fill the list with. Returns Type Description System.Collections.Generic.Queue <T> The stored object, or a new object, of type System.Collections.Generic.List<T> . | Improve this Doc View Source Return(Queue<T>) Declaration public void Return(Queue<T> obj) Parameters Type Name Description System.Collections.Generic.Queue <T> obj | Improve this Doc View Source ToArrayReturn(Queue<T>) Returns the System.Collections.Generic.Queue<T> to the pool and returns its contents as an array. Declaration public T[] ToArrayReturn(Queue<T> obj) Parameters Type Name Description System.Collections.Generic.Queue <T> obj The System.Collections.Generic.Queue<T> to return. Returns Type Description T[] The contents of the returned queue as an array. Implements IPool<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object) See Also DictionaryPool <TKey, TValue> HashSetPool <T>"
  },
  "api/Exiled.API.Features.Pools.StringBuilderPool.html": {
    "href": "api/Exiled.API.Features.Pools.StringBuilderPool.html",
    "title": "Class StringBuilderPool | EXILED Docs",
    "keywords": "Class StringBuilderPool Defines a system used to store and retrieve System.Text.StringBuilder objects. Inheritance System.Object StringBuilderPool Implements IPool < System.Text.StringBuilder > Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Pools Assembly : Exiled.API.dll Syntax public class StringBuilderPool : IPool<StringBuilder> Properties | Improve this Doc View Source Pool Gets a StringBuilderPool that stores System.Text.StringBuilder . Declaration public static StringBuilderPool Pool { get; } Property Value Type Description StringBuilderPool Methods | Improve this Doc View Source Get() Declaration public StringBuilder Get() Returns Type Description System.Text.StringBuilder | Improve this Doc View Source Get(Int32) Retrieves a stored object of type System.Text.StringBuilder , or creates it if it does not exist. The capacity of the StringBuilder will be equal to or greater than capacity . Declaration public StringBuilder Get(int capacity) Parameters Type Name Description System.Int32 capacity The capacity of content in the System.Text.StringBuilder . Returns Type Description System.Text.StringBuilder The stored object, or a new object, of type System.Text.StringBuilder . | Improve this Doc View Source Return(StringBuilder) Declaration public void Return(StringBuilder obj) Parameters Type Name Description System.Text.StringBuilder obj | Improve this Doc View Source ToStringReturn(StringBuilder) Returns the contents of the System.Text.StringBuilder and returns it to the pool. Declaration public string ToStringReturn(StringBuilder obj) Parameters Type Name Description System.Text.StringBuilder obj The System.Text.StringBuilder to return. Returns Type Description System.String The value of the System.Text.StringBuilder . Implements IPool<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Ragdoll.html": {
    "href": "api/Exiled.API.Features.Ragdoll.html",
    "title": "Class Ragdoll | EXILED Docs",
    "keywords": "Class Ragdoll A set of tools to handle the ragdolls more easily. Inheritance System.Object Ragdoll Implements IWrapper < BasicRagdoll > IWorldSpace IPosition IRotation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Ragdoll : IWrapper<BasicRagdoll>, IWorldSpace, IPosition, IRotation Properties | Improve this Doc View Source AllowCleanUp Gets a value indicating whether or not the clean up event can be executed. Declaration public bool AllowCleanUp { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Base Gets the BasicRagdoll instance of the ragdoll. Declaration public BasicRagdoll Base { get; } Property Value Type Description BasicRagdoll | Improve this Doc View Source CanBeCleanedUp Gets or sets a value indicating whether or not the ragdoll can be cleaned up. Declaration public bool CanBeCleanedUp { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CleanUpTime Gets or sets the BasicRagdoll s clean up time. Declaration public static int CleanUpTime { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CreationTime Gets the time that the ragdoll was spawned. Declaration public DateTime CreationTime { get; } Property Value Type Description System.DateTime | Improve this Doc View Source DamageHandler Gets the ragdoll's PlayerStatsSystem.DamageHandlerBase . Declaration public DamageHandlerBase DamageHandler { get; } Property Value Type Description PlayerStatsSystem.DamageHandlerBase | Improve this Doc View Source DeathAnimations Gets all ragdoll's DeathAnimations.DeathAnimation []. Declaration public DeathAnimation[] DeathAnimations { get; } Property Value Type Description DeathAnimations.DeathAnimation [] | Improve this Doc View Source DeathReason Gets the ragdoll's death reason. Declaration public string DeathReason { get; } Property Value Type Description System.String | Improve this Doc View Source GameObject Gets the UnityEngine.GameObject of the ragdoll. Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source IsCleanedUp Gets a value indicating whether or not the ragdoll has been already cleaned up. Declaration public bool IsCleanedUp { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsConsumed Gets or sets a value indicating whether or not this ragdoll has been consumed by an SCP-049-2. Declaration public bool IsConsumed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsExpired Gets a value indicating whether or not the ragdoll has expired and SCP-049 is unable to revive it. Declaration public bool IsExpired { get; } Property Value Type Description System.Boolean | Improve this Doc View Source List Gets a System.Collections.Generic.IEnumerable<T> of Ragdoll which contains all the Ragdoll instances. Declaration public static IEnumerable<Ragdoll> List { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Ragdoll > | Improve this Doc View Source Name Gets the ragdoll's name. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source NetworkInfo Gets or sets the ragdoll's RagdollData . Declaration public RagdollData NetworkInfo { get; set; } Property Value Type Description RagdollData | Improve this Doc View Source Owner Gets the owner Player . Can be null if the ragdoll does not have an owner. Declaration public Player Owner { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the ragdoll's position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Role Gets the PlayerRoles.RoleTypeId of the ragdoll. Declaration public RoleTypeId Role { get; } Property Value Type Description PlayerRoles.RoleTypeId | Improve this Doc View Source Room Gets the Room the ragdoll is located in. Declaration public Room Room { get; } Property Value Type Description Room | Improve this Doc View Source Rotation Gets or sets the ragdoll's rotation. Declaration public Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Scale Gets or sets the ragdoll's scale. Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source SpecialRigidbodies Gets the ragdoll's UnityEngine.Rigidbody []. Declaration public Rigidbody[] SpecialRigidbodies { get; } Property Value Type Description UnityEngine.Rigidbody [] | Improve this Doc View Source Transform Gets the UnityEngine.Transform of the ragdoll. Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source Zone Gets the ZoneType the ragdoll is in. Declaration public ZoneType Zone { get; } Property Value Type Description ZoneType Methods | Improve this Doc View Source Create(RoleTypeId, String, DamageHandlerBase, Player) Creates a new ragdoll. Declaration public static Ragdoll Create(RoleTypeId roleType, string name, DamageHandlerBase damageHandler, Player owner = null) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId of the ragdoll. System.String name The name of the ragdoll. PlayerStatsSystem.DamageHandlerBase damageHandler The damage handler responsible for the ragdoll's death. Player owner The optional owner of the ragdoll. Returns Type Description Ragdoll The ragdoll. | Improve this Doc View Source Create(RoleTypeId, String, String, Player) Creates a new ragdoll. Declaration public static Ragdoll Create(RoleTypeId roleType, string name, string deathReason, Player owner = null) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId of the ragdoll. System.String name The name of the ragdoll. System.String deathReason The reason the ragdoll died. Player owner The optional owner of the ragdoll. Returns Type Description Ragdoll The ragdoll. | Improve this Doc View Source Create(RagdollData) Creates a new ragdoll. Declaration public static Ragdoll Create(RagdollData networkInfo) Parameters Type Name Description RagdollData networkInfo The data associated with the ragdoll. Returns Type Description Ragdoll The ragdoll. Exceptions Type Condition System.ArgumentException Provided RoleType is not a valid ragdoll role (Spectator, Scp079, etc). System.InvalidOperationException Unable to create a ragdoll. | Improve this Doc View Source CreateAndSpawn(RoleTypeId, String, DamageHandlerBase, Vector3, Quaternion, Player) Creates and spawns a new ragdoll. Declaration public static Ragdoll CreateAndSpawn(RoleTypeId roleType, string name, DamageHandlerBase damageHandler, Vector3 position, Quaternion rotation, Player owner = null) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId of the ragdoll. System.String name The name of the ragdoll. PlayerStatsSystem.DamageHandlerBase damageHandler The damage handler responsible for the ragdoll's death. UnityEngine.Vector3 position The position of the ragdoll. UnityEngine.Quaternion rotation The rotation of the ragdoll. Player owner The optional owner of the ragdoll. Returns Type Description Ragdoll The ragdoll. | Improve this Doc View Source CreateAndSpawn(RoleTypeId, String, String, Vector3, Quaternion, Player) Creates and spawns a new ragdoll. Declaration public static Ragdoll CreateAndSpawn(RoleTypeId roleType, string name, string deathReason, Vector3 position, Quaternion rotation, Player owner = null) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId of the ragdoll. System.String name The name of the ragdoll. System.String deathReason The reason the ragdoll died. UnityEngine.Vector3 position The position of the ragdoll. UnityEngine.Quaternion rotation The rotation of the ragdoll. Player owner The optional owner of the ragdoll. Returns Type Description Ragdoll The ragdoll. | Improve this Doc View Source CreateAndSpawn(RagdollData) Creates and spawns a new ragdoll. Declaration public static Ragdoll CreateAndSpawn(RagdollData networkInfo) Parameters Type Name Description RagdollData networkInfo The data associated with the ragdoll. Returns Type Description Ragdoll The ragdoll. | Improve this Doc View Source Destroy() Destroys the ragdoll. Declaration public void Destroy() | Improve this Doc View Source Get(BasicRagdoll) Gets the Ragdoll belonging to the BasicRagdoll , if any. Declaration public static Ragdoll Get(BasicRagdoll ragdoll) Parameters Type Name Description BasicRagdoll ragdoll The BasicRagdoll to get. Returns Type Description Ragdoll A Ragdoll or null if not found. | Improve this Doc View Source Get(Player) Gets the System.Collections.Generic.IEnumerable<T> of Ragdoll belonging to the Player , if any. Declaration public static IEnumerable<Ragdoll> Get(Player player) Parameters Type Name Description Player player The Player to get. Returns Type Description System.Collections.Generic.IEnumerable < Ragdoll > A System.Collections.Generic.IEnumerable<T> of Ragdoll . | Improve this Doc View Source Get(IEnumerable<Player>) Gets the System.Collections.Generic.IEnumerable<T> of Ragdoll belonging to the System.Collections.Generic.IEnumerable<T> of Player , if any. Declaration public static IEnumerable<Ragdoll> Get(IEnumerable<Player> players) Parameters Type Name Description System.Collections.Generic.IEnumerable < Player > players The Player s to get. Returns Type Description System.Collections.Generic.IEnumerable < Ragdoll > A System.Collections.Generic.IEnumerable<T> of Ragdoll . | Improve this Doc View Source Spawn() Spawns the ragdoll. Declaration public void Spawn() | Improve this Doc View Source ToString() Returns the Ragdoll in a human-readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Ragdoll-related data. Overrides System.Object.ToString() | Improve this Doc View Source UnSpawn() Un-spawns the ragdoll. Declaration public void UnSpawn() Implements IWrapper<T> IWorldSpace IPosition IRotation Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Recontainer.html": {
    "href": "api/Exiled.API.Features.Recontainer.html",
    "title": "Class Recontainer | EXILED Docs",
    "keywords": "Class Recontainer A wrapper class for PlayerRoles.PlayableScps.Scp079.Scp079Recontainer . Inheritance System.Object Recontainer Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Recontainer Properties | Improve this Doc View Source ActivatorButton Gets the activator button's UnityEngine.GameObject . Declaration public static GameObject ActivatorButton { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source ActivatorButtonPosition Gets or sets the ActivatorButton 's position. Declaration public static Vector3 ActivatorButtonPosition { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source ActivatorLerpSpeed Gets or sets the activator's lerp speed. Declaration public static float ActivatorLerpSpeed { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ActivatorPosition Gets the activator's position. Declaration public static Vector3 ActivatorPosition { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source ActivatorWindow Gets the activator's window. Declaration public static Window ActivatorWindow { get; } Property Value Type Description Window | Improve this Doc View Source AllGeneratorsActivatedAnnouncement Gets or sets the announcement played when all the generators have been activated. Declaration public static string AllGeneratorsActivatedAnnouncement { get; set; } Property Value Type Description System.String | Improve this Doc View Source Base Gets the base PlayerRoles.PlayableScps.Scp079.Scp079Recontainer . Declaration public static Scp079Recontainer Base { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079Recontainer | Improve this Doc View Source ContainmentFailureAnnouncement Gets or sets the announcement played when the contaiment is failed. Declaration public static string ContainmentFailureAnnouncement { get; set; } Property Value Type Description System.String | Improve this Doc View Source ContainmentGates Gets a System.Collections.Generic.IEnumerable<T> of Door which contains all the Door instances used for the containment zone. Declaration public static IEnumerable<Door> ContainmentGates { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Door > | Improve this Doc View Source ContainmentSuccessAnnouncement Gets or sets the announcement played when the contaiment is successful done. Declaration public static string ContainmentSuccessAnnouncement { get; set; } Property Value Type Description System.String | Improve this Doc View Source CountdownAnnouncement Gets or sets the announcement played when counting down to overcharge. Declaration public static string CountdownAnnouncement { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsCassieBusy Gets a value indicating whether the C.A.S.S.I.E is currently busy. Declaration public static bool IsCassieBusy { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsContaimentZoneOpen Gets or sets a value indicating whether the containment zone is open. Declaration public static bool IsContaimentZoneOpen { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsContainmentSequenceDone Gets or sets a value indicating whether the containment sequence is done. Declaration public static bool IsContainmentSequenceDone { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsContainmentSequenceSuccessful Gets or sets a value indicating whether the containment sequence is successful done. Declaration public static bool IsContainmentSequenceSuccessful { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsContainmentZoneLocked Gets or sets a value indicating whether the containment zone is locked. Declaration public static bool IsContainmentZoneLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LockdownDuration Gets or sets the lockdown duration. Declaration public static float LockdownDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source LockedDoors Gets a System.Collections.Generic.IEnumerable<T> of Door which contains all the Door instances locked during the overcharge procedure. Declaration public static IEnumerable<Door> LockedDoors { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Door > | Improve this Doc View Source OverchargeDelay Gets or sets the delay to wait before overcharging. Declaration public static float OverchargeDelay { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ProgressAnnouncement Gets or sets the announcement played to warn players about the contaiment sequence's progress. Declaration public static string ProgressAnnouncement { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source AnnounceEngagementStatus() Announces the engagement status. Declaration public static void AnnounceEngagementStatus() | Improve this Doc View Source AnnounceEngagementStatus(Int32) Announces the engagement status. Declaration public static void AnnounceEngagementStatus(int engagedGenerators) Parameters Type Name Description System.Int32 engagedGenerators The engaged generators count. | Improve this Doc View Source BeginOvercharge() Begins the overcharge procedure. Declaration public static void BeginOvercharge() | Improve this Doc View Source BreakGlass() Breaks the glass protecting the activator button. Declaration public static void BreakGlass() | Improve this Doc View Source EndOvercharge() Ends the overcharge procedure. Declaration public static void EndOvercharge() | Improve this Doc View Source PlayAnnouncement(String, Single) Playes an announcement. Declaration public static void PlayAnnouncement(string announcement, float glitchyMultiplier) Parameters Type Name Description System.String announcement The announcement to play. System.Single glitchyMultiplier The glitchy multiplier. | Improve this Doc View Source Recontain() Begins the recontainment procedure. Declaration public static void Recontain() | Improve this Doc View Source RefreshActivator() Refreshes the activator. Declaration public static void RefreshActivator() | Improve this Doc View Source RefreshEngamentStatus() Refreshes the engagement status. Declaration public static void RefreshEngamentStatus() | Improve this Doc View Source TryKillScp079() Tries to kill SCP-079. Declaration public static bool TryKillScp079() Returns Type Description System.Boolean true if SCP-079 was successfully contained; otherwise, false ."
  },
  "api/Exiled.API.Features.Respawn.html": {
    "href": "api/Exiled.API.Features.Respawn.html",
    "title": "Class Respawn | EXILED Docs",
    "keywords": "Class Respawn A set of tools to handle team respawns more easily. Inheritance System.Object Respawn Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Respawn Properties | Improve this Doc View Source ChaosTickets Gets or sets the amount of spawn tickets belonging to the Chaos Insurgency. Declaration public static float ChaosTickets { get; set; } Property Value Type Description System.Single See Also NtfTickets | Improve this Doc View Source ChaosVan Gets the Chaos Van's UnityEngine.GameObject . Declaration public static GameObject ChaosVan { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source IsSpawning Gets a value indicating whether or not a team is currently being spawned or the animations are playing for a team. Declaration public static bool IsSpawning { get; } Property Value Type Description System.Boolean | Improve this Doc View Source NextKnownTeam Gets the next known Respawning.SpawnableTeamType that will spawn. Declaration public static SpawnableTeamType NextKnownTeam { get; } Property Value Type Description Respawning.SpawnableTeamType | Improve this Doc View Source NextTeamTime Gets a System.DateTime indicating the moment in UTC time the next respawn wave will occur. Declaration public static DateTime NextTeamTime { get; } Property Value Type Description System.DateTime | Improve this Doc View Source NtfHelicopter Gets the NTF Helicopter's UnityEngine.GameObject . Declaration public static GameObject NtfHelicopter { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source NtfTickets Gets or sets the amount of spawn tickets belonging to the NTF. Declaration public static float NtfTickets { get; set; } Property Value Type Description System.Single See Also ChaosTickets | Improve this Doc View Source ProtectedCanShoot Gets or sets a value indicating whether or not spawn protected players can shoot. Declaration public static bool ProtectedCanShoot { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ProtectedTeams Gets a System.Collections.Generic.List<T> of PlayerRoles.Team that have spawn protection. Declaration public static List<Team> ProtectedTeams { get; } Property Value Type Description System.Collections.Generic.List < PlayerRoles.Team > | Improve this Doc View Source ProtectionEnabled Gets or sets a value indicating whether or not spawn protection is enabled. Declaration public static bool ProtectionEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ProtectionTime Gets or sets the spawn protection time, in seconds. Declaration public static float ProtectionTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source TimeUntilSpawnWave Gets a System.TimeSpan indicating the amount of time before the next respawn wave will occur. Declaration public static TimeSpan TimeUntilSpawnWave { get; } Property Value Type Description System.TimeSpan Methods | Improve this Doc View Source ForceWave(SpawnableTeamType, Boolean) Forces a spawn of the given Respawning.SpawnableTeamType . Declaration public static void ForceWave(SpawnableTeamType team, bool playEffects = false) Parameters Type Name Description Respawning.SpawnableTeamType team The Respawning.SpawnableTeamType to spawn. System.Boolean playEffects Whether or not effects will be played with the spawn. | Improve this Doc View Source GrantTickets(SpawnableTeamType, Single) Grants tickets to a Respawning.SpawnableTeamType . Declaration public static void GrantTickets(SpawnableTeamType team, float amount) Parameters Type Name Description Respawning.SpawnableTeamType team The Respawning.SpawnableTeamType to grant tickets to. System.Single amount The amount of tickets to grant. | Improve this Doc View Source PlayEffect(RespawnEffectType) Play an effect when a certain class spawns. Declaration public static void PlayEffect(RespawnEffectType effect) Parameters Type Name Description RespawnEffectType effect The effect to be played. | Improve this Doc View Source PlayEffect(Byte) Play an effect when a certain class spawns. Declaration public static void PlayEffect(byte effect) Parameters Type Name Description System.Byte effect The effect to be played. | Improve this Doc View Source PlayEffects(RespawnEffectType[]) Play effects when a certain class spawns. Declaration public static void PlayEffects(RespawnEffectType[] effects) Parameters Type Name Description RespawnEffectType [] effects The effects to be played. | Improve this Doc View Source PlayEffects(Byte[]) Play effects when a certain class spawns. Declaration public static void PlayEffects(byte[] effects) Parameters Type Name Description System.Byte [] effects The effects to be played. | Improve this Doc View Source RemoveTickets(SpawnableTeamType, Single) Removes tickets from a Respawning.SpawnableTeamType . Declaration public static void RemoveTickets(SpawnableTeamType team, float amount) Parameters Type Name Description Respawning.SpawnableTeamType team The Respawning.SpawnableTeamType to remove tickets from. System.Single amount The amount of tickets to remove. | Improve this Doc View Source SummonChaosInsurgencyVan(Boolean) Summons the ChaosInsurgency van. Declaration public static void SummonChaosInsurgencyVan(bool playMusic = true) Parameters Type Name Description System.Boolean playMusic Whether or not to play the Chaos Insurgency spawn music. | Improve this Doc View Source SummonNtfChopper() Summons the NTF chopper. Declaration public static void SummonNtfChopper()"
  },
  "api/Exiled.API.Features.Roles.FpcRole.html": {
    "href": "api/Exiled.API.Features.Roles.FpcRole.html",
    "title": "Class FpcRole | EXILED Docs",
    "keywords": "Class FpcRole Defines a role that represents an fpc class. Inheritance System.Object TypeCastObject < Role > Role FpcRole HumanRole Scp0492Role Scp049Role Scp096Role Scp106Role Scp173Role Scp939Role Implements IWrapper < PlayerRoles.PlayerRoleBase > Inherited Members Role.Owner Role.Type Role.Base Role.SpawnReason Role.SpawnFlags Role.Team Role.Side Role.Color Role.Name Role.ActiveTime Role.IsDead Role.IsAlive Role.IsValid Role.RandomSpawnLocation Role.Equals(Object) Role.ToString() Role.GetHashCode() Role.Set(RoleTypeId, SpawnReason) Role.Set(RoleTypeId, RoleSpawnFlags) Role.Set(RoleTypeId, SpawnReason, RoleSpawnFlags) TypeCastObject<Role>.Cast<TObject>() TypeCastObject<Role>.Cast<TObject>(TObject) TypeCastObject<Role>.As<TObject>() TypeCastObject<Role>.Is<TObject>(TObject) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public abstract class FpcRole : Role, IWrapper<PlayerRoleBase> Constructors | Improve this Doc View Source FpcRole(FpcStandardRoleBase) Initializes a new instance of the FpcRole class. Declaration protected FpcRole(FpcStandardRoleBase baseRole) Parameters Type Name Description PlayerRoles.FirstPersonControl.FpcStandardRoleBase baseRole the base PlayerRoles.PlayerRoleBase . Properties | Improve this Doc View Source CanSendInputs Gets a value indicating whether or not the player can send inputs. Declaration public bool CanSendInputs { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CrouchingSpeed Gets or sets the Role crouching speed. Declaration public float CrouchingSpeed { get; set; } Property Value Type Description System.Single | Improve this Doc View Source FirstPersonController Gets the FirstPersonController . Declaration public FpcStandardRoleBase FirstPersonController { get; } Property Value Type Description PlayerRoles.FirstPersonControl.FpcStandardRoleBase | Improve this Doc View Source IsCrouching Gets a value indicating whether the Player is crouching or not. Declaration public bool IsCrouching { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGrounded Gets a value indicating whether or not the player is on the ground. Declaration public bool IsGrounded { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsHumeShieldedRole Gets a value indicating whether or not this role is protected by a hume shield. Declaration public bool IsHumeShieldedRole { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInDarkness Gets a value indicating whether or not the Player is in darkness. Declaration public bool IsInDarkness { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInvisible Gets or sets a value indicating whether or not the player is invisible. Declaration public bool IsInvisible { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInvisibleFor Gets a list of players who can't see the player. Declaration public HashSet<Player> IsInvisibleFor { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source IsNoclipEnabled Gets or sets a value indicating whether or not the player has noclip enabled. Declaration public bool IsNoclipEnabled { get; set; } Property Value Type Description System.Boolean System.Boolean indicating status. Remarks For permitting a player to enter and exit noclip freely, see IsNoclipPermitted . See Also IsNoclipPermitted | Improve this Doc View Source JumpingSpeed Gets or sets the Role jumping speed. Declaration public float JumpingSpeed { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MovementSpeed Gets the Player 's current movement speed. Declaration public virtual float MovementSpeed { get; } Property Value Type Description System.Single | Improve this Doc View Source MoveState Gets or sets the player's current PlayerRoles.FirstPersonControl.PlayerMovementState . Declaration public PlayerMovementState MoveState { get; set; } Property Value Type Description PlayerRoles.FirstPersonControl.PlayerMovementState | Improve this Doc View Source RelativePosition Gets or sets the player's relative position. Declaration public RelativePosition RelativePosition { get; set; } Property Value Type Description RelativePositioning.RelativePosition | Improve this Doc View Source SprintingSpeed Gets or sets the Role sprinting speed. Declaration public float SprintingSpeed { get; set; } Property Value Type Description System.Single | Improve this Doc View Source WalkingSpeed Gets or sets the Role walking speed. Declaration public float WalkingSpeed { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Finalize() Finalizes an instance of the FpcRole class. Declaration protected void Finalize() Implements IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.html": {
    "href": "api/Exiled.API.Features.Roles.html",
    "title": "Namespace Exiled.API.Features.Roles | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Roles Classes FpcRole Defines a role that represents an fpc class. HumanRole Defines a role that represents a human class. NoneRole Defines a role that represents players with no role. OverwatchRole Defines a role that represents a player with overwatch enabled. Role Defines the class for role-related classes. Scp0492Role Defines a role that represents SCP-049-2. Scp049Role Defines a role that represents SCP-049. Scp079Role Defines a role that represents SCP-079. Scp096Role Defines a role that represents SCP-096. Scp106Role Defines a role that represents SCP-106. Scp173Role Defines a role that represents SCP-173. Scp939Role Defines a role that represents SCP-939. SpectatorRole Defines a role that represents a spectator. Interfaces IHumeShieldRole Represents a role that supports a hume shield. ISubroutinedScpRole Defines a interface that represents a PlayerRoles.PlayableScps.Subroutines.SubroutineManagerModule in player's role."
  },
  "api/Exiled.API.Features.Roles.HumanRole.html": {
    "href": "api/Exiled.API.Features.Roles.HumanRole.html",
    "title": "Class HumanRole | EXILED Docs",
    "keywords": "Class HumanRole Defines a role that represents a human class. Inheritance System.Object TypeCastObject < Role > Role FpcRole HumanRole Implements IWrapper < PlayerRoles.PlayerRoleBase > Inherited Members FpcRole.FirstPersonController FpcRole.RelativePosition FpcRole.WalkingSpeed FpcRole.SprintingSpeed FpcRole.JumpingSpeed FpcRole.CrouchingSpeed FpcRole.CanSendInputs FpcRole.IsInvisible FpcRole.IsInvisibleFor FpcRole.MoveState FpcRole.IsCrouching FpcRole.IsGrounded FpcRole.MovementSpeed FpcRole.IsInDarkness FpcRole.IsHumeShieldedRole FpcRole.IsNoclipEnabled Role.Owner Role.Base Role.SpawnReason Role.SpawnFlags Role.Team Role.Side Role.Color Role.Name Role.ActiveTime Role.IsDead Role.IsAlive Role.IsValid Role.RandomSpawnLocation Role.Equals(Object) Role.ToString() Role.GetHashCode() Role.Set(RoleTypeId, SpawnReason) Role.Set(RoleTypeId, RoleSpawnFlags) Role.Set(RoleTypeId, SpawnReason, RoleSpawnFlags) TypeCastObject<Role>.Cast<TObject>() TypeCastObject<Role>.Cast<TObject>(TObject) TypeCastObject<Role>.As<TObject>() TypeCastObject<Role>.Is<TObject>(TObject) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public class HumanRole : FpcRole, IWrapper<PlayerRoleBase> Properties | Improve this Doc View Source Internal Gets the game PlayerRoles.HumanRole . Declaration protected HumanRole Internal { get; } Property Value Type Description PlayerRoles.HumanRole | Improve this Doc View Source SpawnableTeamType Gets or sets the SpawnableTeamType . Declaration public SpawnableTeamType SpawnableTeamType { get; set; } Property Value Type Description Respawning.SpawnableTeamType | Improve this Doc View Source Type Declaration public override RoleTypeId Type { get; } Property Value Type Description PlayerRoles.RoleTypeId Overrides Role.Type | Improve this Doc View Source UnitName Gets the UnitName . Declaration public string UnitName { get; } Property Value Type Description System.String | Improve this Doc View Source UnitNameId Gets or sets the UnitNameId . Declaration public byte UnitNameId { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source UsesUnitNames Gets a value indicating whether the HumanRole uses unit names or not. Declaration public bool UsesUnitNames { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source GetArmorEfficacy(HitboxType) Gets the HumanRole armor efficacy based on a specific HitboxType and the armor the Owner is wearing. Declaration public int GetArmorEfficacy(HitboxType hitbox) Parameters Type Name Description HitboxType hitbox The HitboxType . Returns Type Description System.Int32 The armor efficacy. Implements IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.IHumeShieldRole.html": {
    "href": "api/Exiled.API.Features.Roles.IHumeShieldRole.html",
    "title": "Interface IHumeShieldRole | EXILED Docs",
    "keywords": "Interface IHumeShieldRole Represents a role that supports a hume shield. Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public interface IHumeShieldRole Properties | Improve this Doc View Source HumeShieldModule Gets a reference to the role's PlayerRoles.PlayableScps.HumeShield.HumeShieldModuleBase . Declaration HumeShieldModuleBase HumeShieldModule { get; } Property Value Type Description PlayerRoles.PlayableScps.HumeShield.HumeShieldModuleBase Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.ISubroutinedScpRole.html": {
    "href": "api/Exiled.API.Features.Roles.ISubroutinedScpRole.html",
    "title": "Interface ISubroutinedScpRole | EXILED Docs",
    "keywords": "Interface ISubroutinedScpRole Defines a interface that represents a PlayerRoles.PlayableScps.Subroutines.SubroutineManagerModule in player's role. Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public interface ISubroutinedScpRole Properties | Improve this Doc View Source SubroutineModule Gets the SCP PlayerRoles.PlayableScps.Subroutines.SubroutineManagerModule . Declaration SubroutineManagerModule SubroutineModule { get; } Property Value Type Description PlayerRoles.PlayableScps.Subroutines.SubroutineManagerModule Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.NoneRole.html": {
    "href": "api/Exiled.API.Features.Roles.NoneRole.html",
    "title": "Class NoneRole | EXILED Docs",
    "keywords": "Class NoneRole Defines a role that represents players with no role. Inheritance System.Object TypeCastObject < Role > Role NoneRole Implements IWrapper < PlayerRoles.PlayerRoleBase > Inherited Members Role.Owner Role.Base Role.SpawnReason Role.SpawnFlags Role.Team Role.Side Role.Color Role.Name Role.ActiveTime Role.IsDead Role.IsAlive Role.IsValid Role.RandomSpawnLocation Role.Equals(Object) Role.ToString() Role.GetHashCode() Role.Set(RoleTypeId, SpawnReason) Role.Set(RoleTypeId, RoleSpawnFlags) Role.Set(RoleTypeId, SpawnReason, RoleSpawnFlags) TypeCastObject<Role>.Cast<TObject>() TypeCastObject<Role>.Cast<TObject>(TObject) TypeCastObject<Role>.As<TObject>() TypeCastObject<Role>.Is<TObject>(TObject) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public class NoneRole : Role, IWrapper<PlayerRoleBase> Properties | Improve this Doc View Source Type Declaration public override RoleTypeId Type { get; } Property Value Type Description PlayerRoles.RoleTypeId Overrides Role.Type Implements IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.OverwatchRole.html": {
    "href": "api/Exiled.API.Features.Roles.OverwatchRole.html",
    "title": "Class OverwatchRole | EXILED Docs",
    "keywords": "Class OverwatchRole Defines a role that represents a player with overwatch enabled. Inheritance System.Object TypeCastObject < Role > Role SpectatorRole OverwatchRole Implements IWrapper < PlayerRoles.PlayerRoleBase > Inherited Members SpectatorRole.DeathTime SpectatorRole.DeadTime SpectatorRole.DeathPosition SpectatorRole.IsReadyToRespawn SpectatorRole.SpectatedPlayer Role.Owner Role.Base Role.SpawnReason Role.SpawnFlags Role.Team Role.Side Role.Color Role.Name Role.ActiveTime Role.IsDead Role.IsAlive Role.IsValid Role.RandomSpawnLocation Role.Equals(Object) Role.ToString() Role.GetHashCode() Role.Set(RoleTypeId, SpawnReason) Role.Set(RoleTypeId, RoleSpawnFlags) Role.Set(RoleTypeId, SpawnReason, RoleSpawnFlags) TypeCastObject<Role>.Cast<TObject>() TypeCastObject<Role>.Cast<TObject>(TObject) TypeCastObject<Role>.As<TObject>() TypeCastObject<Role>.Is<TObject>(TObject) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public class OverwatchRole : SpectatorRole, IWrapper<PlayerRoleBase> Properties | Improve this Doc View Source Type Declaration public override RoleTypeId Type { get; } Property Value Type Description PlayerRoles.RoleTypeId Overrides SpectatorRole.Type Implements IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.Role.html": {
    "href": "api/Exiled.API.Features.Roles.Role.html",
    "title": "Class Role | EXILED Docs",
    "keywords": "Class Role Defines the class for role-related classes. Inheritance System.Object TypeCastObject < Role > Role FpcRole NoneRole Scp079Role SpectatorRole Implements IWrapper < PlayerRoles.PlayerRoleBase > Inherited Members TypeCastObject<Role>.Cast<TObject>() TypeCastObject<Role>.Cast<TObject>(TObject) TypeCastObject<Role>.As<TObject>() TypeCastObject<Role>.Is<TObject>(TObject) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public abstract class Role : TypeCastObject<Role>, IWrapper<PlayerRoleBase> Constructors | Improve this Doc View Source Role(PlayerRoleBase) Initializes a new instance of the Role class. Declaration protected Role(PlayerRoleBase baseRole) Parameters Type Name Description PlayerRoles.PlayerRoleBase baseRole the base PlayerRoles.PlayerRoleBase . Properties | Improve this Doc View Source ActiveTime Gets the last time the Role was active. Declaration public TimeSpan ActiveTime { get; } Property Value Type Description System.TimeSpan | Improve this Doc View Source Base Gets the base PlayerRoles.PlayerRoleBase . Declaration public PlayerRoleBase Base { get; } Property Value Type Description PlayerRoles.PlayerRoleBase | Improve this Doc View Source Color Gets the UnityEngine.Color of this Role . Declaration public Color Color { get; } Property Value Type Description UnityEngine.Color | Improve this Doc View Source IsAlive Gets a value indicating whether or not this role represents a living role. Declaration public bool IsAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsDead Gets a value indicating whether or not this role represents a dead role. Declaration public bool IsDead { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsValid Gets a value indicating whether or not this role is still valid. This will only ever be false if the Role is stored and accessed at a later date. Declaration public bool IsValid { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the Role full name. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Owner Gets the Player this role is referring to. Declaration public virtual Player Owner { get; } Property Value Type Description Player | Improve this Doc View Source RandomSpawnLocation Gets a random spawn position of this role. Declaration public virtual SpawnLocation RandomSpawnLocation { get; } Property Value Type Description SpawnLocation The spawn position. | Improve this Doc View Source Side Gets the Side of this Role . Declaration public Side Side { get; } Property Value Type Description Side | Improve this Doc View Source SpawnFlags Gets the PlayerRoles.RoleSpawnFlags . Declaration public RoleSpawnFlags SpawnFlags { get; } Property Value Type Description PlayerRoles.RoleSpawnFlags | Improve this Doc View Source SpawnReason Gets the PlayerRoles.RoleChangeReason . Declaration public RoleChangeReason SpawnReason { get; } Property Value Type Description PlayerRoles.RoleChangeReason | Improve this Doc View Source Team Gets the PlayerRoles.Team of this Role . Declaration public Team Team { get; } Property Value Type Description PlayerRoles.Team | Improve this Doc View Source Type Gets the PlayerRoles.RoleTypeId of this Player . Declaration public abstract RoleTypeId Type { get; } Property Value Type Description PlayerRoles.RoleTypeId Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source Set(RoleTypeId, SpawnReason) Sets the player's PlayerRoles.RoleTypeId . Declaration public virtual void Set(RoleTypeId newRole, SpawnReason reason = SpawnReason.ForceClass) Parameters Type Name Description PlayerRoles.RoleTypeId newRole The new PlayerRoles.RoleTypeId to be set. SpawnReason reason The SpawnReason defining why the player's role was changed. | Improve this Doc View Source Set(RoleTypeId, SpawnReason, RoleSpawnFlags) Sets the player's PlayerRoles.RoleTypeId . Declaration public virtual void Set(RoleTypeId newRole, SpawnReason reason, RoleSpawnFlags spawnFlags) Parameters Type Name Description PlayerRoles.RoleTypeId newRole The new PlayerRoles.RoleTypeId to be set. SpawnReason reason The SpawnReason defining why the player's role was changed. PlayerRoles.RoleSpawnFlags spawnFlags The PlayerRoles.RoleSpawnFlags defining player spawn logic. | Improve this Doc View Source Set(RoleTypeId, RoleSpawnFlags) Sets the player's PlayerRoles.RoleTypeId . Declaration public virtual void Set(RoleTypeId newRole, RoleSpawnFlags spawnFlags) Parameters Type Name Description PlayerRoles.RoleTypeId newRole The new PlayerRoles.RoleTypeId to be set. PlayerRoles.RoleSpawnFlags spawnFlags The PlayerRoles.RoleSpawnFlags defining player spawn logic. | Improve this Doc View Source ToString() Returns the role in a human-readable format. Declaration public override string ToString() Returns Type Description System.String A string containing role-related data. Overrides System.Object.ToString() Operators | Improve this Doc View Source Equality(Role, Role) Returns whether or not 2 roles are the same. Declaration public static bool operator ==(Role left, Role right) Parameters Type Name Description Role left The role. Role right The other role. Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Equality(Role, RoleTypeId) Returns whether or not the role has the same RoleTypeId as the given typeId . Declaration public static bool operator ==(Role role, RoleTypeId typeId) Parameters Type Name Description Role role The Role . PlayerRoles.RoleTypeId typeId The PlayerRoles.RoleTypeId . Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Equality(RoleTypeId, Role) Returns whether or not the role has the same RoleTypeId as the given type . Declaration public static bool operator ==(RoleTypeId type, Role role) Parameters Type Name Description PlayerRoles.RoleTypeId type The PlayerRoles.RoleTypeId . Role role The Role . Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Implicit(Role to RoleTypeId) Converts a role to its appropriate PlayerRoles.RoleTypeId . Declaration public static implicit operator RoleTypeId(Role role) Parameters Type Name Description Role role The role. Returns Type Description PlayerRoles.RoleTypeId | Improve this Doc View Source Inequality(Role, Role) Returns whether or not the two roles are different. Declaration public static bool operator !=(Role left, Role right) Parameters Type Name Description Role left The role. Role right The other role. Returns Type Description System.Boolean true if the values are not equal. | Improve this Doc View Source Inequality(Role, RoleTypeId) Returns whether or not the role has a different RoleTypeId as the given typeId . Declaration public static bool operator !=(Role role, RoleTypeId typeId) Parameters Type Name Description Role role The Role . PlayerRoles.RoleTypeId typeId The PlayerRoles.RoleTypeId . Returns Type Description System.Boolean true if the values are not equal. | Improve this Doc View Source Inequality(RoleTypeId, Role) Returns whether or not the role has a different RoleTypeId as the given type . Declaration public static bool operator !=(RoleTypeId type, Role role) Parameters Type Name Description PlayerRoles.RoleTypeId type The PlayerRoles.RoleTypeId . Role role The Role . Returns Type Description System.Boolean true if the values are not equal. Implements IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.Scp0492Role.html": {
    "href": "api/Exiled.API.Features.Roles.Scp0492Role.html",
    "title": "Class Scp0492Role | EXILED Docs",
    "keywords": "Class Scp0492Role Defines a role that represents SCP-049-2. Inheritance System.Object TypeCastObject < Role > Role FpcRole Scp0492Role Implements IWrapper < PlayerRoles.PlayerRoleBase > ISubroutinedScpRole IHumeShieldRole Inherited Members FpcRole.FirstPersonController FpcRole.RelativePosition FpcRole.WalkingSpeed FpcRole.SprintingSpeed FpcRole.JumpingSpeed FpcRole.CrouchingSpeed FpcRole.CanSendInputs FpcRole.IsInvisible FpcRole.IsInvisibleFor FpcRole.MoveState FpcRole.IsCrouching FpcRole.IsGrounded FpcRole.MovementSpeed FpcRole.IsInDarkness FpcRole.IsHumeShieldedRole FpcRole.IsNoclipEnabled Role.Owner Role.Base Role.SpawnReason Role.SpawnFlags Role.Team Role.Side Role.Color Role.Name Role.ActiveTime Role.IsDead Role.IsAlive Role.IsValid Role.RandomSpawnLocation Role.Equals(Object) Role.ToString() Role.GetHashCode() Role.Set(RoleTypeId, SpawnReason) Role.Set(RoleTypeId, RoleSpawnFlags) Role.Set(RoleTypeId, SpawnReason, RoleSpawnFlags) TypeCastObject<Role>.Cast<TObject>() TypeCastObject<Role>.Cast<TObject>(TObject) TypeCastObject<Role>.As<TObject>() TypeCastObject<Role>.Is<TObject>(TObject) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public class Scp0492Role : FpcRole, IWrapper<PlayerRoleBase>, ISubroutinedScpRole, IHumeShieldRole Properties | Improve this Doc View Source AttackAbility Gets SCP-049-2's PlayerRoles.PlayableScps.Scp049.Zombies.ZombieAttackAbility . Declaration public ZombieAttackAbility AttackAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp049.Zombies.ZombieAttackAbility | Improve this Doc View Source AttackCooldown Gets the amount of time in between SCP-049-2 attacks. Declaration public float AttackCooldown { get; } Property Value Type Description System.Single | Improve this Doc View Source AttackDamage Gets or sets the SCP-049-2 attack damage. Declaration public float AttackDamage { get; set; } Property Value Type Description System.Single Remarks Setter will work later //TODO. | Improve this Doc View Source BloodlustAbility Gets SCP-049-2's PlayerRoles.PlayableScps.Scp049.Zombies.ZombieBloodlustAbility . Declaration public ZombieBloodlustAbility BloodlustAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp049.Zombies.ZombieBloodlustAbility | Improve this Doc View Source BloodlustActive Gets a value indicating whether or not SCP-049-2 is currently pursuing a target (Bloodlust ability). Declaration public bool BloodlustActive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ConsumeAbility Gets SCP-049-2's PlayerRoles.PlayableScps.Scp049.Zombies.ZombieConsumeAbility . Declaration public ZombieConsumeAbility ConsumeAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp049.Zombies.ZombieConsumeAbility | Improve this Doc View Source HumeShieldModule Declaration public HumeShieldModuleBase HumeShieldModule { get; } Property Value Type Description PlayerRoles.PlayableScps.HumeShield.HumeShieldModuleBase | Improve this Doc View Source IsConsuming Gets a value indicating whether or not SCP-049-2 is consuming a ragdoll. Declaration public bool IsConsuming { get; } Property Value Type Description System.Boolean | Improve this Doc View Source RagdollConsuming Gets the Ragdoll that SCP-049-2 is currently consuming. Will be null if IsConsuming is false . Declaration public Ragdoll RagdollConsuming { get; } Property Value Type Description Ragdoll | Improve this Doc View Source ResurrectNumber Gets or sets the amount of times this SCP-049-2 has been resurrected. Declaration public int ResurrectNumber { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SimulatedStare Gets or sets a value indicating the amount of time to simulate SCP-049-2's Bloodlust ability. Declaration public float SimulatedStare { get; set; } Property Value Type Description System.Single | Improve this Doc View Source SubroutineModule Declaration public SubroutineManagerModule SubroutineModule { get; } Property Value Type Description PlayerRoles.PlayableScps.Subroutines.SubroutineManagerModule | Improve this Doc View Source Type Declaration public override RoleTypeId Type { get; } Property Value Type Description PlayerRoles.RoleTypeId Overrides Role.Type Methods | Improve this Doc View Source IsInConsumeRange(BasicRagdoll) Returns a langword_csharp_bool indicating whether or not SCP-049-2 is close enough to a ragdoll to consume it. Declaration public bool IsInConsumeRange(BasicRagdoll ragdoll) Parameters Type Name Description BasicRagdoll ragdoll The ragdoll to check. Returns Type Description System.Boolean true if close enough to consume the body; otherwise, false . Remarks This method only returns whether or not SCP-049-2 is close enough to the body to consume it; the body may have been consumed previously. Make sure to check IsConsumed to ensure the body can be consumed. | Improve this Doc View Source IsInConsumeRange(Ragdoll) Returns a langword_csharp_bool indicating whether or not SCP-049-2 is close enough to a ragdoll to consume it. Declaration public bool IsInConsumeRange(Ragdoll ragdoll) Parameters Type Name Description Ragdoll ragdoll The ragdoll to check. Returns Type Description System.Boolean true if close enough to consume the body; otherwise, false . Remarks This method only returns whether or not SCP-049-2 is close enough to the body to consume it; the body may have been consumed previously. Make sure to check IsConsumed to ensure the body can be consumed. Implements IWrapper<T> ISubroutinedScpRole IHumeShieldRole Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.Scp049Role.html": {
    "href": "api/Exiled.API.Features.Roles.Scp049Role.html",
    "title": "Class Scp049Role | EXILED Docs",
    "keywords": "Class Scp049Role Defines a role that represents SCP-049. Inheritance System.Object TypeCastObject < Role > Role FpcRole Scp049Role Implements IWrapper < PlayerRoles.PlayerRoleBase > ISubroutinedScpRole IHumeShieldRole Inherited Members FpcRole.FirstPersonController FpcRole.RelativePosition FpcRole.WalkingSpeed FpcRole.SprintingSpeed FpcRole.JumpingSpeed FpcRole.CrouchingSpeed FpcRole.CanSendInputs FpcRole.IsInvisible FpcRole.IsInvisibleFor FpcRole.MoveState FpcRole.IsCrouching FpcRole.IsGrounded FpcRole.MovementSpeed FpcRole.IsInDarkness FpcRole.IsHumeShieldedRole FpcRole.IsNoclipEnabled Role.Owner Role.Base Role.SpawnReason Role.SpawnFlags Role.Team Role.Side Role.Color Role.Name Role.ActiveTime Role.IsDead Role.IsAlive Role.IsValid Role.RandomSpawnLocation Role.Equals(Object) Role.ToString() Role.GetHashCode() Role.Set(RoleTypeId, SpawnReason) Role.Set(RoleTypeId, RoleSpawnFlags) Role.Set(RoleTypeId, SpawnReason, RoleSpawnFlags) TypeCastObject<Role>.Cast<TObject>() TypeCastObject<Role>.Cast<TObject>(TObject) TypeCastObject<Role>.As<TObject>() TypeCastObject<Role>.Is<TObject>(TObject) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public class Scp049Role : FpcRole, IWrapper<PlayerRoleBase>, ISubroutinedScpRole, IHumeShieldRole Properties | Improve this Doc View Source CallAbility Gets SCP-049's PlayerRoles.PlayableScps.Scp049.Scp049CallAbility . Declaration public Scp049CallAbility CallAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp049.Scp049CallAbility | Improve this Doc View Source CallCooldown Gets or sets the amount of time before SCP-049 can use its Doctor's Call ability again. Declaration public float CallCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source GoodSenseCooldown Gets or sets the amount of time before SCP-049 can use its Good Sense ability again. Declaration public float GoodSenseCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source HumeShieldModule Declaration public HumeShieldModuleBase HumeShieldModule { get; } Property Value Type Description PlayerRoles.PlayableScps.HumeShield.HumeShieldModuleBase | Improve this Doc View Source IsCallActive Gets a value indicating whether or not SCP-049's \"Doctor's Call\" ability is currently active. Declaration public bool IsCallActive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRecalling Gets a value indicating whether or not SCP-049 is currently recalling a player. Declaration public bool IsRecalling { get; } Property Value Type Description System.Boolean | Improve this Doc View Source RecallingPlayer Gets the player that is currently being revived by SCP-049. Will be null if IsRecalling is false . Declaration public Player RecallingPlayer { get; } Property Value Type Description Player | Improve this Doc View Source RecallingRagdoll Gets the ragdoll that is currently being revived by SCP-049. Will be null if IsRecalling is false . Declaration public Ragdoll RecallingRagdoll { get; } Property Value Type Description Ragdoll | Improve this Doc View Source ResurrectAbility Gets SCP-049's PlayerRoles.PlayableScps.Scp049.Scp049ResurrectAbility . Declaration public Scp049ResurrectAbility ResurrectAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp049.Scp049ResurrectAbility | Improve this Doc View Source SenseAbility Gets SCP-049's PlayerRoles.PlayableScps.Scp049.Scp049SenseAbility . Declaration public Scp049SenseAbility SenseAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp049.Scp049SenseAbility | Improve this Doc View Source SubroutineModule Declaration public SubroutineManagerModule SubroutineModule { get; } Property Value Type Description PlayerRoles.PlayableScps.Subroutines.SubroutineManagerModule | Improve this Doc View Source Type Declaration public override RoleTypeId Type { get; } Property Value Type Description PlayerRoles.RoleTypeId Overrides Role.Type Methods | Improve this Doc View Source CanResurrect(BasicRagdoll) Returns a langword_csharp_bool indicating whether or not the ragdoll can be resurrected by SCP-049. Declaration public bool CanResurrect(BasicRagdoll ragdoll) Parameters Type Name Description BasicRagdoll ragdoll The ragdoll to check. Returns Type Description System.Boolean true if the body can be revived; otherwise, false . | Improve this Doc View Source CanResurrect(Ragdoll) Returns a langword_csharp_bool indicating whether or not the ragdoll can be resurrected by SCP-049. Declaration public bool CanResurrect(Ragdoll ragdoll) Parameters Type Name Description Ragdoll ragdoll The ragdoll to check. Returns Type Description System.Boolean true if the body can be revived; otherwise, false . | Improve this Doc View Source IsInRecallRange(BasicRagdoll) Returns a langword_csharp_bool indicating whether or not SCP-049 is close enough to a ragdoll to revive it. Declaration public bool IsInRecallRange(BasicRagdoll ragdoll) Parameters Type Name Description BasicRagdoll ragdoll The ragdoll to check. Returns Type Description System.Boolean true if close enough to revive the body; otherwise, false . Remarks This method only returns whether or not SCP-049 is close enough to the body to revive it; the body may have expired. Make sure to check CanResurrect(BasicRagdoll) to ensure the body can be revived. | Improve this Doc View Source IsInRecallRange(Ragdoll) Returns a langword_csharp_bool indicating whether or not SCP-049 is close enough to a ragdoll to revive it. Declaration public bool IsInRecallRange(Ragdoll ragdoll) Parameters Type Name Description Ragdoll ragdoll The ragdoll to check. Returns Type Description System.Boolean true if close enough to revive the body; otherwise, false . Remarks This method only returns whether or not SCP-049 is close enough to the body to revive it; the body may have expired. Make sure to check CanResurrect(Ragdoll) to ensure the body can be revived. Implements IWrapper<T> ISubroutinedScpRole IHumeShieldRole Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.Scp079Role.html": {
    "href": "api/Exiled.API.Features.Roles.Scp079Role.html",
    "title": "Class Scp079Role | EXILED Docs",
    "keywords": "Class Scp079Role Defines a role that represents SCP-079. Inheritance System.Object TypeCastObject < Role > Role Scp079Role Implements IWrapper < PlayerRoles.PlayerRoleBase > ISubroutinedScpRole Inherited Members Role.Owner Role.Base Role.SpawnReason Role.SpawnFlags Role.Team Role.Side Role.Color Role.Name Role.ActiveTime Role.IsDead Role.IsAlive Role.IsValid Role.RandomSpawnLocation Role.Equals(Object) Role.ToString() Role.GetHashCode() Role.Set(RoleTypeId, SpawnReason) Role.Set(RoleTypeId, RoleSpawnFlags) Role.Set(RoleTypeId, SpawnReason, RoleSpawnFlags) TypeCastObject<Role>.Cast<TObject>() TypeCastObject<Role>.Cast<TObject>(TObject) TypeCastObject<Role>.As<TObject>() TypeCastObject<Role>.Is<TObject>(TObject) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public class Scp079Role : Role, IWrapper<PlayerRoleBase>, ISubroutinedScpRole Properties | Improve this Doc View Source Abilities Gets or sets SCP-079's abilities. Can be null . Declaration public Scp079AbilityBase[] Abilities { get; set; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079AbilityBase [] | Improve this Doc View Source AuxManager Gets SCP-079's PlayerRoles.PlayableScps.Scp079.Scp079AuxManager . Declaration public Scp079AuxManager AuxManager { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079AuxManager | Improve this Doc View Source BlackoutCapacity Gets the maximum amount of rooms that SCP-079 can black out at its current Level . Declaration public int BlackoutCapacity { get; } Property Value Type Description System.Int32 | Improve this Doc View Source BlackoutCount Gets the amount of rooms that SCP-079 has blacked out. Declaration public int BlackoutCount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source BlackoutRoomAbility Gets SCP-079's PlayerRoles.PlayableScps.Scp079.Scp079BlackoutRoomAbility . Declaration public Scp079BlackoutRoomAbility BlackoutRoomAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079BlackoutRoomAbility | Improve this Doc View Source BlackoutZoneAbility Gets SCP-079's PlayerRoles.PlayableScps.Scp079.Scp079BlackoutZoneAbility . Declaration public Scp079BlackoutZoneAbility BlackoutZoneAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079BlackoutZoneAbility | Improve this Doc View Source BlackoutZoneCooldown Gets or sets the amount of time until SCP-079 can use its blackout zone ability again. Declaration public float BlackoutZoneCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Camera Gets or sets the camera SCP-079 is currently controlling. This value will return the Hcz079ContChamber Camera if SCP-079's current camera cannot be detected. Declaration public Camera Camera { get; set; } Property Value Type Description Camera | Improve this Doc View Source CanTransmit Gets a value indicating whether or not SCP-079 can transmit its voice to a speaker. Declaration public bool CanTransmit { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CurrentCameraSync Gets SCP-079's PlayerRoles.PlayableScps.Scp079.Cameras.Scp079CurrentCameraSync . Declaration public Scp079CurrentCameraSync CurrentCameraSync { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Cameras.Scp079CurrentCameraSync | Improve this Doc View Source DoorLockChanger Gets SCP-079's PlayerRoles.PlayableScps.Scp079.Scp079DoorLockChanger . Declaration public Scp079DoorLockChanger DoorLockChanger { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079DoorLockChanger | Improve this Doc View Source DoorStateChanger Gets SCP-079's PlayerRoles.PlayableScps.Scp079.Scp079DoorAbility . Declaration public Scp079DoorStateChanger DoorStateChanger { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079DoorStateChanger | Improve this Doc View Source Energy Gets or sets SCP-079's energy. Declaration public float Energy { get; set; } Property Value Type Description System.Single | Improve this Doc View Source EnergyRegenerationSpeed Gets SCP-079's energy regeneration speed. Declaration public float EnergyRegenerationSpeed { get; } Property Value Type Description System.Single | Improve this Doc View Source Experience Gets or sets the amount of experience SCP-079 has. Declaration public int Experience { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Internal Gets the game PlayerRoles.PlayableScps.Scp079.Scp079Role . Declaration protected Scp079Role Internal { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079Role | Improve this Doc View Source IsLost Gets a value indicating whether or not SCP-079's signal is lost due to SCP-2176. Declaration public bool IsLost { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Level Gets or sets SCP-079's level. Declaration public int Level { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source LevelIndex Gets or sets SCP-079's level index. Declaration public int LevelIndex { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source LockdownRoomAbility Gets SCP-079's PlayerRoles.PlayableScps.Scp079.Scp079LockdownRoomAbility . Declaration public Scp079LockdownRoomAbility LockdownRoomAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079LockdownRoomAbility | Improve this Doc View Source LockedDoors Gets the doors SCP-079 has locked. Can be null . Declaration public IEnumerable<Door> LockedDoors { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Door > | Improve this Doc View Source LostSignalHandler Gets SCP-079's PlayerRoles.PlayableScps.Scp079.Scp079LostSignalHandler . Declaration public Scp079LostSignalHandler LostSignalHandler { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079LostSignalHandler | Improve this Doc View Source LostTime Gets a value indicating how much more time SCP-079 will be lost. Declaration public float LostTime { get; } Property Value Type Description System.Single | Improve this Doc View Source MarkedRooms Gets a list of rooms that have been marked by SCP-079. Marked rooms grant SCP-079 experience if a kill occurs in them. Declaration public IEnumerable<Room> MarkedRooms { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Room > | Improve this Doc View Source MaxEnergy Gets or sets SCP-079's max energy. Declaration public float MaxEnergy { get; set; } Property Value Type Description System.Single | Improve this Doc View Source NextLevelThreshold Gets SCP-079's next level threshold. Declaration public int NextLevelThreshold { get; } Property Value Type Description System.Int32 | Improve this Doc View Source RewardManager Gets SCP-079's PlayerRoles.PlayableScps.Scp079.Rewards.Scp079RewardManager . Declaration public Scp079RewardManager RewardManager { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Rewards.Scp079RewardManager | Improve this Doc View Source RoomLockdownCooldown Gets or sets SCP-079's room lockdown cooldown. Declaration public float RoomLockdownCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Scp2176LostTime Gets or sets the amount of time that SCP-2176 will disable SCP-079 for. Declaration public float Scp2176LostTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Speaker Gets the speaker SCP-079 is currently using. Can be null . Declaration public Scp079Speaker Speaker { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079Speaker | Improve this Doc View Source SpeakerAbility Gets SCP-079's PlayerRoles.PlayableScps.Scp079.Scp079SpeakerAbility . Declaration public Scp079SpeakerAbility SpeakerAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079SpeakerAbility | Improve this Doc View Source SubroutineModule Declaration public SubroutineManagerModule SubroutineModule { get; } Property Value Type Description PlayerRoles.PlayableScps.Subroutines.SubroutineManagerModule | Improve this Doc View Source TierManager Gets SCP-079's PlayerRoles.PlayableScps.Scp079.Scp079TierManager . Declaration public Scp079TierManager TierManager { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079TierManager | Improve this Doc View Source Type Declaration public override RoleTypeId Type { get; } Property Value Type Description PlayerRoles.RoleTypeId Overrides Role.Type Methods | Improve this Doc View Source AddExperience(Int32, Scp079HudTranslation) Grants SCP-079 experience. Declaration public void AddExperience(int amount, Scp079HudTranslation reason = Scp079HudTranslation.ExpGainAdminCommand) Parameters Type Name Description System.Int32 amount The amount to grant. PlayerRoles.PlayableScps.Scp079.Scp079HudTranslation reason The reason to grant experience. | Improve this Doc View Source ClearMarkedRooms() Clears the list of marked SCP-079 rooms. Declaration public void ClearMarkedRooms() | Improve this Doc View Source GetCost(Door, DoorAction) Gets the cost to modify a door. Declaration public int GetCost(Door door, DoorAction action) Parameters Type Name Description Door door The door to get the cost to modify. Interactables.Interobjects.DoorUtils.DoorAction action The action. Returns Type Description System.Int32 The cost to modify the door. | Improve this Doc View Source GetSwitchCost(Camera) Gets the cost to switch from the current Camera to the provided camera . Declaration public int GetSwitchCost(Camera camera) Parameters Type Name Description Camera camera The camera to get the cost to switch to. Returns Type Description System.Int32 The cost to switch from the current camera to the new camera. | Improve this Doc View Source LockDoor(Door) Locks the provided door . Declaration public bool LockDoor(Door door) Parameters Type Name Description Door door The door to lock. Returns Type Description System.Boolean . | Improve this Doc View Source LoseSignal(Single) Forces SCP-079's signal to be lost for the specified amount of time. Declaration public void LoseSignal(float duration) Parameters Type Name Description System.Single duration Time to lose SCP-079's signal. | Improve this Doc View Source MarkRoom(Room) Marks a room as being modified by SCP-079 (granting experience if a kill happens in the room). Declaration public void MarkRoom(Room room) Parameters Type Name Description Room room The room to mark. | Improve this Doc View Source UnlockAllDoors() Unlocks all doors that SCP-079 has locked. Declaration public void UnlockAllDoors() | Improve this Doc View Source UnlockDoor(Door) Unlocks the provided door . Declaration public void UnlockDoor(Door door) Parameters Type Name Description Door door The door to unlock. | Improve this Doc View Source UnmarkRoom(Room) Removes a marked room. Declaration public void UnmarkRoom(Room room) Parameters Type Name Description Room room The room to remove. Implements IWrapper<T> ISubroutinedScpRole Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.Scp096Role.html": {
    "href": "api/Exiled.API.Features.Roles.Scp096Role.html",
    "title": "Class Scp096Role | EXILED Docs",
    "keywords": "Class Scp096Role Defines a role that represents SCP-096. Inheritance System.Object TypeCastObject < Role > Role FpcRole Scp096Role Implements IWrapper < PlayerRoles.PlayerRoleBase > ISubroutinedScpRole IHumeShieldRole Inherited Members FpcRole.FirstPersonController FpcRole.RelativePosition FpcRole.WalkingSpeed FpcRole.SprintingSpeed FpcRole.JumpingSpeed FpcRole.CrouchingSpeed FpcRole.CanSendInputs FpcRole.IsInvisible FpcRole.IsInvisibleFor FpcRole.MoveState FpcRole.IsCrouching FpcRole.IsGrounded FpcRole.MovementSpeed FpcRole.IsInDarkness FpcRole.IsHumeShieldedRole FpcRole.IsNoclipEnabled Role.Owner Role.Base Role.SpawnReason Role.SpawnFlags Role.Team Role.Side Role.Color Role.Name Role.ActiveTime Role.IsDead Role.IsAlive Role.IsValid Role.RandomSpawnLocation Role.Equals(Object) Role.ToString() Role.GetHashCode() Role.Set(RoleTypeId, SpawnReason) Role.Set(RoleTypeId, RoleSpawnFlags) Role.Set(RoleTypeId, SpawnReason, RoleSpawnFlags) TypeCastObject<Role>.Cast<TObject>() TypeCastObject<Role>.Cast<TObject>(TObject) TypeCastObject<Role>.As<TObject>() TypeCastObject<Role>.Is<TObject>(TObject) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public class Scp096Role : FpcRole, IWrapper<PlayerRoleBase>, ISubroutinedScpRole, IHumeShieldRole Properties | Improve this Doc View Source AbilityState Gets a value indicating SCP-096's ability state. Declaration public Scp096AbilityState AbilityState { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp096.Scp096AbilityState | Improve this Doc View Source CanReceiveTargets Gets a value indicating whether or not SCP-096 can receive targets. Declaration public bool CanReceiveTargets { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ChargeCooldown Gets or sets the amount of time in between SCP-096 charges. Declaration public float ChargeCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source EnrageCooldown Gets or sets the amount of time before SCP-096 can be enraged again. Declaration public float EnrageCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source EnragedTimeLeft Gets or sets enraged time left. Declaration public float EnragedTimeLeft { get; set; } Property Value Type Description System.Single | Improve this Doc View Source HumeShieldModule Declaration public HumeShieldModuleBase HumeShieldModule { get; } Property Value Type Description PlayerRoles.PlayableScps.HumeShield.HumeShieldModuleBase | Improve this Doc View Source Internal Gets the PlayerRoles.PlayableScps.Scp096.Scp096Role . Declaration protected Scp096Role Internal { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp096.Scp096Role | Improve this Doc View Source RageCycleAbility Gets SCP-096's PlayerRoles.PlayableScps.Scp096.Scp096RageCycleAbility . Declaration public Scp096RageCycleAbility RageCycleAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp096.Scp096RageCycleAbility | Improve this Doc View Source RageManager Gets SCP-096's PlayerRoles.PlayableScps.Scp096.Scp096RageManager . Declaration public Scp096RageManager RageManager { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp096.Scp096RageManager | Improve this Doc View Source RageState Gets a value indicating SCP-096's rage state. Declaration public Scp096RageState RageState { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp096.Scp096RageState | Improve this Doc View Source SubroutineModule Declaration public SubroutineManagerModule SubroutineModule { get; } Property Value Type Description PlayerRoles.PlayableScps.Subroutines.SubroutineManagerModule | Improve this Doc View Source Targets Gets a System.Collections.Generic.IReadOnlyCollection<T> of Players that are currently targeted by SCP-096. Declaration public IReadOnlyCollection<Player> Targets { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < Player > | Improve this Doc View Source TargetsTracker Gets SCP-096's PlayerRoles.PlayableScps.Scp096.Scp096TargetsTracker . Declaration public Scp096TargetsTracker TargetsTracker { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp096.Scp096TargetsTracker | Improve this Doc View Source TotalEnrageTime Gets or sets enraged time left. Declaration public float TotalEnrageTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source TurnedPlayers Gets a list of players who will be turned away from SCP-096. Declaration public static HashSet<Player> TurnedPlayers { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source Type Declaration public override RoleTypeId Type { get; } Property Value Type Description PlayerRoles.RoleTypeId Overrides Role.Type Methods | Improve this Doc View Source AddTarget(Player) Adds the specified player as an SCP-096 target. Declaration public void AddTarget(Player player) Parameters Type Name Description Player player The player to add as a target. | Improve this Doc View Source AddTarget(Player, Boolean) Adds the specified player as an SCP-096 target. Declaration public void AddTarget(Player player, bool isLooking) Parameters Type Name Description Player player The player to add as a target. System.Boolean isLooking Is because player look SCP-096. | Improve this Doc View Source Calm(Boolean) Ends SCP-096's enrage cycle. Declaration public void Calm(bool clearTime) Parameters Type Name Description System.Boolean clearTime Whether or not to clear the remaining enrage time. | Improve this Doc View Source ClearTargets() Removes all targets from SCP-096's target list. Declaration public void ClearTargets() | Improve this Doc View Source Enrage(Single) Enrages SCP-096 for the given amount of times. Declaration public void Enrage(float time) Parameters Type Name Description System.Single time The amount of time to enrage SCP-096. | Improve this Doc View Source HasTarget(Player) Returns whether or not the provided player is a target of SCP-096. Declaration public bool HasTarget(Player player) Parameters Type Name Description Player player The player to check. Returns Type Description System.Boolean Whether or not the player is a target of SCP-096. | Improve this Doc View Source IsObserved(Player) Returns whether or not the provided player is observed by SCP-096. Declaration public bool IsObserved(Player player) Parameters Type Name Description Player player The player to check. Returns Type Description System.Boolean Whether or not the player is observed. | Improve this Doc View Source RemoveTarget(Player) Removes the specified player from SCP-096's targets. Declaration public void RemoveTarget(Player player) Parameters Type Name Description Player player The player to remove as a target. Implements IWrapper<T> ISubroutinedScpRole IHumeShieldRole Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.Scp106Role.html": {
    "href": "api/Exiled.API.Features.Roles.Scp106Role.html",
    "title": "Class Scp106Role | EXILED Docs",
    "keywords": "Class Scp106Role Defines a role that represents SCP-106. Inheritance System.Object TypeCastObject < Role > Role FpcRole Scp106Role Implements IWrapper < PlayerRoles.PlayerRoleBase > ISubroutinedScpRole IHumeShieldRole Inherited Members FpcRole.FirstPersonController FpcRole.RelativePosition FpcRole.WalkingSpeed FpcRole.SprintingSpeed FpcRole.JumpingSpeed FpcRole.CrouchingSpeed FpcRole.CanSendInputs FpcRole.IsInvisible FpcRole.IsInvisibleFor FpcRole.MoveState FpcRole.IsCrouching FpcRole.IsGrounded FpcRole.MovementSpeed FpcRole.IsInDarkness FpcRole.IsHumeShieldedRole FpcRole.IsNoclipEnabled Role.Owner Role.Base Role.SpawnReason Role.SpawnFlags Role.Team Role.Side Role.Color Role.Name Role.ActiveTime Role.IsDead Role.IsAlive Role.IsValid Role.RandomSpawnLocation Role.Equals(Object) Role.ToString() Role.GetHashCode() Role.Set(RoleTypeId, SpawnReason) Role.Set(RoleTypeId, RoleSpawnFlags) Role.Set(RoleTypeId, SpawnReason, RoleSpawnFlags) TypeCastObject<Role>.Cast<TObject>() TypeCastObject<Role>.Cast<TObject>(TObject) TypeCastObject<Role>.As<TObject>() TypeCastObject<Role>.Is<TObject>(TObject) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public class Scp106Role : FpcRole, IWrapper<PlayerRoleBase>, ISubroutinedScpRole, IHumeShieldRole Properties | Improve this Doc View Source Attack Gets the PlayerRoles.PlayableScps.Scp106.Scp106Attack . Declaration public Scp106Attack Attack { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp106.Scp106Attack | Improve this Doc View Source CanActivateIdle Gets a value indicating whether or not SCP-106 is ready for idle. Declaration public bool CanActivateIdle { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CaptureCooldown Gets or sets the amount of time in between player captures. Declaration public float CaptureCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source HumeShieldModule Gets the PlayerRoles.PlayableScps.HumeShield.HumeShieldModuleBase . Declaration public HumeShieldModuleBase HumeShieldModule { get; } Property Value Type Description PlayerRoles.PlayableScps.HumeShield.HumeShieldModuleBase | Improve this Doc View Source HuntersAtlasAbility Gets the PlayerRoles.PlayableScps.Scp106.Scp106HuntersAtlasAbility . Declaration public Scp106HuntersAtlasAbility HuntersAtlasAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp106.Scp106HuntersAtlasAbility | Improve this Doc View Source Internal Gets the PlayerRoles.PlayableScps.Scp106.Scp106Role . Declaration protected Scp106Role Internal { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp106.Scp106Role | Improve this Doc View Source IsSlowdown Gets a value indicating whether or not SCP-106 is currently slow down by a door. Declaration public bool IsSlowdown { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsStalking Gets or sets a value indicating whether or not SCP-106 will enter his stalking mode. Declaration public bool IsStalking { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSubmerged Gets or sets a value indicating whether or not SCP-106 is currently submerged. Declaration public bool IsSubmerged { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MovementModule Gets the PlayerRoles.PlayableScps.Scp106.Scp106MovementModule . Declaration public Scp106MovementModule MovementModule { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp106.Scp106MovementModule | Improve this Doc View Source SinkholeController Gets the PlayerRoles.PlayableScps.Scp106.Scp106SinkholeController . Declaration public Scp106SinkholeController SinkholeController { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp106.Scp106SinkholeController | Improve this Doc View Source StalkAbility Gets the PlayerRoles.PlayableScps.Scp106.Scp106Attack . Declaration public Scp106StalkAbility StalkAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp106.Scp106StalkAbility | Improve this Doc View Source SubroutineModule Declaration public SubroutineManagerModule SubroutineModule { get; } Property Value Type Description PlayerRoles.PlayableScps.Subroutines.SubroutineManagerModule | Improve this Doc View Source Type Declaration public override RoleTypeId Type { get; } Property Value Type Description PlayerRoles.RoleTypeId Overrides Role.Type | Improve this Doc View Source Vigor Gets or sets SCP-106's Vigor. Declaration public float Vigor { get; set; } Property Value Type Description System.Single | Improve this Doc View Source VigorComponent Gets the PlayerRoles.PlayableScps.Scp106.Scp106Vigor . Declaration public Scp106Vigor VigorComponent { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp106.Scp106Vigor Methods | Improve this Doc View Source UsePortal(Vector3, Single) Forces SCP-106 to use its portal, and Teleport to position. Declaration public bool UsePortal(Vector3 position, float cost = 0F) Parameters Type Name Description UnityEngine.Vector3 position Where the player will be teleported. System.Single cost The amount of vigor that is required and will be consumed. Returns Type Description System.Boolean If the player will be teleport. Implements IWrapper<T> ISubroutinedScpRole IHumeShieldRole Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.Scp173Role.html": {
    "href": "api/Exiled.API.Features.Roles.Scp173Role.html",
    "title": "Class Scp173Role | EXILED Docs",
    "keywords": "Class Scp173Role Defines a role that represents SCP-173. Inheritance System.Object TypeCastObject < Role > Role FpcRole Scp173Role Implements IWrapper < PlayerRoles.PlayerRoleBase > ISubroutinedScpRole IHumeShieldRole Inherited Members FpcRole.FirstPersonController FpcRole.RelativePosition FpcRole.WalkingSpeed FpcRole.SprintingSpeed FpcRole.JumpingSpeed FpcRole.CrouchingSpeed FpcRole.CanSendInputs FpcRole.IsInvisible FpcRole.IsInvisibleFor FpcRole.MoveState FpcRole.IsCrouching FpcRole.IsGrounded FpcRole.IsInDarkness FpcRole.IsHumeShieldedRole FpcRole.IsNoclipEnabled Role.Owner Role.Base Role.SpawnReason Role.SpawnFlags Role.Team Role.Side Role.Color Role.Name Role.ActiveTime Role.IsDead Role.IsAlive Role.IsValid Role.RandomSpawnLocation Role.Equals(Object) Role.ToString() Role.GetHashCode() Role.Set(RoleTypeId, SpawnReason) Role.Set(RoleTypeId, RoleSpawnFlags) Role.Set(RoleTypeId, SpawnReason, RoleSpawnFlags) TypeCastObject<Role>.Cast<TObject>() TypeCastObject<Role>.Cast<TObject>(TObject) TypeCastObject<Role>.As<TObject>() TypeCastObject<Role>.Is<TObject>(TObject) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public class Scp173Role : FpcRole, IWrapper<PlayerRoleBase>, ISubroutinedScpRole, IHumeShieldRole Properties | Improve this Doc View Source AudioPlayer Gets the SCP-173's PlayerRoles.PlayableScps.Scp173.Scp173AudioPlayer . Declaration public Scp173AudioPlayer AudioPlayer { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp173.Scp173AudioPlayer | Improve this Doc View Source BlinkCooldown Gets or sets the amount of time before SCP-173 can blink. Declaration public float BlinkCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source BlinkDistance Gets a value indicating the max distance that SCP-173 can move in a blink. Factors in BreakneckActive . Declaration public float BlinkDistance { get; } Property Value Type Description System.Single | Improve this Doc View Source BlinkReady Gets or sets a value indicating whether or not SCP-173 is able to blink. Declaration public bool BlinkReady { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source BlinkTimer Gets SCP-173's PlayerRoles.PlayableScps.Scp173.Scp173BlinkTimer . Declaration public Scp173BlinkTimer BlinkTimer { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp173.Scp173BlinkTimer | Improve this Doc View Source BreakneckActive Gets or sets a value indicating whether or not SCP-173's breakneck speed is active. Declaration public bool BreakneckActive { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source BreakneckCooldown Gets or sets the amount of time before SCP-173 can use breakneck speed again. Declaration public float BreakneckCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source HumeShieldModule Declaration public HumeShieldModuleBase HumeShieldModule { get; } Property Value Type Description PlayerRoles.PlayableScps.HumeShield.HumeShieldModuleBase | Improve this Doc View Source IsObserved Gets a value indicating whether or not SCP-173 is currently being viewed by one or more players. Declaration public bool IsObserved { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxMovementSpeed Gets SCP-173's max move speed. Declaration public float MaxMovementSpeed { get; } Property Value Type Description System.Single | Improve this Doc View Source MovementModule Gets SCP-173's movement module. Declaration public Scp173MovementModule MovementModule { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp173.Scp173MovementModule | Improve this Doc View Source MovementSpeed Gets the SCP-173's movement speed. Declaration public override float MovementSpeed { get; } Property Value Type Description System.Single Overrides FpcRole.MovementSpeed | Improve this Doc View Source ObserversTracker Gets SCP-173's PlayerRoles.PlayableScps.Scp173.Scp173ObserversTracker . Declaration public Scp173ObserversTracker ObserversTracker { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp173.Scp173ObserversTracker | Improve this Doc View Source ObservingPlayers Gets a System.Collections.Generic.IEnumerable<T> of players that are currently viewing SCP-173. Can be empty. Declaration public IEnumerable<Player> ObservingPlayers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Player > | Improve this Doc View Source SimulatedStare Gets or sets SCP-173's simulated stare. SCP-173 will be treated as though it is being looked at while this value is greater than 0 . Declaration public float SimulatedStare { get; set; } Property Value Type Description System.Single | Improve this Doc View Source SubroutineModule Declaration public SubroutineManagerModule SubroutineModule { get; } Property Value Type Description PlayerRoles.PlayableScps.Subroutines.SubroutineManagerModule | Improve this Doc View Source TantrumAbility Gets SCP-173's PlayerRoles.PlayableScps.Scp173.Scp173TantrumAbility . Declaration public Scp173TantrumAbility TantrumAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp173.Scp173TantrumAbility | Improve this Doc View Source TantrumCooldown Gets or sets the amount of time before SCP-173 can place a tantrum. Declaration public float TantrumCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source TeleportAbility Gets SCP-173's PlayerRoles.PlayableScps.Scp173.Scp173TeleportAbility . Declaration public Scp173TeleportAbility TeleportAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp173.Scp173TeleportAbility | Improve this Doc View Source TurnedPlayers Gets a list of players who will be turned away from SCP-173. Declaration public static HashSet<Player> TurnedPlayers { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source Type Declaration public override RoleTypeId Type { get; } Property Value Type Description PlayerRoles.RoleTypeId Overrides Role.Type Methods | Improve this Doc View Source SendAudio(Scp173AudioPlayer.Scp173SoundId) Plays a SCP-173 Audio Clip (Snap, Hit, Teleport). Declaration public void SendAudio(Scp173AudioPlayer.Scp173SoundId soundId) Parameters Type Name Description PlayerRoles.PlayableScps.Scp173.Scp173AudioPlayer.Scp173SoundId soundId The SoundId to Play. | Improve this Doc View Source Tantrum(Boolean, Single) Places a Tantrum (SCP-173's ability) under the player. Declaration public GameObject Tantrum(bool failIfObserved = false, float cooldown = 0F) Parameters Type Name Description System.Boolean failIfObserved Whether or not to place the tantrum if SCP-173 is currently being viewed. System.Single cooldown The cooldown until SCP-173 can place a tantrum again. Set to 0 to not affect the cooldown. Returns Type Description UnityEngine.GameObject The tantrum's UnityEngine.GameObject , or null if it cannot be placed. Implements IWrapper<T> ISubroutinedScpRole IHumeShieldRole Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.Scp939Role.html": {
    "href": "api/Exiled.API.Features.Roles.Scp939Role.html",
    "title": "Class Scp939Role | EXILED Docs",
    "keywords": "Class Scp939Role Defines a role that represents SCP-939. Inheritance System.Object TypeCastObject < Role > Role FpcRole Scp939Role Implements IWrapper < PlayerRoles.PlayerRoleBase > ISubroutinedScpRole IHumeShieldRole Inherited Members FpcRole.FirstPersonController FpcRole.RelativePosition FpcRole.WalkingSpeed FpcRole.SprintingSpeed FpcRole.JumpingSpeed FpcRole.CrouchingSpeed FpcRole.CanSendInputs FpcRole.IsInvisible FpcRole.IsInvisibleFor FpcRole.MoveState FpcRole.IsCrouching FpcRole.IsGrounded FpcRole.MovementSpeed FpcRole.IsInDarkness FpcRole.IsHumeShieldedRole FpcRole.IsNoclipEnabled Role.Owner Role.Base Role.SpawnReason Role.SpawnFlags Role.Team Role.Side Role.Color Role.Name Role.ActiveTime Role.IsDead Role.IsAlive Role.IsValid Role.RandomSpawnLocation Role.Equals(Object) Role.ToString() Role.GetHashCode() Role.Set(RoleTypeId, SpawnReason) Role.Set(RoleTypeId, RoleSpawnFlags) Role.Set(RoleTypeId, SpawnReason, RoleSpawnFlags) TypeCastObject<Role>.Cast<TObject>() TypeCastObject<Role>.Cast<TObject>(TObject) TypeCastObject<Role>.As<TObject>() TypeCastObject<Role>.Is<TObject>(TObject) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public class Scp939Role : FpcRole, IWrapper<PlayerRoleBase>, ISubroutinedScpRole, IHumeShieldRole Properties | Improve this Doc View Source AmnesticCloudAbility Gets SCP-939's PlayerRoles.PlayableScps.Scp939.Scp939AmnesticCloudAbility . Declaration public Scp939AmnesticCloudAbility AmnesticCloudAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp939.Scp939AmnesticCloudAbility | Improve this Doc View Source AmnesticCloudCooldown Gets or sets the amount of time before SCP-939 can use its amnestic cloud ability again. Declaration public float AmnesticCloudCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source AttackCooldown Gets or sets the amount of time before SCP-939 can attack again. Declaration public float AttackCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ClawAbility Gets SCP-939's PlayerRoles.PlayableScps.Scp939.Scp939ClawAbility . Declaration public Scp939ClawAbility ClawAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp939.Scp939ClawAbility | Improve this Doc View Source EnvironmentalMimicry Gets SCP-939's PlayerRoles.PlayableScps.Scp939.Mimicry.EnvironmentalMimicry . Declaration public EnvironmentalMimicry EnvironmentalMimicry { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp939.Mimicry.EnvironmentalMimicry | Improve this Doc View Source FirearmRippleTrigger Gets SCP-939's FirearmRippleTrigger . Declaration public FirearmRippleTrigger FirearmRippleTrigger { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp939.Ripples.FirearmRippleTrigger | Improve this Doc View Source FocusAbility Gets SCP-939's PlayerRoles.PlayableScps.Scp939.Scp939FocusAbility . Declaration public Scp939FocusAbility FocusAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp939.Scp939FocusAbility | Improve this Doc View Source FootstepRippleTrigger Gets SCP-939's FootstepRippleTrigger . Declaration public FootstepRippleTrigger FootstepRippleTrigger { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp939.Ripples.FootstepRippleTrigger | Improve this Doc View Source HumeShieldModule Declaration public HumeShieldModuleBase HumeShieldModule { get; } Property Value Type Description PlayerRoles.PlayableScps.HumeShield.HumeShieldModuleBase | Improve this Doc View Source IsFocused Gets a value indicating whether or not SCP-939 is currently using its focus ability. Declaration public bool IsFocused { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLunging Gets a value indicating whether or not SCP-939 is currently lunging. Declaration public bool IsLunging { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LungeAbility Gets SCP-939's PlayerRoles.PlayableScps.Scp939.Scp939LungeAbility . Declaration public Scp939LungeAbility LungeAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp939.Scp939LungeAbility | Improve this Doc View Source LungeState Gets SCP-939's PlayerRoles.PlayableScps.Scp939.Scp939LungeState . Declaration public Scp939LungeState LungeState { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp939.Scp939LungeState | Improve this Doc View Source MimicryCooldown Gets or sets the amount of time before SCP-939 can use any of its mimicry abilities again. Declaration public float MimicryCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source MimicryPointActive Gets a value indicating whether or not SCP-939 has a placed mimic point. Declaration public bool MimicryPointActive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MimicryPointPosition Gets a value indicating the position of SCP-939's mimic point. May be null if MimicryPointActive is false . Declaration public Vector3? MimicryPointPosition { get; } Property Value Type Description System.Nullable < UnityEngine.Vector3 > | Improve this Doc View Source MimicryRecorder Gets SCP-939's PlayerRoles.PlayableScps.Scp939.Mimicry.MimicryRecorder . Declaration public MimicryRecorder MimicryRecorder { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp939.Mimicry.MimicryRecorder | Improve this Doc View Source SavedVoices Gets a value indicating the amount of voices that SCP-939 has saved. Declaration public int SavedVoices { get; } Property Value Type Description System.Int32 | Improve this Doc View Source SubroutineModule Declaration public SubroutineManagerModule SubroutineModule { get; } Property Value Type Description PlayerRoles.PlayableScps.Subroutines.SubroutineManagerModule | Improve this Doc View Source Type Declaration public override RoleTypeId Type { get; } Property Value Type Description PlayerRoles.RoleTypeId Overrides Role.Type | Improve this Doc View Source VisiblePlayers Gets a list of players this SCP-939 instance can see regardless of their movement. Declaration public List<Player> VisiblePlayers { get; } Property Value Type Description System.Collections.Generic.List < Player > Methods | Improve this Doc View Source ClearRecordings() Removes all recordings of player voices. Declaration public void ClearRecordings() | Improve this Doc View Source ClearRecordings(Player) Removes all recordings of player voices. Provide an optional target to remove all the recordings of a single player. Declaration public void ClearRecordings(Player target) Parameters Type Name Description Player target If provided, will only remove recordings of the targeted player. | Improve this Doc View Source Finalize() Finalizes an instance of the Scp939Role class. Declaration protected void Finalize() | Improve this Doc View Source PlayRippleSound(UsableRippleType, Vector3, Player) Plays a Ripple Sound (Usable RippleType: Footstep, FireArm). Declaration public void PlayRippleSound(UsableRippleType ripple, Vector3 position, Player playerToSend) Parameters Type Name Description UsableRippleType ripple The RippleType to play to 939. UnityEngine.Vector3 position The Sync Position to play. Player playerToSend The Player to send the Ripple Sound. Implements IWrapper<T> ISubroutinedScpRole IHumeShieldRole Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Roles.SpectatorRole.html": {
    "href": "api/Exiled.API.Features.Roles.SpectatorRole.html",
    "title": "Class SpectatorRole | EXILED Docs",
    "keywords": "Class SpectatorRole Defines a role that represents a spectator. Inheritance System.Object TypeCastObject < Role > Role SpectatorRole OverwatchRole Implements IWrapper < PlayerRoles.PlayerRoleBase > Inherited Members Role.Owner Role.Base Role.SpawnReason Role.SpawnFlags Role.Team Role.Side Role.Color Role.Name Role.ActiveTime Role.IsDead Role.IsAlive Role.IsValid Role.RandomSpawnLocation Role.Equals(Object) Role.ToString() Role.GetHashCode() Role.Set(RoleTypeId, SpawnReason) Role.Set(RoleTypeId, RoleSpawnFlags) Role.Set(RoleTypeId, SpawnReason, RoleSpawnFlags) TypeCastObject<Role>.Cast<TObject>() TypeCastObject<Role>.Cast<TObject>(TObject) TypeCastObject<Role>.As<TObject>() TypeCastObject<Role>.Is<TObject>(TObject) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Roles Assembly : Exiled.API.dll Syntax public class SpectatorRole : Role, IWrapper<PlayerRoleBase> Properties | Improve this Doc View Source DeadTime Gets the total amount of time the player has been dead. Declaration public TimeSpan DeadTime { get; } Property Value Type Description System.TimeSpan | Improve this Doc View Source DeathPosition Gets the Player 's death position. Declaration public Vector3 DeathPosition { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source DeathTime Gets the System.DateTime at which the player died. Declaration public DateTime DeathTime { get; } Property Value Type Description System.DateTime | Improve this Doc View Source IsReadyToRespawn Gets a value indicating whether the Player is ready to respawn or not. Declaration public bool IsReadyToRespawn { get; } Property Value Type Description System.Boolean | Improve this Doc View Source SpectatedPlayer Gets currently spectated Player by this Player . May be null . Declaration public Player SpectatedPlayer { get; } Property Value Type Description Player | Improve this Doc View Source Type Declaration public override RoleTypeId Type { get; } Property Value Type Description PlayerRoles.RoleTypeId Overrides Role.Type Implements IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Room.html": {
    "href": "api/Exiled.API.Features.Room.html",
    "title": "Class Room | EXILED Docs",
    "keywords": "Class Room The in-game room. Inheritance System.Object UnityEngine.Object UnityEngine.Component UnityEngine.Behaviour UnityEngine.MonoBehaviour Room Implements IWorldSpace IPosition IRotation Inherited Members UnityEngine.MonoBehaviour.IsInvoking() UnityEngine.MonoBehaviour.CancelInvoke() UnityEngine.MonoBehaviour.Invoke(System.String, System.Single) UnityEngine.MonoBehaviour.InvokeRepeating(System.String, System.Single, System.Single) UnityEngine.MonoBehaviour.CancelInvoke(System.String) UnityEngine.MonoBehaviour.IsInvoking(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String) UnityEngine.MonoBehaviour.StartCoroutine(System.String, System.Object) UnityEngine.MonoBehaviour.StartCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StartCoroutine_Auto(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(System.Collections.IEnumerator) UnityEngine.MonoBehaviour.StopCoroutine(UnityEngine.Coroutine) UnityEngine.MonoBehaviour.StopCoroutine(System.String) UnityEngine.MonoBehaviour.StopAllCoroutines() UnityEngine.MonoBehaviour.print(System.Object) UnityEngine.MonoBehaviour.useGUILayout UnityEngine.Behaviour.enabled UnityEngine.Behaviour.isActiveAndEnabled UnityEngine.Component.GetComponent(System.Type) UnityEngine.Component.GetComponent<T>() UnityEngine.Component.TryGetComponent(System.Type, UnityEngine.Component) UnityEngine.Component.TryGetComponent<T>(T) UnityEngine.Component.GetComponent(System.String) UnityEngine.Component.GetComponentInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentInChildren(System.Type) UnityEngine.Component.GetComponentInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentInChildren<T>() UnityEngine.Component.GetComponentsInChildren(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInChildren(System.Type) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean) UnityEngine.Component.GetComponentsInChildren<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInChildren<T>() UnityEngine.Component.GetComponentsInChildren<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentInParent(System.Type) UnityEngine.Component.GetComponentInParent<T>(System.Boolean) UnityEngine.Component.GetComponentInParent<T>() UnityEngine.Component.GetComponentsInParent(System.Type, System.Boolean) UnityEngine.Component.GetComponentsInParent(System.Type) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean) UnityEngine.Component.GetComponentsInParent<T>(System.Boolean, System.Collections.Generic.List<T>) UnityEngine.Component.GetComponentsInParent<T>() UnityEngine.Component.GetComponents(System.Type) UnityEngine.Component.GetComponents(System.Type, System.Collections.Generic.List<UnityEngine.Component>) UnityEngine.Component.GetComponents<T>(System.Collections.Generic.List<T>) UnityEngine.Component.GetComponents<T>() UnityEngine.Component.CompareTag(System.String) UnityEngine.Component.SendMessageUpwards(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessageUpwards(System.String, System.Object) UnityEngine.Component.SendMessageUpwards(System.String) UnityEngine.Component.SendMessageUpwards(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, System.Object) UnityEngine.Component.SendMessage(System.String) UnityEngine.Component.SendMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.SendMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object, UnityEngine.SendMessageOptions) UnityEngine.Component.BroadcastMessage(System.String, System.Object) UnityEngine.Component.BroadcastMessage(System.String) UnityEngine.Component.BroadcastMessage(System.String, UnityEngine.SendMessageOptions) UnityEngine.Component.transform UnityEngine.Component.gameObject UnityEngine.Component.tag UnityEngine.Object.GetInstanceID() UnityEngine.Object.GetHashCode() UnityEngine.Object.Equals(System.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform) UnityEngine.Object.Instantiate(UnityEngine.Object, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Instantiate<T>(T) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Vector3, UnityEngine.Quaternion, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform) UnityEngine.Object.Instantiate<T>(T, UnityEngine.Transform, System.Boolean) UnityEngine.Object.Destroy(UnityEngine.Object, System.Single) UnityEngine.Object.Destroy(UnityEngine.Object) UnityEngine.Object.DestroyImmediate(UnityEngine.Object, System.Boolean) UnityEngine.Object.DestroyImmediate(UnityEngine.Object) UnityEngine.Object.FindObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfType(System.Type, System.Boolean) UnityEngine.Object.DontDestroyOnLoad(UnityEngine.Object) UnityEngine.Object.DestroyObject(UnityEngine.Object, System.Single) UnityEngine.Object.DestroyObject(UnityEngine.Object) UnityEngine.Object.FindSceneObjectsOfType(System.Type) UnityEngine.Object.FindObjectsOfTypeIncludingAssets(System.Type) UnityEngine.Object.FindObjectsOfType<T>() UnityEngine.Object.FindObjectsOfType<T>(System.Boolean) UnityEngine.Object.FindObjectOfType<T>() UnityEngine.Object.FindObjectOfType<T>(System.Boolean) UnityEngine.Object.FindObjectsOfTypeAll(System.Type) UnityEngine.Object.FindObjectOfType(System.Type) UnityEngine.Object.FindObjectOfType(System.Type, System.Boolean) UnityEngine.Object.name UnityEngine.Object.hideFlags System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Room : MonoBehaviour, IWorldSpace, IPosition, IRotation Properties | Improve this Doc View Source AreLightsOff Gets or sets a value indicating whether or not the lights in this room are currently off. Declaration public bool AreLightsOff { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Cameras Gets a System.Collections.Generic.IEnumerable<T> of Camera in the Room . Declaration public IEnumerable<Camera> Cameras { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Camera > | Improve this Doc View Source Color Gets or sets the color of the room's lights by changing the warhead color. Declaration public Color Color { get; set; } Property Value Type Description UnityEngine.Color | Improve this Doc View Source Doors Gets a System.Collections.Generic.IEnumerable<T> of Door in the Room . Declaration public IEnumerable<Door> Doors { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Door > | Improve this Doc View Source FlickerableLightController Gets the room's FlickerableLightController. Declaration public FlickerableLightController FlickerableLightController { get; } Property Value Type Description FlickerableLightController | Improve this Doc View Source FlickerableLightControllerNetIdentity Gets the FlickerableLightController's NetworkIdentity. Declaration public NetworkIdentity FlickerableLightControllerNetIdentity { get; } Property Value Type Description Mirror.NetworkIdentity | Improve this Doc View Source GameObject Gets the Room UnityEngine.GameObject . Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source Identifier Gets a reference to the room's MapGeneration.RoomIdentifier . Declaration public RoomIdentifier Identifier { get; } Property Value Type Description MapGeneration.RoomIdentifier | Improve this Doc View Source LightIntensity Gets or sets the intensity of the lights in the room. Declaration public float LightIntensity { get; set; } Property Value Type Description System.Single | Improve this Doc View Source List Gets a System.Collections.Generic.IEnumerable<T> of Room which contains all the Room instances. Declaration public static IEnumerable<Room> List { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Room > | Improve this Doc View Source Name Gets the Room name. Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Pickups Gets a System.Collections.Generic.IEnumerable<T> of Pickup in the Room . Declaration public IEnumerable<Pickup> Pickups { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Pickup > | Improve this Doc View Source Players Gets a System.Collections.Generic.IEnumerable<T> of Player in the Room . Declaration public IEnumerable<Player> Players { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Player > | Improve this Doc View Source Position Gets the Room position. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source RoomName Gets the MapGeneration.RoomName enum representing this room. Declaration public RoomName RoomName { get; } Property Value Type Description MapGeneration.RoomName Remarks This property is the internal MapGeneration.RoomName of the room. For the actual string of the Room's name, see Name . See Also Name | Improve this Doc View Source Rotation Gets the Room rotation. Declaration public Quaternion Rotation { get; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Speaker Gets a System.Collections.Generic.IEnumerable<T> of PlayerRoles.PlayableScps.Scp079.Scp079Speaker in the Room . Declaration public IEnumerable<Scp079Speaker> Speaker { get; } Property Value Type Description System.Collections.Generic.IEnumerable < PlayerRoles.PlayableScps.Scp079.Scp079Speaker > | Improve this Doc View Source TeslaGate Gets a reference to the TeslaGate in the room, or null if this room does not contain one. Declaration public TeslaGate TeslaGate { get; } Property Value Type Description TeslaGate | Improve this Doc View Source Transform Gets the Room UnityEngine.Transform . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source Type Gets the RoomType . Declaration public RoomType Type { get; } Property Value Type Description RoomType | Improve this Doc View Source Zone Gets the ZoneType in which the room is located. Declaration public ZoneType Zone { get; } Property Value Type Description ZoneType Methods | Improve this Doc View Source Blackout(Single, DoorLockType) Locks all the doors and turns off all lights in the room. Declaration public void Blackout(float duration, DoorLockType lockType = DoorLockType.Regular079) Parameters Type Name Description System.Single duration Duration in seconds, or -1 for permanent blackout. DoorLockType lockType DoorLockType of the blackout. See Also TurnOffAllLights(Single, ZoneType) TurnOffAllLights(Single, IEnumerable<ZoneType>) | Improve this Doc View Source FindParentRoom(GameObject) Tries to find the room that a GameObject is inside, first using the Transform 's parents, then using a Raycast if no room was found. Declaration public static Room FindParentRoom(GameObject objectInRoom) Parameters Type Name Description UnityEngine.GameObject objectInRoom The GameObject inside the room. Returns Type Description Room The Room that the GameObject is located inside. Can be null . See Also Get(Vector3) | Improve this Doc View Source Get(RoomType) Gets a Room given the specified RoomType . Declaration public static Room Get(RoomType roomType) Parameters Type Name Description RoomType roomType The RoomType to search for. Returns Type Description Room The Room with the given RoomType or null if not found. | Improve this Doc View Source Get(ZoneType) Gets a System.Collections.Generic.IEnumerable<T> of Room given the specified ZoneType . Declaration public static IEnumerable<Room> Get(ZoneType zoneType) Parameters Type Name Description ZoneType zoneType The ZoneType to search for. Returns Type Description System.Collections.Generic.IEnumerable < Room > The Room with the given ZoneType or null if not found. | Improve this Doc View Source Get(FlickerableLightController) Gets a Room from a given MapGeneration.RoomIdentifier . Declaration public static Room Get(FlickerableLightController flickerableLightController) Parameters Type Name Description FlickerableLightController flickerableLightController The FlickerableLightController to search with. Returns Type Description Room The Room of the given identified, if any. Can be null . | Improve this Doc View Source Get(RoomIdentifier) Gets a Room from a given Identifier . Declaration public static Room Get(RoomIdentifier roomIdentifier) Parameters Type Name Description MapGeneration.RoomIdentifier roomIdentifier The Identifier to search with. Returns Type Description Room The Room of the given identified, if any. Can be null . | Improve this Doc View Source Get(RelativePosition) Gets a Room given the specified RelativePositioning.RelativePosition . Declaration public static Room Get(RelativePosition position) Parameters Type Name Description RelativePositioning.RelativePosition position The RelativePositioning.RelativePosition to search for. Returns Type Description Room The Room with the given RelativePositioning.RelativePosition or null if not found. | Improve this Doc View Source Get(Func<Room, Boolean>) Gets a System.Collections.Generic.IEnumerable<T> of Room filtered based on a predicate. Declaration public static IEnumerable<Room> Get(Func<Room, bool> predicate) Parameters Type Name Description System.Func < Room , System.Boolean > predicate The condition to satify. Returns Type Description System.Collections.Generic.IEnumerable < Room > A System.Collections.Generic.IEnumerable<T> of Room which contains elements that satify the condition. | Improve this Doc View Source Get(Vector3) Gets a Room given the specified UnityEngine.Vector3 . Declaration public static Room Get(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position The UnityEngine.Vector3 to search for. Returns Type Description Room The Room with the given UnityEngine.Vector3 or null if not found. | Improve this Doc View Source LocalPosition(Vector3) Returns the local space position, based on a world space position. Declaration public Vector3 LocalPosition(Vector3 position) Parameters Type Name Description UnityEngine.Vector3 position World position. Returns Type Description UnityEngine.Vector3 Local position, based on the room. | Improve this Doc View Source LockDown(Single, DoorLockType) Locks all the doors in the room. Declaration public void LockDown(float duration, DoorLockType lockType = DoorLockType.Regular079) Parameters Type Name Description System.Single duration Duration in seconds, or -1 for permanent lockdown. DoorLockType lockType DoorLockType of the lockdown. See Also LockAll(Single, ZoneType, DoorLockType) LockAll(Single, IEnumerable<ZoneType>, DoorLockType) | Improve this Doc View Source Random(ZoneType) Gets a random Room . Declaration public static Room Random(ZoneType zoneType = ZoneType.Unspecified) Parameters Type Name Description ZoneType zoneType Filters by ZoneType . Returns Type Description Room Room object. | Improve this Doc View Source ResetColor() Resets the room color to default. Declaration public void ResetColor() | Improve this Doc View Source ToString() Returns the Room in a human-readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Room-related data. Overrides UnityEngine.Object.ToString() | Improve this Doc View Source TurnOffLights(Single) Flickers the room's lights off for a duration. Declaration public void TurnOffLights(float duration) Parameters Type Name Description System.Single duration Duration in seconds. | Improve this Doc View Source UnlockAll() Unlocks all the doors in the room. Declaration public void UnlockAll() See Also UnlockAll() UnlockAll(ZoneType) UnlockAll(IEnumerable<ZoneType>) UnlockAll(Func<Door, Boolean>) Implements IWorldSpace IPosition IRotation Extension Methods MirrorExtensions.SetRoomColorForTargetOnly(Room, Player, Color) MirrorExtensions.SetRoomLightIntensityForTargetOnly(Room, Player, Single) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Round.html": {
    "href": "api/Exiled.API.Features.Round.html",
    "title": "Class Round | EXILED Docs",
    "keywords": "Class Round A set of tools to handle the round more easily. Inheritance System.Object Round Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Round Properties | Improve this Doc View Source AliveSides Gets a System.Collections.Generic.IEnumerable<T> indicating the sides that are currently alive. Declaration public static IEnumerable<Side> AliveSides { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Side > | Improve this Doc View Source ChangedIntoZombies Gets or sets the number of players who have been turned into zombies. Declaration public static int ChangedIntoZombies { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ElapsedTime Gets the time elapsed from the start of the round. Declaration public static TimeSpan ElapsedTime { get; } Property Value Type Description System.TimeSpan See Also StartedTime | Improve this Doc View Source EscapedDClasses Gets or sets the number of players who have escaped as PlayerRoles.RoleTypeId.ClassD . Declaration public static int EscapedDClasses { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source EscapedScientists Gets or sets the number of players who have escaped as PlayerRoles.RoleTypeId.Scientist . Declaration public static int EscapedScientists { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source InProgress Gets a value indicating whether the round in progress or not. Declaration public static bool InProgress { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsEnded Gets a value indicating whether the round is ended or not. Declaration public static bool IsEnded { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLobby Gets a value indicating whether the round is lobby or not. Declaration public static bool IsLobby { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLobbyLocked Gets or sets a value indicating whether the lobby is locked or not. Declaration public static bool IsLobbyLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLocked Gets or sets a value indicating whether the round is locked or not. Declaration public static bool IsLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsStarted Gets a value indicating whether the round is started or not. Declaration public static bool IsStarted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Kills Gets or sets the number of kills. Declaration public static int Kills { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source KillsByScp Gets or sets the number of kills made by SCPs. Declaration public static int KillsByScp { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source StartedTime Gets the start time of the round. Declaration public static DateTime StartedTime { get; } Property Value Type Description System.DateTime See Also ElapsedTime IsStarted | Improve this Doc View Source SurvivingSCPs Gets or sets the number of surviving SCPs. Declaration public static int SurvivingSCPs { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source UptimeRounds Gets the number of rounds since the server started. Declaration public static int UptimeRounds { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source EndRound(Boolean) Forces the round to end, regardless of which factions are alive. Declaration public static bool EndRound(bool forceEnd = false) Parameters Type Name Description System.Boolean forceEnd Indicates whether or not it'll force the restart with no check if it's locked. Returns Type Description System.Boolean A System.Boolean describing whether or not the round was successfully ended. | Improve this Doc View Source Restart(Boolean, Boolean, ServerStatic.NextRoundAction) Restarts the round with custom settings. Declaration public static void Restart(bool fastRestart = true, bool overrideRestartAction = false, ServerStatic.NextRoundAction restartAction = ServerStatic.NextRoundAction.DoNothing) Parameters Type Name Description System.Boolean fastRestart Indicates whether or not it'll be a fast restart. If it's a fast restart, then players won't be reconnected from the server; otherwise, they will. System.Boolean overrideRestartAction Overrides a value of ServerStatic.NextRoundAction . Makes sense if someone used a command to set another action. ServerStatic.NextRoundAction restartAction The ServerStatic.NextRoundAction . ServerStatic.NextRoundAction.DoNothing - does nothing, just restarts the round silently. ServerStatic.NextRoundAction.Restart - restarts the server, reconnects all players. ServerStatic.NextRoundAction.Shutdown - shutdowns the server, also disconnects all players. | Improve this Doc View Source RestartSilently() Restarts the round silently. Declaration public static void RestartSilently() | Improve this Doc View Source Start() Start the round. Declaration public static void Start()"
  },
  "api/Exiled.API.Features.Scp914.html": {
    "href": "api/Exiled.API.Features.Scp914.html",
    "title": "Class Scp914 | EXILED Docs",
    "keywords": "Class Scp914 A set of tools to modify SCP-914's behaviour. Inheritance System.Object Scp914 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Scp914 Properties | Improve this Doc View Source ConfigMode Gets or sets SCP-914's config mode. Declaration public static Scp914Mode ConfigMode { get; set; } Property Value Type Description Scp914.Scp914Mode | Improve this Doc View Source GameObject Gets SCP-914's UnityEngine.GameObject . Declaration public static GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source IntakeBooth Gets the intake booth UnityEngine.Transform . Declaration public static Transform IntakeBooth { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source IntakePosition Gets the position of SCP-914's intake chamber. Declaration public static Vector3 IntakePosition { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source IsWorking Gets a value indicating whether SCP-914 is active and currently processing items. Declaration public static bool IsWorking { get; } Property Value Type Description System.Boolean | Improve this Doc View Source KnobStatus Gets or sets SCP-914's Scp914.Scp914KnobSetting . Declaration public static Scp914KnobSetting KnobStatus { get; set; } Property Value Type Description Scp914.Scp914KnobSetting | Improve this Doc View Source OutputBooth Gets the output booth UnityEngine.Transform . Declaration public static Transform OutputBooth { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source OutputPosition Gets the position of SCP-914's output chamber. Declaration public static Vector3 OutputPosition { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Scp914Controller Gets the cached Scp914.Scp914Controller . Declaration public static Scp914Controller Scp914Controller { get; } Property Value Type Description Scp914.Scp914Controller | Improve this Doc View Source Transform Gets SCP-914's UnityEngine.Transform . Declaration public static Transform Transform { get; } Property Value Type Description UnityEngine.Transform Methods | Improve this Doc View Source PlaySound(Byte) Plays the SCP-914's sound. Declaration public static void PlaySound(byte soundId) Parameters Type Name Description System.Byte soundId The soundId to play. Remarks There are two sounds only. The values to identify them are 0 , which stands for the soundId played when SCP-914 is being activated, and 1 , which stands for the soundId played when SCP-914's knob state is being changed. | Improve this Doc View Source Start() Starts SCP-914. Declaration public static void Start()"
  },
  "api/Exiled.API.Features.Server.html": {
    "href": "api/Exiled.API.Features.Server.html",
    "title": "Class Server | EXILED Docs",
    "keywords": "Class Server A set of tools to easily work with the server. Inheritance System.Object Server Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Server Properties | Improve this Doc View Source Broadcast Gets the cached Broadcast component. Declaration public static Broadcast Broadcast { get; } Property Value Type Description Broadcast | Improve this Doc View Source BuildType Gets a value indicating the type of build this server is hosted on. Declaration public static Version.VersionType BuildType { get; } Property Value Type Description GameCore.Version.VersionType | Improve this Doc View Source Frametime Gets the actual frametime of the server. Declaration public static double Frametime { get; } Property Value Type Description System.Double | Improve this Doc View Source FriendlyFire Gets or sets a value indicating whether or not friendly fire is enabled. Declaration public static bool FriendlyFire { get; set; } Property Value Type Description System.Boolean See Also IsFriendlyFireEnabled | Improve this Doc View Source Host Gets the player's host of the server. Might be null when called when the server isn't loaded. Declaration public static Player Host { get; } Property Value Type Description Player | Improve this Doc View Source IpAddress Gets the Ip address of the server. Declaration public static string IpAddress { get; } Property Value Type Description System.String | Improve this Doc View Source IsBeta Gets a value indicating whether or not this server is on a beta version of SCP:SL. Declaration public static bool IsBeta { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsDedicated Gets a value indicating whether or not this server is a dedicated server. Declaration public static bool IsDedicated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsHeavilyModded Gets or sets a value indicating whether the server is marked as Heavily Modded. Read the VSR for more info about its usage. Declaration public static bool IsHeavilyModded { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsIdleModeEnabled Gets or sets a value indicating whether or not idle mode is enabled. Declaration public static bool IsIdleModeEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsWhitelisted Gets or sets a value indicating whether or not this server has the whitelist enabled. Declaration public static bool IsWhitelisted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LateJoinEnabled Gets a value indicating whether or not late join is enabled. Declaration public static bool LateJoinEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LateJoinTime Gets the late join time, in seconds. If a player joins less than this many seconds into a game, they will be given a random class. Declaration public static float LateJoinTime { get; } Property Value Type Description System.Single | Improve this Doc View Source MaxPlayerCount Gets or sets the maximum number of players able to be on the server. Declaration public static int MaxPlayerCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Name Gets or sets the name of the server. Declaration public static string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source PermissionsHandler Gets the RemoteAdmin permissions handler. Declaration public static PermissionsHandler PermissionsHandler { get; } Property Value Type Description PermissionsHandler | Improve this Doc View Source PlayerCount Gets the number of players currently on the server. Declaration public static int PlayerCount { get; } Property Value Type Description System.Int32 See Also List | Improve this Doc View Source PluginAssemblies Gets a dictionary that pairs assemblies with their associated plugins. Declaration public static Dictionary<Assembly, IPlugin<IConfig>> PluginAssemblies { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.Reflection.Assembly , IPlugin < IConfig >> | Improve this Doc View Source Port Gets the port of the server. Declaration public static ushort Port { get; } Property Value Type Description System.UInt16 | Improve this Doc View Source SendSpawnMessage Gets the cached SendSpawnMessage System.Reflection.MethodInfo . Declaration public static MethodInfo SendSpawnMessage { get; } Property Value Type Description System.Reflection.MethodInfo | Improve this Doc View Source SessionVariables Gets the dictionary of the server's session variables. Session variables can be used to save temporary data. Data is stored in a System.Collections.Generic.Dictionary<TKey, TValue> . The key of the data is always a System.String , whereas the value can be any System.Object . The data stored in a session variable can be accessed by different assemblies; it is recommended to uniquely identify stored data so that it does not conflict with other plugins that may also be using the same name. Data saved with session variables is not being saved on server restart. If the data must be saved after a restart, a database must be used instead. Declaration public static Dictionary<string, object> SessionVariables { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , System.Object > | Improve this Doc View Source SpawnProtectTime Gets or sets the spawn protection time, in seconds. Declaration [Obsolete(\"Use Respawn.SpawnProtectTime.\")] public static float SpawnProtectTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source StreamingAllowed Gets a value indicating whether or not streaming of this version is allowed. Declaration public static bool StreamingAllowed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Tps Gets the actual ticks per second of the server. Declaration public static double Tps { get; } Property Value Type Description System.Double | Improve this Doc View Source Version Gets the server's version. Declaration public static string Version { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Restart() Restarts the server, reconnects all players. Declaration public static void Restart() See Also RestartRedirect(UInt16) | Improve this Doc View Source RestartRedirect(UInt16) Redirects players to a server on another port, restarts the current server. Declaration public static bool RestartRedirect(ushort redirectPort) Parameters Type Name Description System.UInt16 redirectPort The port to redirect players to. Returns Type Description System.Boolean true if redirection was successful; otherwise, false . Remarks If the returned value is false , the server won't restart. | Improve this Doc View Source RunCommand(String, CommandSender) Runs a server command. Declaration public static void RunCommand(string command, CommandSender sender = null) Parameters Type Name Description System.String command The command to be run. CommandSender sender The CommandSender running the command. | Improve this Doc View Source Shutdown() Shutdowns the server, disconnects all players. Declaration public static void Shutdown() See Also ShutdownRedirect(UInt16) | Improve this Doc View Source ShutdownRedirect(UInt16) Redirects players to a server on another port, shutdowns the current server. Declaration public static bool ShutdownRedirect(ushort redirectPort) Parameters Type Name Description System.UInt16 redirectPort The port to redirect players to. Returns Type Description System.Boolean true if redirection was successful; otherwise, false . Remarks If the returned value is false , the server won't shutdown. | Improve this Doc View Source TryGetSessionVariable<T>(String, out T) Safely gets an System.Object from SessionVariables , then casts it to T . Declaration public static bool TryGetSessionVariable<T>(string key, out T result) Parameters Type Name Description System.String key The key of the object to get. T result When this method returns, contains the value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter is used. Returns Type Description System.Boolean true if the SessionVariables contains an element with the specified key; otherwise, false . Type Parameters Name Description T The returned object type."
  },
  "api/Exiled.API.Features.Spawn.DynamicSpawnPoint.html": {
    "href": "api/Exiled.API.Features.Spawn.DynamicSpawnPoint.html",
    "title": "Class DynamicSpawnPoint | EXILED Docs",
    "keywords": "Class DynamicSpawnPoint Handles dynamic spawn locations. Inheritance System.Object SpawnPoint DynamicSpawnPoint Implements IPosition Inherited Members SpawnPoint.Deconstruct(Single, Vector3) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Spawn Assembly : Exiled.API.dll Syntax public class DynamicSpawnPoint : SpawnPoint, IPosition Properties | Improve this Doc View Source Chance Declaration public override float Chance { get; set; } Property Value Type Description System.Single Overrides SpawnPoint.Chance | Improve this Doc View Source Location Gets or sets the SpawnLocationType for this item. Declaration public SpawnLocationType Location { get; set; } Property Value Type Description SpawnLocationType | Improve this Doc View Source Name Declaration public override string Name { get; set; } Property Value Type Description System.String Overrides SpawnPoint.Name | Improve this Doc View Source Position Declaration public override Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 Overrides SpawnPoint.Position Implements IPosition Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Spawn.html": {
    "href": "api/Exiled.API.Features.Spawn.html",
    "title": "Namespace Exiled.API.Features.Spawn | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Spawn Classes DynamicSpawnPoint Handles dynamic spawn locations. RoleSpawnPoint Defines a spawn point that follows a base-game role spawn point. SpawnLocation Represents a spawn location for a Role . SpawnPoint Defines item spawn properties. SpawnProperties Handles special properties of spawning an item. StaticSpawnPoint Handles static spawn locations."
  },
  "api/Exiled.API.Features.Spawn.RoleSpawnPoint.html": {
    "href": "api/Exiled.API.Features.Spawn.RoleSpawnPoint.html",
    "title": "Class RoleSpawnPoint | EXILED Docs",
    "keywords": "Class RoleSpawnPoint Defines a spawn point that follows a base-game role spawn point. Inheritance System.Object SpawnPoint RoleSpawnPoint Implements IPosition Inherited Members SpawnPoint.Deconstruct(Single, Vector3) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Spawn Assembly : Exiled.API.dll Syntax public class RoleSpawnPoint : SpawnPoint, IPosition Properties | Improve this Doc View Source Chance Declaration public override float Chance { get; set; } Property Value Type Description System.Single Overrides SpawnPoint.Chance | Improve this Doc View Source Name Declaration public override string Name { get; set; } Property Value Type Description System.String Overrides SpawnPoint.Name | Improve this Doc View Source Position Declaration public override Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 Overrides SpawnPoint.Position | Improve this Doc View Source Role Gets or sets the role type used for this spawn. Declaration public RoleTypeId Role { get; set; } Property Value Type Description PlayerRoles.RoleTypeId Implements IPosition Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Spawn.SpawnLocation.html": {
    "href": "api/Exiled.API.Features.Spawn.SpawnLocation.html",
    "title": "Class SpawnLocation | EXILED Docs",
    "keywords": "Class SpawnLocation Represents a spawn location for a Role . Inheritance System.Object SpawnLocation Implements IPosition Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Spawn Assembly : Exiled.API.dll Syntax public class SpawnLocation : IPosition Constructors | Improve this Doc View Source SpawnLocation(RoleTypeId, Vector3, Single) Initializes a new instance of the SpawnLocation class. Declaration public SpawnLocation(RoleTypeId roleType, Vector3 position, float horizontalRotation) Parameters Type Name Description PlayerRoles.RoleTypeId roleType The PlayerRoles.RoleTypeId this spawn is for. UnityEngine.Vector3 position The UnityEngine.Vector3 position of the spawn. System.Single horizontalRotation The horizontal rotation of the spawn. Properties | Improve this Doc View Source HorizontalRotation Gets the horizontal rotation of the spawn. Declaration public float HorizontalRotation { get; } Property Value Type Description System.Single | Improve this Doc View Source Position Gets the position of the spawn. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source RoleType Gets the PlayerRoles.RoleTypeId the spawn is for. Declaration public RoleTypeId RoleType { get; } Property Value Type Description PlayerRoles.RoleTypeId Implements IPosition Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Spawn.SpawnPoint.html": {
    "href": "api/Exiled.API.Features.Spawn.SpawnPoint.html",
    "title": "Class SpawnPoint | EXILED Docs",
    "keywords": "Class SpawnPoint Defines item spawn properties. Inheritance System.Object SpawnPoint DynamicSpawnPoint RoleSpawnPoint StaticSpawnPoint Implements IPosition Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Spawn Assembly : Exiled.API.dll Syntax public abstract class SpawnPoint : IPosition Properties | Improve this Doc View Source Chance Gets or sets the spawn chance. Declaration public abstract float Chance { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Name Gets or sets this spawn point name. Declaration public abstract string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Position Gets or sets this spawn point position. Declaration public abstract Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 Methods | Improve this Doc View Source Deconstruct(out Single, out Vector3) Deconstructs the class into usable variables. Declaration public void Deconstruct(out float chance, out Vector3 position) Parameters Type Name Description System.Single chance UnityEngine.Vector3 position Implements IPosition Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Spawn.SpawnProperties.html": {
    "href": "api/Exiled.API.Features.Spawn.SpawnProperties.html",
    "title": "Class SpawnProperties | EXILED Docs",
    "keywords": "Class SpawnProperties Handles special properties of spawning an item. Inheritance System.Object SpawnProperties Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Spawn Assembly : Exiled.API.dll Syntax public class SpawnProperties Properties | Improve this Doc View Source DynamicSpawnPoints Gets or sets a System.Collections.Generic.List<T> of possible dynamic spawn points. Declaration public List<DynamicSpawnPoint> DynamicSpawnPoints { get; set; } Property Value Type Description System.Collections.Generic.List < DynamicSpawnPoint > | Improve this Doc View Source Limit Gets or sets a value indicating how many of the item can be spawned when the round starts. Declaration public uint Limit { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source RoleSpawnPoints Gets or sets a System.Collections.Generic.List<T> of possible role-based spawn points. Declaration public List<RoleSpawnPoint> RoleSpawnPoints { get; set; } Property Value Type Description System.Collections.Generic.List < RoleSpawnPoint > | Improve this Doc View Source StaticSpawnPoints Gets or sets a System.Collections.Generic.List<T> of possible static spawn points. Declaration public List<StaticSpawnPoint> StaticSpawnPoints { get; set; } Property Value Type Description System.Collections.Generic.List < StaticSpawnPoint > Methods | Improve this Doc View Source Count() Counts how many spawn points are in this instance. Declaration public int Count() Returns Type Description System.Int32 How many spawn points there are. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Spawn.StaticSpawnPoint.html": {
    "href": "api/Exiled.API.Features.Spawn.StaticSpawnPoint.html",
    "title": "Class StaticSpawnPoint | EXILED Docs",
    "keywords": "Class StaticSpawnPoint Handles static spawn locations. Inheritance System.Object SpawnPoint StaticSpawnPoint Implements IPosition Inherited Members SpawnPoint.Deconstruct(Single, Vector3) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Spawn Assembly : Exiled.API.dll Syntax public class StaticSpawnPoint : SpawnPoint, IPosition Properties | Improve this Doc View Source Chance Declaration public override float Chance { get; set; } Property Value Type Description System.Single Overrides SpawnPoint.Chance | Improve this Doc View Source Name Declaration public override string Name { get; set; } Property Value Type Description System.String Overrides SpawnPoint.Name | Improve this Doc View Source Position Declaration public override Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 Overrides SpawnPoint.Position Implements IPosition Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.TeslaGate.html": {
    "href": "api/Exiled.API.Features.TeslaGate.html",
    "title": "Class TeslaGate | EXILED Docs",
    "keywords": "Class TeslaGate The in-game tesla gate. Inheritance System.Object TeslaGate Implements IWrapper < TeslaGate > IWorldSpace IPosition IRotation Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class TeslaGate : IWrapper<TeslaGate>, IWorldSpace, IPosition, IRotation Properties | Improve this Doc View Source ActivationTime Gets or sets the tesla gate's windup time to wait before generating the shock. Declaration public float ActivationTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Base Gets the base TeslaGate . Declaration public TeslaGate Base { get; } Property Value Type Description TeslaGate | Improve this Doc View Source CooldownTime Gets or sets the tesla gate's cooldown to wait before the next shock. Declaration public float CooldownTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source GameObject Gets the tesla gate's UnityEngine.GameObject . Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source HurtRange Gets or sets the tesla gate's radius from which players can be hurted. Declaration public Vector3 HurtRange { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source IdleRange Gets or sets the tesla gate's distance from which players must stand for it to enter idle mode. Declaration public float IdleRange { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IgnoredPlayers Gets or sets a System.Collections.Generic.HashSet<T> of Player which contains all the players ignored by tesla gates. Declaration public static HashSet<Player> IgnoredPlayers { get; set; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source IgnoredRoles Gets or sets a System.Collections.Generic.HashSet<T> of PlayerRoles.RoleTypeId which contains all the roles ignored by tesla gates. Declaration public static List<RoleTypeId> IgnoredRoles { get; set; } Property Value Type Description System.Collections.Generic.List < PlayerRoles.RoleTypeId > | Improve this Doc View Source IgnoredTeams Gets or sets a System.Collections.Generic.HashSet<T> of PlayerRoles.Team which contains all the teams ignored by tesla gates. Declaration public static List<Team> IgnoredTeams { get; set; } Property Value Type Description System.Collections.Generic.List < PlayerRoles.Team > | Improve this Doc View Source InactiveTime Gets or sets the tesla gate's inactive time. Declaration public float InactiveTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsIdling Gets or sets a value indicating whether the tesla gate is idling. Declaration public bool IsIdling { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsShocking Gets a value indicating whether or not the tesla gate's shock burst is in progess. Declaration public bool IsShocking { get; } Property Value Type Description System.Boolean | Improve this Doc View Source List Gets a System.Collections.Generic.IEnumerable<T> of TeslaGate which contains all the TeslaGate instances. Declaration public static IEnumerable<TeslaGate> List { get; } Property Value Type Description System.Collections.Generic.IEnumerable < TeslaGate > | Improve this Doc View Source PlayersInHurtRange Gets a System.Collections.Generic.IEnumerable<T> of Player which contains all the players inside the hurt range. Declaration public IEnumerable<Player> PlayersInHurtRange { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Player > | Improve this Doc View Source PlayersInIdleRange Gets a System.Collections.Generic.IEnumerable<T> of Player which contains all the players inside the idle range. Declaration public IEnumerable<Player> PlayersInIdleRange { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Player > | Improve this Doc View Source PlayersInTriggerRange Gets a System.Collections.Generic.IEnumerable<T> of Player which contains all the players inside the trigger range. Declaration public IEnumerable<Player> PlayersInTriggerRange { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Player > | Improve this Doc View Source Position Gets the tesla gate's position. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Room Gets the tesla gate's Room which is located in. Declaration public Room Room { get; } Property Value Type Description Room | Improve this Doc View Source Rotation Gets the tesla gate's rotation. Declaration public Quaternion Rotation { get; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source TantrumsToDestroy Gets a System.Collections.Generic.List<T> of UnityEngine.GameObject which contains all the tantrums to destroy. Declaration public List<TantrumEnvironmentalHazard> TantrumsToDestroy { get; } Property Value Type Description System.Collections.Generic.List < Hazards.TantrumEnvironmentalHazard > | Improve this Doc View Source Transform Gets the tesla gate's UnityEngine.Transform . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source TriggerRange Gets or sets the tesla gate's distance from which can be triggered. Declaration public float TriggerRange { get; set; } Property Value Type Description System.Single | Improve this Doc View Source UseInstantBurst Gets or sets a value indicating whether or not the tesla gate's next burst should be treated as instant burst. The instant burst ignores the standard cooldown time, reducing it to the cooldown time used for bursts triggered by SCP-079. Declaration public bool UseInstantBurst { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CanBeIdle(Player) Gets a value indicating whether the tesla gate can be idle by a specific Player . Declaration public bool CanBeIdle(Player player) Parameters Type Name Description Player player The Player to check. Returns Type Description System.Boolean true if the given Player can idle the tesla gate; otherwise, false . | Improve this Doc View Source CanBeTriggered(Player) Gets a value indicating whether the tesla gate can be triggered by a specific Player . Declaration public bool CanBeTriggered(Player player) Parameters Type Name Description Player player The Player to check. Returns Type Description System.Boolean true if the given Player can trigger the tesla gate; otherwise, false . | Improve this Doc View Source ForceTrigger() Force triggers the tesla gate ignoring the delay between each burst. Declaration public void ForceTrigger() | Improve this Doc View Source Get(Func<TeslaGate, Boolean>) Gets a System.Collections.Generic.IEnumerable<T> of TeslaGate filtered based on a predicate. Declaration public static IEnumerable<TeslaGate> Get(Func<TeslaGate, bool> predicate) Parameters Type Name Description System.Func < TeslaGate , System.Boolean > predicate The condition to satify. Returns Type Description System.Collections.Generic.IEnumerable < TeslaGate > A System.Collections.Generic.IEnumerable<T> of TeslaGate which contains elements that satify the condition. | Improve this Doc View Source Get(TeslaGate) Gets the TeslaGate belonging to the TeslaGate . Declaration public static TeslaGate Get(TeslaGate baseTeslaGate) Parameters Type Name Description TeslaGate baseTeslaGate The TeslaGate instance. Returns Type Description TeslaGate The corresponding TeslaGate instance. | Improve this Doc View Source IsPlayerInHurtRange(Player) Gets a value indicating whether the Player is in the hurt range of a specific tesla gate. Declaration public bool IsPlayerInHurtRange(Player player) Parameters Type Name Description Player player The Player to check. Returns Type Description System.Boolean true if the given Player is in the hurt range of the tesla gate; otherwise, false . | Improve this Doc View Source IsPlayerInIdleRange(Player) Gets a value indicating whether the Player is in the idle range of a specific tesla gate. Declaration public bool IsPlayerInIdleRange(Player player) Parameters Type Name Description Player player The Player to check. Returns Type Description System.Boolean true if the given Player is in the idle range of the tesla gate; otherwise, false . | Improve this Doc View Source IsPlayerInTriggerRange(Player) Gets a value indicating whether the Player is in the trigger range of a specific tesla gate. Declaration public bool IsPlayerInTriggerRange(Player player) Parameters Type Name Description Player player The Player to check. Returns Type Description System.Boolean true if the given Player is in the trigger range of the tesla gate; otherwise, false . | Improve this Doc View Source Trigger(Boolean) Triggers the tesla gate. Declaration public void Trigger(bool isInstantBurst = false) Parameters Type Name Description System.Boolean isInstantBurst A value indicating whether the shock should be treated as instant burst. | Improve this Doc View Source TryGet(Func<TeslaGate, Boolean>, out IEnumerable<TeslaGate>) Try-get a System.Collections.Generic.IEnumerable<T> of TeslaGate filtered based on a predicate. Declaration public static bool TryGet(Func<TeslaGate, bool> predicate, out IEnumerable<TeslaGate> gates) Parameters Type Name Description System.Func < TeslaGate , System.Boolean > predicate The condition to satify. System.Collections.Generic.IEnumerable < TeslaGate > gates A System.Collections.Generic.IEnumerable<T> of TeslaGate which contains elements that satify the condition. Returns Type Description System.Boolean Whether or not at least one tesla gate was found. | Improve this Doc View Source TryGet(TeslaGate, out TeslaGate) Try-get a TeslaGate belonging to the TeslaGate , if any. Declaration public static bool TryGet(TeslaGate baseTeslaGate, out TeslaGate gate) Parameters Type Name Description TeslaGate baseTeslaGate The TeslaGate instance. TeslaGate gate A TeslaGate or null if not found. Returns Type Description System.Boolean Whether or not the tesla gate was found. Implements IWrapper<T> IWorldSpace IPosition IRotation Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Toys.AdminToy.html": {
    "href": "api/Exiled.API.Features.Toys.AdminToy.html",
    "title": "Class AdminToy | EXILED Docs",
    "keywords": "Class AdminToy A wrapper class for AdminToys.AdminToyBase . Inheritance System.Object AdminToy Light Primitive ShootingTargetToy Implements IWorldSpace IPosition IRotation Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Toys Assembly : Exiled.API.dll Syntax public abstract class AdminToy : IWorldSpace, IPosition, IRotation Properties | Improve this Doc View Source AdminToyBase Gets the original AdminToys.AdminToyBase . Declaration public AdminToyBase AdminToyBase { get; } Property Value Type Description AdminToys.AdminToyBase | Improve this Doc View Source MovementSmoothing Gets or sets the movement smoothing value of the toy. Higher values reflect smoother movements. - 60 is an ideal value. Declaration public byte MovementSmoothing { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Position Gets or sets the position of the toy. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Rotation Gets or sets the rotation of the toy. Declaration public Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source Scale Gets or sets the scale of the toy. Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source ToyType Gets the AdminToyType . Declaration public AdminToyType ToyType { get; } Property Value Type Description AdminToyType Methods | Improve this Doc View Source Destroy() Destroys the toy. Declaration public void Destroy() | Improve this Doc View Source Get(AdminToyBase) Gets the AdminToy belonging to the AdminToys.AdminToyBase . Declaration public static AdminToy Get(AdminToyBase adminToyBase) Parameters Type Name Description AdminToys.AdminToyBase adminToyBase The AdminToys.AdminToyBase instance. Returns Type Description AdminToy The corresponding AdminToy instance. | Improve this Doc View Source Spawn() Spawns the toy into the game. Use UnSpawn() to remove it. Declaration public void Spawn() | Improve this Doc View Source UnSpawn() Removes the toy from the game. Use Spawn() to bring it back. Declaration public void UnSpawn() Implements IWorldSpace IPosition IRotation Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Toys.html": {
    "href": "api/Exiled.API.Features.Toys.html",
    "title": "Namespace Exiled.API.Features.Toys | EXILED Docs",
    "keywords": "Namespace Exiled.API.Features.Toys Classes AdminToy A wrapper class for AdminToys.AdminToyBase . Light A wrapper class for AdminToys.LightSourceToy . Primitive A wrapper class for AdminToys.PrimitiveObjectToy . ShootingTargetToy A wrapper class for AdminToys.ShootingTarget . ToysHelper A helper class for interacting with toys."
  },
  "api/Exiled.API.Features.Toys.Light.html": {
    "href": "api/Exiled.API.Features.Toys.Light.html",
    "title": "Class Light | EXILED Docs",
    "keywords": "Class Light A wrapper class for AdminToys.LightSourceToy . Inheritance System.Object AdminToy Light Implements IWorldSpace IPosition IRotation IWrapper < AdminToys.LightSourceToy > Inherited Members AdminToy.AdminToyBase AdminToy.ToyType AdminToy.Position AdminToy.Rotation AdminToy.Scale AdminToy.MovementSmoothing AdminToy.Get(AdminToyBase) AdminToy.Spawn() AdminToy.UnSpawn() AdminToy.Destroy() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Toys Assembly : Exiled.API.dll Syntax public class Light : AdminToy, IWorldSpace, IPosition, IRotation, IWrapper<LightSourceToy> Properties | Improve this Doc View Source Base Gets the base AdminToys.LightSourceToy . Declaration public LightSourceToy Base { get; } Property Value Type Description AdminToys.LightSourceToy | Improve this Doc View Source Color Gets or sets the color of the primitive. Declaration public Color Color { get; set; } Property Value Type Description UnityEngine.Color | Improve this Doc View Source Intensity Gets or sets the intensity of the light. Declaration public float Intensity { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Range Gets or sets the range of the light. Declaration public float Range { get; set; } Property Value Type Description System.Single | Improve this Doc View Source ShadowEmission Gets or sets a value indicating whether the light should cause shadows from other objects. Declaration public bool ShadowEmission { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Create(Nullable<Vector3>, Nullable<Vector3>, Nullable<Vector3>, Boolean) Creates a new Light . Declaration public static Light Create(Vector3? position = null, Vector3? rotation = null, Vector3? scale = null, bool spawn = true) Parameters Type Name Description System.Nullable < UnityEngine.Vector3 > position The position of the Light . System.Nullable < UnityEngine.Vector3 > rotation The rotation of the Light . System.Nullable < UnityEngine.Vector3 > scale The scale of the Light . System.Boolean spawn Whether the Light should be initially spawned. Returns Type Description Light The new Light . | Improve this Doc View Source Get(LightSourceToy) Gets the Light belonging to the AdminToys.LightSourceToy . Declaration public static Light Get(LightSourceToy lightSourceToy) Parameters Type Name Description AdminToys.LightSourceToy lightSourceToy The AdminToys.LightSourceToy instance. Returns Type Description Light The corresponding AdminToys.LightSourceToy instance. Implements IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Toys.Primitive.html": {
    "href": "api/Exiled.API.Features.Toys.Primitive.html",
    "title": "Class Primitive | EXILED Docs",
    "keywords": "Class Primitive A wrapper class for AdminToys.PrimitiveObjectToy . Inheritance System.Object AdminToy Primitive Implements IWorldSpace IPosition IRotation IWrapper < AdminToys.PrimitiveObjectToy > Inherited Members AdminToy.AdminToyBase AdminToy.ToyType AdminToy.Position AdminToy.Rotation AdminToy.Scale AdminToy.MovementSmoothing AdminToy.Get(AdminToyBase) AdminToy.Spawn() AdminToy.UnSpawn() AdminToy.Destroy() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Toys Assembly : Exiled.API.dll Syntax public class Primitive : AdminToy, IWorldSpace, IPosition, IRotation, IWrapper<PrimitiveObjectToy> Properties | Improve this Doc View Source Base Gets the base AdminToys.PrimitiveObjectToy . Declaration public PrimitiveObjectToy Base { get; } Property Value Type Description AdminToys.PrimitiveObjectToy | Improve this Doc View Source Collidable Gets or sets a value indicating whether the primitive can be collided with. Declaration public bool Collidable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Color Gets or sets the material color of the primitive. Declaration public Color Color { get; set; } Property Value Type Description UnityEngine.Color | Improve this Doc View Source Type Gets or sets the type of the primitive. Declaration public PrimitiveType Type { get; set; } Property Value Type Description UnityEngine.PrimitiveType Methods | Improve this Doc View Source Create(Nullable<Vector3>, Nullable<Vector3>, Nullable<Vector3>, Boolean) Creates a new Primitive . Declaration public static Primitive Create(Vector3? position = null, Vector3? rotation = null, Vector3? scale = null, bool spawn = true) Parameters Type Name Description System.Nullable < UnityEngine.Vector3 > position The position of the Primitive . System.Nullable < UnityEngine.Vector3 > rotation The rotation of the Primitive . System.Nullable < UnityEngine.Vector3 > scale The scale of the Primitive . System.Boolean spawn Whether or not the Primitive should be initially spawned. Returns Type Description Primitive The new Primitive . | Improve this Doc View Source Create(PrimitiveType, Nullable<Vector3>, Nullable<Vector3>, Nullable<Vector3>, Boolean) Creates a new Primitive . Declaration public static Primitive Create(PrimitiveType primitiveType = PrimitiveType.Sphere, Vector3? position = null, Vector3? rotation = null, Vector3? scale = null, bool spawn = true) Parameters Type Name Description UnityEngine.PrimitiveType primitiveType The type of primitive to spawn. System.Nullable < UnityEngine.Vector3 > position The position of the Primitive . System.Nullable < UnityEngine.Vector3 > rotation The rotation of the Primitive . System.Nullable < UnityEngine.Vector3 > scale The scale of the Primitive . System.Boolean spawn Whether or not the Primitive should be initially spawned. Returns Type Description Primitive The new Primitive . | Improve this Doc View Source Get(PrimitiveObjectToy) Gets the Primitive belonging to the AdminToys.PrimitiveObjectToy . Declaration public static Primitive Get(PrimitiveObjectToy primitiveObjectToy) Parameters Type Name Description AdminToys.PrimitiveObjectToy primitiveObjectToy The AdminToys.PrimitiveObjectToy instance. Returns Type Description Primitive The corresponding Primitive instance. Implements IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Toys.ShootingTargetToy.html": {
    "href": "api/Exiled.API.Features.Toys.ShootingTargetToy.html",
    "title": "Class ShootingTargetToy | EXILED Docs",
    "keywords": "Class ShootingTargetToy A wrapper class for AdminToys.ShootingTarget . Inheritance System.Object AdminToy ShootingTargetToy Implements IWorldSpace IPosition IRotation IWrapper < AdminToys.ShootingTarget > Inherited Members AdminToy.AdminToyBase AdminToy.ToyType AdminToy.Position AdminToy.Rotation AdminToy.MovementSmoothing AdminToy.Get(AdminToyBase) AdminToy.Spawn() AdminToy.UnSpawn() AdminToy.Destroy() System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Toys Assembly : Exiled.API.dll Syntax public class ShootingTargetToy : AdminToy, IWorldSpace, IPosition, IRotation, IWrapper<ShootingTarget> Properties | Improve this Doc View Source AutoResetTime Gets or sets the remaining health of the target. Declaration public int AutoResetTime { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Base Gets the base-game AdminToys.ShootingTarget for this target. Declaration public ShootingTarget Base { get; } Property Value Type Description AdminToys.ShootingTarget | Improve this Doc View Source Bullseye Gets the UnityEngine.GameObject of the bullseye. Declaration public GameObject Bullseye { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source BullseyePosition Gets the bullseye location of the target. Declaration public Vector3 BullseyePosition { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source BullseyeRadius Gets the bullseye radius of the target. Declaration public float BullseyeRadius { get; } Property Value Type Description System.Single | Improve this Doc View Source GameObject Gets the UnityEngine.GameObject of the target. Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source Health Gets or sets the remaining health of the target. Declaration public float Health { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsSynced Gets or sets a value indicating whether or not the target is in sync mode. Declaration public bool IsSynced { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxHealth Gets or sets the max health of the target. Declaration public int MaxHealth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Scale Gets or sets the size scale of the target. Declaration public Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Type Gets the type of the target. Declaration public ShootingTargetType Type { get; } Property Value Type Description ShootingTargetType | Improve this Doc View Source VerificationRule Gets the Interactables.Verification.IVerificationRule for this target. Declaration public IVerificationRule VerificationRule { get; } Property Value Type Description Interactables.Verification.IVerificationRule Methods | Improve this Doc View Source Clear() Clears the target and resets its health. Declaration public void Clear() | Improve this Doc View Source Create(ShootingTargetType, Nullable<Vector3>, Nullable<Vector3>, Nullable<Vector3>, Boolean) Creates a new ShootingTargetToy . Declaration public static ShootingTargetToy Create(ShootingTargetType type, Vector3? position = null, Vector3? rotation = null, Vector3? scale = null, bool spawn = true) Parameters Type Name Description ShootingTargetType type The ShootingTargetType of the ShootingTargetToy . System.Nullable < UnityEngine.Vector3 > position The position of the ShootingTargetToy . System.Nullable < UnityEngine.Vector3 > rotation The rotation of the ShootingTargetToy . System.Nullable < UnityEngine.Vector3 > scale The scale of the ShootingTargetToy . System.Boolean spawn Whether the ShootingTargetToy should be initially spawned. Returns Type Description ShootingTargetToy The new ShootingTargetToy . | Improve this Doc View Source Damage(Single, DamageHandlerBase, Vector3) Damages the target with the given damage, item, footprint, and hit location. Declaration public bool Damage(float damage, DamageHandlerBase damageHandler, Vector3 exactHit) Parameters Type Name Description System.Single damage The damage to be dealt. PlayerStatsSystem.DamageHandlerBase damageHandler The PlayerStatsSystem.DamageHandlerBase dealing the damage. UnityEngine.Vector3 exactHit The exact location of the hit. Returns Type Description System.Boolean Whether or not the damage was sent. | Improve this Doc View Source Get(ShootingTarget) Gets the ShootingTargetToy belonging to the AdminToys.ShootingTarget . Declaration public static ShootingTargetToy Get(ShootingTarget shootingTarget) Parameters Type Name Description AdminToys.ShootingTarget shootingTarget The AdminToys.ShootingTarget instance. Returns Type Description ShootingTargetToy The corresponding ShootingTargetToy instance. Implements IWorldSpace IPosition IRotation IWrapper<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Features.Toys.ToysHelper.html": {
    "href": "api/Exiled.API.Features.Toys.ToysHelper.html",
    "title": "Class ToysHelper | EXILED Docs",
    "keywords": "Class ToysHelper A helper class for interacting with toys. Inheritance System.Object ToysHelper Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features.Toys Assembly : Exiled.API.dll Syntax public static class ToysHelper Properties | Improve this Doc View Source BinaryShootingTargetObject Gets the base AdminToys.ShootingTarget to instantiate when creating a new binary shooting target. Declaration public static ShootingTarget BinaryShootingTargetObject { get; } Property Value Type Description AdminToys.ShootingTarget | Improve this Doc View Source DboyShootingTargetObject Gets the base AdminToys.ShootingTarget to instantiate when creating a new dboy shooting target. Declaration public static ShootingTarget DboyShootingTargetObject { get; } Property Value Type Description AdminToys.ShootingTarget | Improve this Doc View Source LightBaseObject Gets the base AdminToys.LightSourceToy to instantiate when creating a new light. Declaration public static LightSourceToy LightBaseObject { get; } Property Value Type Description AdminToys.LightSourceToy | Improve this Doc View Source PrimitiveBaseObject Gets the base AdminToys.PrimitiveObjectToy to instantiate when creating a new primitive. Declaration public static PrimitiveObjectToy PrimitiveBaseObject { get; } Property Value Type Description AdminToys.PrimitiveObjectToy | Improve this Doc View Source SportShootingTargetObject Gets the base AdminToys.ShootingTarget to instantiate when creating a new sport shooting target. Declaration public static ShootingTarget SportShootingTargetObject { get; } Property Value Type Description AdminToys.ShootingTarget"
  },
  "api/Exiled.API.Features.Warhead.html": {
    "href": "api/Exiled.API.Features.Warhead.html",
    "title": "Class Warhead | EXILED Docs",
    "keywords": "Class Warhead A set of tools to easily work with the alpha warhead. Inheritance System.Object Warhead Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public static class Warhead Properties | Improve this Doc View Source AutoDetonate Gets or sets a value indicating whether or not automatic detonation is enabled. Declaration public static bool AutoDetonate { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source BlastDoors Gets all of the warhead blast doors. Declaration public static IReadOnlyCollection<BlastDoor> BlastDoors { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < BlastDoor > | Improve this Doc View Source CanBeStarted Gets a value indicating whether or not the warhead can be started. Declaration public static bool CanBeStarted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Controller Gets the cached AlphaWarheadController component. Declaration public static AlphaWarheadController Controller { get; } Property Value Type Description AlphaWarheadController | Improve this Doc View Source DetonationTimer Gets or sets the warhead detonation timer. Declaration public static float DetonationTimer { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsDetonated Gets a value indicating whether or not the warhead has already been detonated. Declaration public static bool IsDetonated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInProgress Gets a value indicating whether or not the warhead detonation is in progress. Declaration public static bool IsInProgress { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsKeycardActivated Gets or sets a value indicating whether or not the warhead's outside panel has been opened. Declaration public static bool IsKeycardActivated { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLocked Gets or sets a value indicating whether or not the warhead can be disabled. Declaration public static bool IsLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Lever Gets the UnityEngine.GameObject of the warhead lever. Declaration public static GameObject Lever { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source LeverStatus Gets or sets a value indicating whether or not the warhead lever is enabled. Declaration public static bool LeverStatus { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source OpenDoors Gets or sets a value indicating whether or not doors will be opened when the warhead activates. Declaration public static bool OpenDoors { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source OutsitePanel Gets the cached AlphaWarheadOutsitePanel component. Declaration public static AlphaWarheadOutsitePanel OutsitePanel { get; } Property Value Type Description AlphaWarheadOutsitePanel | Improve this Doc View Source RealDetonationTimer Gets the warhead real detonation timer. Declaration public static float RealDetonationTimer { get; } Property Value Type Description System.Single | Improve this Doc View Source SitePanel Gets the cached AlphaWarheadNukesitePanel component. Declaration public static AlphaWarheadNukesitePanel SitePanel { get; } Property Value Type Description AlphaWarheadNukesitePanel | Improve this Doc View Source Status Gets or sets the warhead status. Declaration public static WarheadStatus Status { get; set; } Property Value Type Description WarheadStatus Methods | Improve this Doc View Source CanBeDetonated(Vector3, Boolean) Gets whether or not the provided position will be detonated by the alpha warhead. Declaration public static bool CanBeDetonated(Vector3 pos, bool includeOnlyLifts = false) Parameters Type Name Description UnityEngine.Vector3 pos The position to check. System.Boolean includeOnlyLifts If true , only lifts will be checked. Returns Type Description System.Boolean Whether or not the given position is prone to being detonated. | Improve this Doc View Source CloseBlastDoors() Closes the surface blast doors. Declaration public static void CloseBlastDoors() | Improve this Doc View Source Detonate() Detonates the warhead. Declaration public static void Detonate() | Improve this Doc View Source Shake() Shake all players, like if the warhead has been detonated. Declaration public static void Shake() | Improve this Doc View Source Start() Starts the warhead countdown. Declaration public static void Start() | Improve this Doc View Source Stop() Stops the warhead. Declaration public static void Stop() | Improve this Doc View Source TriggerDoors(Boolean) Opens or closes all doors on the map, based on the provided open . Declaration public static void TriggerDoors(bool open) Parameters Type Name Description System.Boolean open Whether to open or close all doors on the map."
  },
  "api/Exiled.API.Features.Window.html": {
    "href": "api/Exiled.API.Features.Window.html",
    "title": "Class Window | EXILED Docs",
    "keywords": "Class Window A wrapper class for BreakableWindow . Inheritance System.Object Window Implements IWrapper < BreakableWindow > IWorldSpace IPosition IRotation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.API.Features Assembly : Exiled.API.dll Syntax public class Window : IWrapper<BreakableWindow>, IWorldSpace, IPosition, IRotation Constructors | Improve this Doc View Source Window(BreakableWindow) Initializes a new instance of the Window class. Declaration public Window(BreakableWindow window) Parameters Type Name Description BreakableWindow window The base BreakableWindow for this door. Properties | Improve this Doc View Source Base Gets the base-game BreakableWindow for this window. Declaration public BreakableWindow Base { get; } Property Value Type Description BreakableWindow | Improve this Doc View Source DisableScpDamage Gets or sets a value indicating whether or not this window can be broken by SCP. Declaration public bool DisableScpDamage { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source GameObject Gets the UnityEngine.GameObject of the window. Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source Health Gets or sets if the window's remaining health. No effect if the window cannot be broken. Declaration public float Health { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsBreakable Gets a value indicating whether or not this window is breakable. Declaration public bool IsBreakable { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsBroken Gets or sets a value indicating whether or not this window is broken. Declaration public bool IsBroken { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LastAttacker Gets or sets a value indicating who is the LastAttacker. Declaration public Player LastAttacker { get; set; } Property Value Type Description Player | Improve this Doc View Source List Gets a System.Collections.Generic.IEnumerable<T> of Door which contains all the Door instances. Declaration public static IEnumerable<Window> List { get; } Property Value Type Description System.Collections.Generic.IEnumerable < Window > | Improve this Doc View Source Position Gets or sets the window's position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Room Gets the Room the window is in. Declaration public Room Room { get; } Property Value Type Description Room | Improve this Doc View Source Rotation Gets or sets the window's rotation. Declaration public Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion | Improve this Doc View Source SyncStatus Gets or sets a value indicating whether or not this window is broken. Declaration public BreakableWindow.BreakableWindowStatus SyncStatus { get; set; } Property Value Type Description BreakableWindow.BreakableWindowStatus | Improve this Doc View Source Transform Gets the window's UnityEngine.Transform . Declaration public Transform Transform { get; } Property Value Type Description UnityEngine.Transform | Improve this Doc View Source Type Gets the window's GlassType . Declaration public GlassType Type { get; } Property Value Type Description GlassType | Improve this Doc View Source Zone Gets the window's ZoneType . Declaration public ZoneType Zone { get; } Property Value Type Description ZoneType Methods | Improve this Doc View Source BreakWindow() Break the window. Declaration public void BreakWindow() | Improve this Doc View Source DamageWindow(Single) Damages the window. Declaration public void DamageWindow(float amount) Parameters Type Name Description System.Single amount The amount of damage to deal. | Improve this Doc View Source DamageWindow(Single, DamageHandlerBase) Damages the window. Declaration public void DamageWindow(float amount, DamageHandlerBase handler) Parameters Type Name Description System.Single amount The amount of damage to deal. DamageHandlerBase handler The handler of damage. | Improve this Doc View Source Get(BreakableWindow) Gets the window object associated with a specific Window , or creates a new one if there isn't one. Declaration public static Window Get(BreakableWindow breakableWindow) Parameters Type Name Description BreakableWindow breakableWindow The base-game Window . Returns Type Description Window A Door wrapper object. | Improve this Doc View Source Get(Func<Window, Boolean>) Gets a System.Collections.Generic.IEnumerable<T> of Window filtered based on a predicate. Declaration public static IEnumerable<Window> Get(Func<Window, bool> predicate) Parameters Type Name Description System.Func < Window , System.Boolean > predicate The condition to satify. Returns Type Description System.Collections.Generic.IEnumerable < Window > A System.Collections.Generic.IEnumerable<T> of Window which contains elements that satify the condition. | Improve this Doc View Source ToString() Returns the Window in a human-readable format. Declaration public override string ToString() Returns Type Description System.String A string containing Window-related data. Overrides System.Object.ToString() | Improve this Doc View Source TryGet(BreakableWindow, out Window) Try-get a Window belonging to the BreakableWindow , if any. Declaration public static bool TryGet(BreakableWindow breakableWindow, out Window window) Parameters Type Name Description BreakableWindow breakableWindow The BreakableWindow instance. Window window A Window or null if not found. Returns Type Description System.Boolean Whether or not a window was found. | Improve this Doc View Source TryGet(Func<Window, Boolean>, out IEnumerable<Window>) Try-get a System.Collections.Generic.IEnumerable<T> of Window filtered based on a predicate. Declaration public static bool TryGet(Func<Window, bool> predicate, out IEnumerable<Window> windows) Parameters Type Name Description System.Func < Window , System.Boolean > predicate The condition to satify. System.Collections.Generic.IEnumerable < Window > windows A System.Collections.Generic.IEnumerable<T> of Window which contains elements that satify the condition. Returns Type Description System.Boolean Whether or not at least one window was found. Implements IWrapper<T> IWorldSpace IPosition IRotation Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Interfaces.html": {
    "href": "api/Exiled.API.Interfaces.html",
    "title": "Namespace Exiled.API.Interfaces | EXILED Docs",
    "keywords": "Namespace Exiled.API.Interfaces Interfaces IConfig Defines the contract for basic config features. IPlugin<TConfig> Defines the contract for basic plugin features. IPosition Represents an object with a UnityEngine.Vector3 position. IRotation Represents an object with a UnityEngine.Quaternion rotation. ITranslation Defines the contract for basic translation features. IWorldSpace Represents an object with a UnityEngine.Vector3 position and a UnityEngine.Quaternion rotation. IWrapper<T> Defines the contract for classes that wrap a base-game object."
  },
  "api/Exiled.API.Interfaces.IConfig.html": {
    "href": "api/Exiled.API.Interfaces.IConfig.html",
    "title": "Interface IConfig | EXILED Docs",
    "keywords": "Interface IConfig Defines the contract for basic config features. Namespace : Exiled.API.Interfaces Assembly : Exiled.API.dll Syntax public interface IConfig Properties | Improve this Doc View Source Debug Gets or sets a value indicating whether debug messages should be displayed in the console or not. Declaration bool Debug { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsEnabled Gets or sets a value indicating whether the plugin is enabled or not. Declaration bool IsEnabled { get; set; } Property Value Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Interfaces.IPlugin-1.html": {
    "href": "api/Exiled.API.Interfaces.IPlugin-1.html",
    "title": "Interface IPlugin<TConfig> | EXILED Docs",
    "keywords": "Interface IPlugin<TConfig> Defines the contract for basic plugin features. Inherited Members System.IComparable<Exiled.API.Interfaces.IPlugin<Exiled.API.Interfaces.IConfig>>.CompareTo(Exiled.API.Interfaces.IPlugin<Exiled.API.Interfaces.IConfig>) Namespace : Exiled.API.Interfaces Assembly : Exiled.API.dll Syntax public interface IPlugin<out TConfig> : IComparable<IPlugin<IConfig>> where TConfig : IConfig Type Parameters Name Description TConfig The config type. Properties | Improve this Doc View Source Assembly Gets the plugin assembly. Declaration Assembly Assembly { get; } Property Value Type Description System.Reflection.Assembly | Improve this Doc View Source Author Gets the plugin author. Declaration string Author { get; } Property Value Type Description System.String | Improve this Doc View Source Commands Gets the plugin commands. Declaration Dictionary<Type, Dictionary<Type, ICommand>> Commands { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.Type , System.Collections.Generic.Dictionary < System.Type , CommandSystem.ICommand >> | Improve this Doc View Source Config Gets the plugin config. Declaration TConfig Config { get; } Property Value Type Description TConfig | Improve this Doc View Source ConfigPath Gets the plugin config path. Declaration string ConfigPath { get; } Property Value Type Description System.String | Improve this Doc View Source IgnoreRequiredVersionCheck Gets a value indicating whether a plugin should bypass the required EXILED version check. This should only be used by plugins which do not need to be updated across major version updates. Declaration bool IgnoreRequiredVersionCheck { get; } Property Value Type Description System.Boolean | Improve this Doc View Source InternalTranslation Gets the internally used translations. Plugins should implement Plugin<TConfig, TTranslation> and use Translation . Declaration ITranslation InternalTranslation { get; } Property Value Type Description ITranslation | Improve this Doc View Source Name Gets the plugin name. Declaration string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Prefix Gets the plugin prefix. Declaration string Prefix { get; } Property Value Type Description System.String | Improve this Doc View Source Priority Gets the plugin priority. Higher values mean higher priority and vice versa. Declaration PluginPriority Priority { get; } Property Value Type Description PluginPriority | Improve this Doc View Source RequiredExiledVersion Gets the required version of Exiled to run the plugin without bugs or incompatibilities. Declaration Version RequiredExiledVersion { get; } Property Value Type Description System.Version | Improve this Doc View Source TranslationPath Gets the plugin translation path. Declaration string TranslationPath { get; } Property Value Type Description System.String | Improve this Doc View Source Version Gets the plugin version. Declaration Version Version { get; } Property Value Type Description System.Version Methods | Improve this Doc View Source OnDisabled() Fired after disabling the plugin. Declaration void OnDisabled() | Improve this Doc View Source OnEnabled() Fired after enabling the plugin. Declaration void OnEnabled() | Improve this Doc View Source OnRegisteringCommands() Fired before registering commands. Declaration void OnRegisteringCommands() | Improve this Doc View Source OnReloaded() Fired after reloading the plugin. Declaration void OnReloaded() | Improve this Doc View Source OnUnregisteringCommands() Fired before unregistering configs. Declaration void OnUnregisteringCommands() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Interfaces.IPosition.html": {
    "href": "api/Exiled.API.Interfaces.IPosition.html",
    "title": "Interface IPosition | EXILED Docs",
    "keywords": "Interface IPosition Represents an object with a UnityEngine.Vector3 position. Namespace : Exiled.API.Interfaces Assembly : Exiled.API.dll Syntax public interface IPosition Properties | Improve this Doc View Source Position Gets the position of this object. Declaration Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Interfaces.IRotation.html": {
    "href": "api/Exiled.API.Interfaces.IRotation.html",
    "title": "Interface IRotation | EXILED Docs",
    "keywords": "Interface IRotation Represents an object with a UnityEngine.Quaternion rotation. Namespace : Exiled.API.Interfaces Assembly : Exiled.API.dll Syntax public interface IRotation Properties | Improve this Doc View Source Rotation Gets the rotation of this object. Declaration Quaternion Rotation { get; } Property Value Type Description UnityEngine.Quaternion Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Interfaces.ITranslation.html": {
    "href": "api/Exiled.API.Interfaces.ITranslation.html",
    "title": "Interface ITranslation | EXILED Docs",
    "keywords": "Interface ITranslation Defines the contract for basic translation features. Namespace : Exiled.API.Interfaces Assembly : Exiled.API.dll Syntax public interface ITranslation Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Interfaces.IWorldSpace.html": {
    "href": "api/Exiled.API.Interfaces.IWorldSpace.html",
    "title": "Interface IWorldSpace | EXILED Docs",
    "keywords": "Interface IWorldSpace Represents an object with a UnityEngine.Vector3 position and a UnityEngine.Quaternion rotation. Inherited Members IPosition.Position IRotation.Rotation Namespace : Exiled.API.Interfaces Assembly : Exiled.API.dll Syntax public interface IWorldSpace : IPosition, IRotation Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Interfaces.IWrapper-1.html": {
    "href": "api/Exiled.API.Interfaces.IWrapper-1.html",
    "title": "Interface IWrapper<T> | EXILED Docs",
    "keywords": "Interface IWrapper<T> Defines the contract for classes that wrap a base-game object. Namespace : Exiled.API.Interfaces Assembly : Exiled.API.dll Syntax public interface IWrapper<T> where T : MonoBehaviour Type Parameters Name Description T The base-game class that is being wrapped. Properties | Improve this Doc View Source Base Gets the base T that this class is wrapping. Declaration T Base { get; } Property Value Type Description T Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Structs.ArmorAmmoLimit.html": {
    "href": "api/Exiled.API.Structs.ArmorAmmoLimit.html",
    "title": "Struct ArmorAmmoLimit | EXILED Docs",
    "keywords": "Struct ArmorAmmoLimit The limit of a certain AmmoType when wearing a piece of armor. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : Exiled.API.Structs Assembly : Exiled.API.dll Syntax public struct ArmorAmmoLimit Constructors | Improve this Doc View Source ArmorAmmoLimit(AmmoType, UInt16) Initializes a new instance of the ArmorAmmoLimit struct. Declaration public ArmorAmmoLimit(AmmoType type, ushort limit) Parameters Type Name Description AmmoType type The AmmoType of the ammo. System.UInt16 limit The ammo limit. Fields | Improve this Doc View Source AmmoType The AmmoType being limited. Declaration public AmmoType AmmoType Field Value Type Description AmmoType | Improve this Doc View Source Limit The amount to limit to. Declaration public ushort Limit Field Value Type Description System.UInt16 Operators | Improve this Doc View Source Explicit(ArmorAmmoLimit to BodyArmor.ArmorAmmoLimit) Converts a ArmorAmmoLimit to its appropriate base game InventorySystem.Items.Armor.BodyArmor.ArmorAmmoLimit . Declaration public static explicit operator BodyArmor.ArmorAmmoLimit(ArmorAmmoLimit armorLimit) Parameters Type Name Description ArmorAmmoLimit armorLimit armor limit. Returns Type Description InventorySystem.Items.Armor.BodyArmor.ArmorAmmoLimit | Improve this Doc View Source Implicit(BodyArmor.ArmorAmmoLimit to ArmorAmmoLimit) Converts a base game InventorySystem.Items.Armor.BodyArmor.ArmorAmmoLimit to its appropriate ArmorAmmoLimit . Declaration public static implicit operator ArmorAmmoLimit(BodyArmor.ArmorAmmoLimit armorLimit) Parameters Type Name Description InventorySystem.Items.Armor.BodyArmor.ArmorAmmoLimit armorLimit Base game armor limit. Returns Type Description ArmorAmmoLimit Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Structs.AttachmentIdentifier.html": {
    "href": "api/Exiled.API.Structs.AttachmentIdentifier.html",
    "title": "Struct AttachmentIdentifier | EXILED Docs",
    "keywords": "Struct AttachmentIdentifier A tool to identify attachments. Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : Exiled.API.Structs Assembly : Exiled.API.dll Syntax public readonly struct AttachmentIdentifier Properties | Improve this Doc View Source Code Gets the attachment code. Declaration public readonly uint Code { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Name Gets the attachment name. Declaration public readonly AttachmentName Name { get; } Property Value Type Description InventorySystem.Items.Firearms.Attachments.AttachmentName | Improve this Doc View Source Slot Gets the attachment slot. Declaration public readonly AttachmentSlot Slot { get; } Property Value Type Description InventorySystem.Items.Firearms.Attachments.AttachmentSlot Methods | Improve this Doc View Source Equals(AttachmentIdentifier) Indicates whether this instance and a AttachmentIdentifier are equal. Declaration public readonly bool Equals(AttachmentIdentifier attachmentIdentifier) Parameters Type Name Description AttachmentIdentifier attachmentIdentifier The AttachmentIdentifier to compare with the current instance. Returns Type Description System.Boolean true if AttachmentIdentifier and this instance represent the same value; otherwise, false . | Improve this Doc View Source Equals(Attachment) Indicates whether this instance and a InventorySystem.Items.Firearms.Attachments.Components.Attachment are equal. Declaration public readonly bool Equals(Attachment firearmAttachment) Parameters Type Name Description InventorySystem.Items.Firearms.Attachments.Components.Attachment firearmAttachment The InventorySystem.Items.Firearms.Attachments.Components.Attachment to compare with the current instance. Returns Type Description System.Boolean true if InventorySystem.Items.Firearms.Attachments.Components.Attachment and this instance represent the same value; otherwise, false . | Improve this Doc View Source Equals(Object) Declaration public override readonly bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source Get(FirearmType, AttachmentName) Gets a AttachmentIdentifier by name. Declaration public static AttachmentIdentifier Get(FirearmType type, AttachmentName name) Parameters Type Name Description FirearmType type Weapons FirearmType . InventorySystem.Items.Firearms.Attachments.AttachmentName name Attachment name. Returns Type Description AttachmentIdentifier AttachmentIdentifier instance. | Improve this Doc View Source Get(FirearmType, AttachmentSlot) Gets the all AttachmentIdentifier 's for type, by slot. Declaration public static IEnumerable<AttachmentIdentifier> Get(FirearmType type, AttachmentSlot slot) Parameters Type Name Description FirearmType type Weapons FirearmType . InventorySystem.Items.Firearms.Attachments.AttachmentSlot slot Attachment slot. Returns Type Description System.Collections.Generic.IEnumerable < AttachmentIdentifier > AttachmentIdentifier instance. | Improve this Doc View Source GetHashCode() Declaration public override readonly int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override readonly string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() | Improve this Doc View Source TryParse(String, out AttachmentIdentifier) Converts the string representation of a AttachmentIdentifier to its AttachmentIdentifier equivalent. A return value indicates whether the conversion is succeeded or failed. Declaration public static bool TryParse(string s, out AttachmentIdentifier identifier) Parameters Type Name Description System.String s The System.String to convert. AttachmentIdentifier identifier The converted System.String . Returns Type Description System.Boolean true if System.String was converted successfully; otherwise, false . | Improve this Doc View Source TryParse(String, out AttachmentName) Converts the string representation of a InventorySystem.Items.Firearms.Attachments.AttachmentName to its InventorySystem.Items.Firearms.Attachments.AttachmentName equivalent. A return value indicates whether the conversion is succeeded or failed. Declaration public static bool TryParse(string s, out AttachmentName name) Parameters Type Name Description System.String s The System.String to convert. InventorySystem.Items.Firearms.Attachments.AttachmentName name The converted System.String . Returns Type Description System.Boolean true if System.String was converted successfully; otherwise, false . Operators | Improve this Doc View Source Addition(AttachmentIdentifier, UInt32) Computes the sum of its right-hand AttachmentIdentifier operand and its left-hand System.UInt32 operand. Declaration public static uint operator +(AttachmentIdentifier left, uint right) Parameters Type Name Description AttachmentIdentifier left The AttachmentIdentifier to be added up. System.UInt32 right The System.UInt32 to be added up. Returns Type Description System.UInt32 A System.UInt32 value that represents the sum of the two operands. | Improve this Doc View Source Addition(UInt32, AttachmentIdentifier) Computes the sum of its right-hand System.UInt32 operand and its left-hand AttachmentIdentifier operand. Declaration public static uint operator +(uint left, AttachmentIdentifier right) Parameters Type Name Description System.UInt32 left The System.UInt32 to be added up. AttachmentIdentifier right The AttachmentIdentifier to be added up. Returns Type Description System.UInt32 A System.UInt32 value that represents the sum of the two operands. | Improve this Doc View Source Equality(AttachmentIdentifier, AttachmentIdentifier) Compares two operands: AttachmentIdentifier and AttachmentIdentifier . Declaration public static bool operator ==(AttachmentIdentifier left, AttachmentIdentifier right) Parameters Type Name Description AttachmentIdentifier left The left-hand AttachmentIdentifier operand to compare. AttachmentIdentifier right The right-hand AttachmentIdentifier operand to compare. Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Equality(AttachmentIdentifier, Attachment) Compares two operands: AttachmentIdentifier and InventorySystem.Items.Firearms.Attachments.Components.Attachment . Declaration public static bool operator ==(AttachmentIdentifier left, Attachment right) Parameters Type Name Description AttachmentIdentifier left The AttachmentIdentifier to compare. InventorySystem.Items.Firearms.Attachments.Components.Attachment right The InventorySystem.Items.Firearms.Attachments.Components.Attachment to compare. Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Equality(Attachment, AttachmentIdentifier) Compares two operands: AttachmentIdentifier and InventorySystem.Items.Firearms.Attachments.Components.Attachment . Declaration public static bool operator ==(Attachment left, AttachmentIdentifier right) Parameters Type Name Description InventorySystem.Items.Firearms.Attachments.Components.Attachment left The InventorySystem.Items.Firearms.Attachments.Components.Attachment to compare. AttachmentIdentifier right The AttachmentIdentifier to compare. Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Inequality(AttachmentIdentifier, AttachmentIdentifier) Compares two operands: AttachmentIdentifier and AttachmentIdentifier . Declaration public static bool operator !=(AttachmentIdentifier left, AttachmentIdentifier right) Parameters Type Name Description AttachmentIdentifier left The left-hand AttachmentIdentifier operand to compare. AttachmentIdentifier right The right-hand AttachmentIdentifier to compare. Returns Type Description System.Boolean true if the values are equal. | Improve this Doc View Source Inequality(AttachmentIdentifier, Attachment) Compares two operands: AttachmentIdentifier and InventorySystem.Items.Firearms.Attachments.Components.Attachment . Declaration public static bool operator !=(AttachmentIdentifier left, Attachment right) Parameters Type Name Description AttachmentIdentifier left The AttachmentIdentifier to compare. InventorySystem.Items.Firearms.Attachments.Components.Attachment right The InventorySystem.Items.Firearms.Attachments.Components.Attachment to compare. Returns Type Description System.Boolean true if the values are not equal. | Improve this Doc View Source Inequality(Attachment, AttachmentIdentifier) Compares two operands: AttachmentIdentifier and InventorySystem.Items.Firearms.Attachments.Components.Attachment . Declaration public static bool operator !=(Attachment left, AttachmentIdentifier right) Parameters Type Name Description InventorySystem.Items.Firearms.Attachments.Components.Attachment left The InventorySystem.Items.Firearms.Attachments.Components.Attachment to compare. AttachmentIdentifier right The AttachmentIdentifier to compare. Returns Type Description System.Boolean true if the values are not equal. | Improve this Doc View Source Subtraction(AttachmentIdentifier, UInt32) Subtracts its right-hand AttachmentIdentifier operand from its left-hand System.UInt32 operand. Declaration public static uint operator -(AttachmentIdentifier left, uint right) Parameters Type Name Description AttachmentIdentifier left The AttachmentIdentifier to be subtracted. System.UInt32 right The System.UInt32 to be subtracted. Returns Type Description System.UInt32 A System.UInt32 value representing the subtraction between the two operands. | Improve this Doc View Source Subtraction(UInt32, AttachmentIdentifier) Subtracts its right-hand System.UInt32 operand from its left-hand AttachmentIdentifier operand. Declaration public static uint operator -(uint left, AttachmentIdentifier right) Parameters Type Name Description System.UInt32 left The System.UInt32 to be subtracted. AttachmentIdentifier right The AttachmentIdentifier to be subtracted. Returns Type Description System.UInt32 A System.UInt32 value representing the subtraction between the two operands. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.API.Structs.html": {
    "href": "api/Exiled.API.Structs.html",
    "title": "Namespace Exiled.API.Structs | EXILED Docs",
    "keywords": "Namespace Exiled.API.Structs Structs ArmorAmmoLimit The limit of a certain AmmoType when wearing a piece of armor. AttachmentIdentifier A tool to identify attachments. RadioRangeSettings Settings for specific radio ranges."
  },
  "api/Exiled.API.Structs.RadioRangeSettings.html": {
    "href": "api/Exiled.API.Structs.RadioRangeSettings.html",
    "title": "Struct RadioRangeSettings | EXILED Docs",
    "keywords": "Struct RadioRangeSettings Settings for specific radio ranges. Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetType() Namespace : Exiled.API.Structs Assembly : Exiled.API.dll Syntax public struct RadioRangeSettings Fields | Improve this Doc View Source IdleUsage The amount of battery usage per minute while idle. Declaration public float IdleUsage Field Value Type Description System.Single | Improve this Doc View Source MaxRange The maximum range in which this radio will pickup and send voice messages. Declaration public int MaxRange Field Value Type Description System.Int32 | Improve this Doc View Source TalkingUsage The amount of battery usage per minute while talking. Declaration public int TalkingUsage Field Value Type Description System.Int32 Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CreditTags.Commands.html": {
    "href": "api/Exiled.CreditTags.Commands.html",
    "title": "Namespace Exiled.CreditTags.Commands | EXILED Docs",
    "keywords": "Namespace Exiled.CreditTags.Commands Classes ShowCreditTag A client command to show an EXILED credit tag."
  },
  "api/Exiled.CreditTags.Commands.ShowCreditTag.html": {
    "href": "api/Exiled.CreditTags.Commands.ShowCreditTag.html",
    "title": "Class ShowCreditTag | EXILED Docs",
    "keywords": "Class ShowCreditTag A client command to show an EXILED credit tag. Inheritance System.Object ShowCreditTag Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CreditTags.Commands Assembly : Exiled.CreditTags.dll Syntax [CommandHandler(typeof(ClientCommandHandler))] public class ShowCreditTag : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CreditTags.Config.html": {
    "href": "api/Exiled.CreditTags.Config.html",
    "title": "Class Config | EXILED Docs",
    "keywords": "Class Config Inheritance System.Object Config Implements IConfig Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CreditTags Assembly : Exiled.CreditTags.dll Syntax public sealed class Config : IConfig Properties | Improve this Doc View Source BadgeOverride Declaration public bool BadgeOverride { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CustomPlayerInfoOverride Declaration public bool CustomPlayerInfoOverride { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Debug Declaration public bool Debug { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IgnoreDntFlag Declaration public bool IgnoreDntFlag { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Mode Declaration public InfoSide Mode { get; } Property Value Type Description InfoSide Implements IConfig Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CreditTags.CreditTags.html": {
    "href": "api/Exiled.CreditTags.CreditTags.html",
    "title": "Class CreditTags | EXILED Docs",
    "keywords": "Class CreditTags Handles credits for Exiled Devs, Contributors and Plugin devs. Inheritance System.Object Plugin < Config > CreditTags Implements IPlugin < Config > System.IComparable < IPlugin < IConfig >> Inherited Members Plugin<Config>.Assembly Plugin<Config>.Name Plugin<Config>.Author Plugin<Config>.Priority Plugin<Config>.Version Plugin<Config>.RequiredExiledVersion Plugin<Config>.IgnoreRequiredVersionCheck Plugin<Config>.Commands Plugin<Config>.Config Plugin<Config>.InternalTranslation Plugin<Config>.ConfigPath Plugin<Config>.TranslationPath Plugin<Config>.OnReloaded() Plugin<Config>.OnRegisteringCommands() Plugin<Config>.OnUnregisteringCommands() Plugin<Config>.CompareTo(IPlugin<IConfig>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CreditTags Assembly : Exiled.CreditTags.dll Syntax public sealed class CreditTags : Plugin<Config>, IPlugin<Config>, IComparable<IPlugin<IConfig>> Properties | Improve this Doc View Source Instance Gets a static reference to this class. Declaration public static CreditTags Instance { get; } Property Value Type Description CreditTags | Improve this Doc View Source Prefix Declaration public override string Prefix { get; } Property Value Type Description System.String Overrides Exiled.API.Features.Plugin<Exiled.CreditTags.Config>.Prefix Methods | Improve this Doc View Source OnDisabled() Declaration public override void OnDisabled() Overrides Exiled.API.Features.Plugin<Exiled.CreditTags.Config>.OnDisabled() | Improve this Doc View Source OnEnabled() Declaration public override void OnEnabled() Overrides Exiled.API.Features.Plugin<Exiled.CreditTags.Config>.OnEnabled() Implements IPlugin<TConfig> System.IComparable<T> Extension Methods ConfigManager.LoadConfig(IPlugin<IConfig>, Dictionary<String, Object>) ConfigManager.LoadDefaultConfig(IPlugin<IConfig>, Dictionary<String, Object>) ConfigManager.LoadSeparatedConfig(IPlugin<IConfig>) PathExtensions.GetPath(IPlugin<IConfig>) TranslationManager.LoadTranslation(IPlugin<IConfig>, Dictionary<String, Object>) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CreditTags.Enums.html": {
    "href": "api/Exiled.CreditTags.Enums.html",
    "title": "Namespace Exiled.CreditTags.Enums | EXILED Docs",
    "keywords": "Namespace Exiled.CreditTags.Enums Enums InfoSide RankType Represents all existing ranks."
  },
  "api/Exiled.CreditTags.Enums.InfoSide.html": {
    "href": "api/Exiled.CreditTags.Enums.InfoSide.html",
    "title": "Enum InfoSide | EXILED Docs",
    "keywords": "Enum InfoSide Namespace : Exiled.CreditTags.Enums Assembly : Exiled.CreditTags.dll Syntax public enum InfoSide Fields Name Description Badge Uses badge. Both Includes both of them. CustomPlayerInfo Uses Custom Player Info area FirstAvailable Uses Badge if available, otherwise uses CustomPlayerInfo if available. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.CreditTags.Enums.RankType.html": {
    "href": "api/Exiled.CreditTags.Enums.RankType.html",
    "title": "Enum RankType | EXILED Docs",
    "keywords": "Enum RankType Represents all existing ranks. Namespace : Exiled.CreditTags.Enums Assembly : Exiled.CreditTags.dll Syntax public enum RankType Fields Name Description Contributor Exiled Contributor. Dev Exiled Developer. None Nothing. PluginDev Exiled Plugin Developer. TournamentChampion EXILED Tournament Champion. TournamentParticipant EXILED Tournament Participant. Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.CreditTags.Features.html": {
    "href": "api/Exiled.CreditTags.Features.html",
    "title": "Namespace Exiled.CreditTags.Features | EXILED Docs",
    "keywords": "Namespace Exiled.CreditTags.Features Classes Rank An object representing Exiled Credit ranks."
  },
  "api/Exiled.CreditTags.Features.Rank.html": {
    "href": "api/Exiled.CreditTags.Features.Rank.html",
    "title": "Class Rank | EXILED Docs",
    "keywords": "Class Rank An object representing Exiled Credit ranks. Inheritance System.Object Rank Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CreditTags.Features Assembly : Exiled.CreditTags.dll Syntax public class Rank Constructors | Improve this Doc View Source Rank(String, String, String) Initializes a new instance of the Rank class. Declaration public Rank(string name, string color, string hexValue) Parameters Type Name Description System.String name The name of the rank. System.String color The name of the rank's color. System.String hexValue The hex color value of the rank's color (in CustomPlayerInfo). Properties | Improve this Doc View Source Color Gets a value representing the ranks color. Declaration public string Color { get; } Property Value Type Description System.String | Improve this Doc View Source HexValue Gets a value representing the rank's color as a hex value. Declaration public string HexValue { get; } Property Value Type Description System.String | Improve this Doc View Source Name Gets a value representing the ranks name. Declaration public string Name { get; } Property Value Type Description System.String Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CreditTags.html": {
    "href": "api/Exiled.CreditTags.html",
    "title": "Namespace Exiled.CreditTags | EXILED Docs",
    "keywords": "Namespace Exiled.CreditTags Classes Config CreditTags Handles credits for Exiled Devs, Contributors and Plugin devs."
  },
  "api/Exiled.CustomItems.API.EventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.html",
    "title": "Namespace Exiled.CustomItems.API.EventArgs | EXILED Docs",
    "keywords": "Namespace Exiled.CustomItems.API.EventArgs Classes OwnerChangingRoleEventArgs Contains all information of a CustomItem before a Player changes roles. OwnerDyingEventArgs Contains all information of a CustomItem before a Player dies. OwnerEscapingEventArgs Contains all information of a CustomItem before a Player escapes. OwnerHandcuffingEventArgs Contains all information of a CustomItem before handcuffing a Player . UpgradingEventArgs Contains all information of a CustomItem before a Item gets upgraded. UpgradingItemEventArgs Contains all information of a CustomItem before a Player 's inventory item is upgraded."
  },
  "api/Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.OwnerChangingRoleEventArgs.html",
    "title": "Class OwnerChangingRoleEventArgs | EXILED Docs",
    "keywords": "Class OwnerChangingRoleEventArgs Contains all information of a CustomItem before a Player changes roles. Inheritance System.Object ChangingRoleEventArgs OwnerChangingRoleEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members ChangingRoleEventArgs.Player ChangingRoleEventArgs.NewRole ChangingRoleEventArgs.Items ChangingRoleEventArgs.Ammo ChangingRoleEventArgs.ShouldPreserveInventory ChangingRoleEventArgs.Reason ChangingRoleEventArgs.SpawnFlags ChangingRoleEventArgs.IsAllowed System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.EventArgs Assembly : Exiled.CustomItems.dll Syntax public class OwnerChangingRoleEventArgs : ChangingRoleEventArgs, IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source OwnerChangingRoleEventArgs(ItemBase, Player, RoleTypeId, Boolean, RoleChangeReason) Initializes a new instance of the OwnerChangingRoleEventArgs class. Declaration public OwnerChangingRoleEventArgs(ItemBase item, Player player, RoleTypeId newRole, bool shouldPreserveInventory, RoleChangeReason reason) Parameters Type Name Description InventorySystem.Items.ItemBase item Player player PlayerRoles.RoleTypeId newRole System.Boolean shouldPreserveInventory PlayerRoles.RoleChangeReason reason | Improve this Doc View Source OwnerChangingRoleEventArgs(ItemBase, ChangingRoleEventArgs) Initializes a new instance of the OwnerChangingRoleEventArgs class. Declaration public OwnerChangingRoleEventArgs(ItemBase item, ChangingRoleEventArgs ev) Parameters Type Name Description InventorySystem.Items.ItemBase item ChangingRoleEventArgs ev The ChangingRoleEventArgs instance. Properties | Improve this Doc View Source Item Gets the Item as a CustomItem in the player's inventory. Declaration public ItemBase Item { get; } Property Value Type Description InventorySystem.Items.ItemBase Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.OwnerDyingEventArgs.html",
    "title": "Class OwnerDyingEventArgs | EXILED Docs",
    "keywords": "Class OwnerDyingEventArgs Contains all information of a CustomItem before a Player dies. Inheritance System.Object DyingEventArgs OwnerDyingEventArgs Implements IAttackerEvent IPlayerEvent IDeniableEvent IItemEvent IExiledEvent Inherited Members DyingEventArgs.ItemsToDrop DyingEventArgs.Player DyingEventArgs.DamageHandler DyingEventArgs.IsAllowed DyingEventArgs.Attacker System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.EventArgs Assembly : Exiled.CustomItems.dll Syntax public class OwnerDyingEventArgs : DyingEventArgs, IAttackerEvent, IPlayerEvent, IDeniableEvent, IItemEvent, IExiledEvent Constructors | Improve this Doc View Source OwnerDyingEventArgs(Item, DyingEventArgs) Initializes a new instance of the OwnerDyingEventArgs class. Declaration public OwnerDyingEventArgs(Item item, DyingEventArgs ev) Parameters Type Name Description Item item DyingEventArgs ev The HandcuffingEventArgs instance. Properties | Improve this Doc View Source Item Gets the item in the player's inventory. Declaration public Item Item { get; } Property Value Type Description Item Implements IAttackerEvent IPlayerEvent IDeniableEvent IItemEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.OwnerEscapingEventArgs.html",
    "title": "Class OwnerEscapingEventArgs | EXILED Docs",
    "keywords": "Class OwnerEscapingEventArgs Contains all information of a CustomItem before a Player escapes. Inheritance System.Object EscapingEventArgs OwnerEscapingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members EscapingEventArgs.Player EscapingEventArgs.NewRole EscapingEventArgs.IsAllowed System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.EventArgs Assembly : Exiled.CustomItems.dll Syntax public class OwnerEscapingEventArgs : EscapingEventArgs, IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source OwnerEscapingEventArgs(Item, Player, RoleTypeId) Initializes a new instance of the OwnerEscapingEventArgs class. Declaration public OwnerEscapingEventArgs(Item item, Player player, RoleTypeId newRole) Parameters Type Name Description Item item Player player PlayerRoles.RoleTypeId newRole | Improve this Doc View Source OwnerEscapingEventArgs(Item, EscapingEventArgs) Initializes a new instance of the OwnerEscapingEventArgs class. Declaration public OwnerEscapingEventArgs(Item item, EscapingEventArgs ev) Parameters Type Name Description Item item EscapingEventArgs ev The EscapingEventArgs instance. Properties | Improve this Doc View Source Item Gets the item in the player's inventory. Declaration public Item Item { get; } Property Value Type Description Item Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.OwnerHandcuffingEventArgs.html",
    "title": "Class OwnerHandcuffingEventArgs | EXILED Docs",
    "keywords": "Class OwnerHandcuffingEventArgs Contains all information of a CustomItem before handcuffing a Player . Inheritance System.Object HandcuffingEventArgs OwnerHandcuffingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members HandcuffingEventArgs.Target HandcuffingEventArgs.IsAllowed HandcuffingEventArgs.Player System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.EventArgs Assembly : Exiled.CustomItems.dll Syntax public class OwnerHandcuffingEventArgs : HandcuffingEventArgs, IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source OwnerHandcuffingEventArgs(Item, Player, Player, Boolean) Initializes a new instance of the OwnerHandcuffingEventArgs class. Declaration public OwnerHandcuffingEventArgs(Item item, Player cuffer, Player target, bool isAllowed = true) Parameters Type Name Description Item item Player cuffer Player target System.Boolean isAllowed | Improve this Doc View Source OwnerHandcuffingEventArgs(Item, HandcuffingEventArgs) Initializes a new instance of the OwnerHandcuffingEventArgs class. Declaration public OwnerHandcuffingEventArgs(Item item, HandcuffingEventArgs ev) Parameters Type Name Description Item item HandcuffingEventArgs ev The HandcuffingEventArgs instance. Properties | Improve this Doc View Source Item Gets the item in the player's inventory. Declaration public Item Item { get; } Property Value Type Description Item Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.EventArgs.UpgradingEventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.UpgradingEventArgs.html",
    "title": "Class UpgradingEventArgs | EXILED Docs",
    "keywords": "Class UpgradingEventArgs Contains all information of a CustomItem before a Item gets upgraded. Inheritance System.Object UpgradingPickupEventArgs UpgradingEventArgs Implements IPickupEvent IDeniableEvent IExiledEvent Inherited Members UpgradingPickupEventArgs.Pickup UpgradingPickupEventArgs.Scp914 UpgradingPickupEventArgs.OutputPosition UpgradingPickupEventArgs.KnobSetting UpgradingPickupEventArgs.IsAllowed System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.EventArgs Assembly : Exiled.CustomItems.dll Syntax public class UpgradingEventArgs : UpgradingPickupEventArgs, IPickupEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source UpgradingEventArgs(ItemPickupBase, Vector3, Scp914KnobSetting, Boolean) Initializes a new instance of the UpgradingEventArgs class. Declaration public UpgradingEventArgs(ItemPickupBase item, Vector3 newPos, Scp914KnobSetting knobSetting, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.Pickups.ItemPickupBase item UnityEngine.Vector3 newPos Scp914.Scp914KnobSetting knobSetting System.Boolean isAllowed Properties | Improve this Doc View Source Item Gets the upgrading Item as a CustomItem . Declaration public ItemPickupBase Item { get; } Property Value Type Description InventorySystem.Items.Pickups.ItemPickupBase Implements IPickupEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.EventArgs.UpgradingItemEventArgs.html": {
    "href": "api/Exiled.CustomItems.API.EventArgs.UpgradingItemEventArgs.html",
    "title": "Class UpgradingItemEventArgs | EXILED Docs",
    "keywords": "Class UpgradingItemEventArgs Contains all information of a CustomItem before a Player 's inventory item is upgraded. Inheritance System.Object UpgradingInventoryItemEventArgs UpgradingItemEventArgs Implements IPlayerEvent IItemEvent IDeniableEvent IExiledEvent Inherited Members UpgradingInventoryItemEventArgs.Scp914 UpgradingInventoryItemEventArgs.KnobSetting UpgradingInventoryItemEventArgs.IsAllowed UpgradingInventoryItemEventArgs.Item UpgradingInventoryItemEventArgs.Player System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.EventArgs Assembly : Exiled.CustomItems.dll Syntax public class UpgradingItemEventArgs : UpgradingInventoryItemEventArgs, IPlayerEvent, IItemEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source UpgradingItemEventArgs(Player, ItemBase, Scp914KnobSetting, Boolean) Initializes a new instance of the UpgradingItemEventArgs class. Declaration public UpgradingItemEventArgs(Player player, ItemBase item, Scp914KnobSetting knobSetting, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.ItemBase item Scp914.Scp914KnobSetting knobSetting System.Boolean isAllowed Implements IPlayerEvent IItemEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.Extensions.html": {
    "href": "api/Exiled.CustomItems.API.Extensions.html",
    "title": "Class Extensions | EXILED Docs",
    "keywords": "Class Extensions A collection of API methods. Inheritance System.Object Extensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API Assembly : Exiled.CustomItems.dll Syntax public static class Extensions Methods | Improve this Doc View Source Register(CustomItem) Registers a CustomItem . Declaration public static void Register(this CustomItem item) Parameters Type Name Description CustomItem item The CustomItem to be registered. | Improve this Doc View Source Register(IEnumerable<CustomItem>) Registers an System.Collections.Generic.IEnumerable<T> of CustomItem s. Declaration public static void Register(this IEnumerable<CustomItem> customItems) Parameters Type Name Description System.Collections.Generic.IEnumerable < CustomItem > customItems CustomItem s to be registered. | Improve this Doc View Source ResetInventory(Player, IEnumerable<String>, Boolean) Resets the player's inventory to the provided list of items and/or customitems names, clearing any items it already possess. Declaration public static void ResetInventory(this Player player, IEnumerable<string> newItems, bool displayMessage = false) Parameters Type Name Description Player player The player to which items will be given. System.Collections.Generic.IEnumerable < System.String > newItems The new items that have to be added to the inventory. System.Boolean displayMessage Indicates a value whether ShowPickedUpMessage(Player) will be called when the player receives the CustomItem or not. | Improve this Doc View Source Unregister(CustomItem) Unregisters a CustomItem . Declaration public static void Unregister(this CustomItem item) Parameters Type Name Description CustomItem item The CustomItem to be unregistered. | Improve this Doc View Source Unregister(IEnumerable<CustomItem>) Unregisters an System.Collections.Generic.IEnumerable<T> of CustomItem s. Declaration public static void Unregister(this IEnumerable<CustomItem> customItems) Parameters Type Name Description System.Collections.Generic.IEnumerable < CustomItem > customItems CustomItem s to be unregistered."
  },
  "api/Exiled.CustomItems.API.Features.CustomArmor.html": {
    "href": "api/Exiled.CustomItems.API.Features.CustomArmor.html",
    "title": "Class CustomArmor | EXILED Docs",
    "keywords": "Class CustomArmor The Custom Armor base class. Inheritance System.Object CustomItem CustomArmor Inherited Members CustomItem.Registered CustomItem.Id CustomItem.Name CustomItem.Description CustomItem.Weight CustomItem.SpawnProperties CustomItem.Scale CustomItem.TrackedSerials CustomItem.ShouldMessageOnGban CustomItem.Get(Int32) CustomItem.Get(UInt32) CustomItem.Get(String) CustomItem.Get(Type) CustomItem.TryGet(Int32, CustomItem) CustomItem.TryGet(UInt32, CustomItem) CustomItem.TryGet(String, CustomItem) CustomItem.TryGet(Type, CustomItem) CustomItem.TryGet(Player, CustomItem) CustomItem.TryGet(Player, IEnumerable<CustomItem>) CustomItem.TryGet(Item, CustomItem) CustomItem.TryGet(Pickup, CustomItem) CustomItem.TrySpawn(Int32, Vector3, Pickup) CustomItem.TrySpawn(UInt32, Vector3, Pickup) CustomItem.TrySpawn(String, Vector3, Pickup) CustomItem.TryGive(Player, String, Boolean) CustomItem.TryGive(Player, Int32, Boolean) CustomItem.TryGive(Player, UInt32, Boolean) CustomItem.TryGive(Player, Type, Boolean) CustomItem.RegisterItems(Boolean, Object) CustomItem.RegisterItems(IEnumerable<Type>, Boolean, Boolean, Object) CustomItem.UnregisterItems() CustomItem.UnregisterItems(IEnumerable<Type>, Boolean) CustomItem.UnregisterItems(IEnumerable<CustomItem>, Boolean) CustomItem.Spawn(Single, Single, Single) CustomItem.Spawn(Single, Single, Single, Item) CustomItem.Spawn(Player, Player) CustomItem.Spawn(Player, Item, Player) CustomItem.Spawn(Vector3, Player) CustomItem.Spawn(Vector3, Item, Player) CustomItem.Spawn(IEnumerable<SpawnPoint>, UInt32) CustomItem.SpawnAll() CustomItem.Give(Player, Item, Boolean) CustomItem.Give(Player, Pickup, Boolean) CustomItem.Init() CustomItem.Destroy() CustomItem.Check(Pickup) CustomItem.Check(Item) CustomItem.Check(Player) CustomItem.ToString() CustomItem.OnOwnerChangingRole(OwnerChangingRoleEventArgs) CustomItem.OnOwnerDying(OwnerDyingEventArgs) CustomItem.OnOwnerEscaping(OwnerEscapingEventArgs) CustomItem.OnOwnerHandcuffing(OwnerHandcuffingEventArgs) CustomItem.OnDropping(DroppingItemEventArgs) CustomItem.OnPickingUp(PickingUpItemEventArgs) CustomItem.OnChanging(ChangingItemEventArgs) CustomItem.OnUpgrading(UpgradingEventArgs) CustomItem.OnUpgrading(UpgradingItemEventArgs) CustomItem.OnAcquired(Player) CustomItem.OnWaitingForPlayers() CustomItem.ShowPickedUpMessage(Player) CustomItem.ShowSelectedMessage(Player) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.Features Assembly : Exiled.CustomItems.dll Syntax public abstract class CustomArmor : CustomItem Properties | Improve this Doc View Source HelmetEfficacy Gets or sets how strong the helmet on the armor is. Declaration public virtual int HelmetEfficacy { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source StaminaUseMultiplier Gets or sets how much faster stamina will drain when wearing this armor. Declaration public virtual float StaminaUseMultiplier { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Type Gets or sets the ItemType to use for this armor. Declaration public override ItemType Type { get; set; } Property Value Type Description ItemType Overrides CustomItem.Type | Improve this Doc View Source VestEfficacy Gets or sets how strong the vest on the armor is. Declaration public virtual int VestEfficacy { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Give(Player, Boolean) Declaration public override void Give(Player player, bool displayMessage = true) Parameters Type Name Description Player player System.Boolean displayMessage Overrides CustomItem.Give(Player, Boolean) | Improve this Doc View Source SubscribeEvents() Declaration protected override void SubscribeEvents() Overrides CustomItem.SubscribeEvents() | Improve this Doc View Source UnsubscribeEvents() Declaration protected override void UnsubscribeEvents() Overrides CustomItem.UnsubscribeEvents() Extension Methods Extensions.Register(CustomItem) Extensions.Unregister(CustomItem) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.Features.CustomGrenade.html": {
    "href": "api/Exiled.CustomItems.API.Features.CustomGrenade.html",
    "title": "Class CustomGrenade | EXILED Docs",
    "keywords": "Class CustomGrenade The Custom Grenade base class. Inheritance System.Object CustomItem CustomGrenade Inherited Members CustomItem.Registered CustomItem.Id CustomItem.Name CustomItem.Description CustomItem.Weight CustomItem.SpawnProperties CustomItem.Scale CustomItem.TrackedSerials CustomItem.ShouldMessageOnGban CustomItem.Get(Int32) CustomItem.Get(UInt32) CustomItem.Get(String) CustomItem.Get(Type) CustomItem.TryGet(Int32, CustomItem) CustomItem.TryGet(UInt32, CustomItem) CustomItem.TryGet(String, CustomItem) CustomItem.TryGet(Type, CustomItem) CustomItem.TryGet(Player, CustomItem) CustomItem.TryGet(Player, IEnumerable<CustomItem>) CustomItem.TryGet(Item, CustomItem) CustomItem.TryGet(Pickup, CustomItem) CustomItem.TrySpawn(Int32, Vector3, Pickup) CustomItem.TrySpawn(UInt32, Vector3, Pickup) CustomItem.TrySpawn(String, Vector3, Pickup) CustomItem.TryGive(Player, String, Boolean) CustomItem.TryGive(Player, Int32, Boolean) CustomItem.TryGive(Player, UInt32, Boolean) CustomItem.TryGive(Player, Type, Boolean) CustomItem.RegisterItems(Boolean, Object) CustomItem.RegisterItems(IEnumerable<Type>, Boolean, Boolean, Object) CustomItem.UnregisterItems() CustomItem.UnregisterItems(IEnumerable<Type>, Boolean) CustomItem.UnregisterItems(IEnumerable<CustomItem>, Boolean) CustomItem.Spawn(Single, Single, Single) CustomItem.Spawn(Single, Single, Single, Item) CustomItem.Spawn(Player, Player) CustomItem.Spawn(Player, Item, Player) CustomItem.Spawn(Vector3, Player) CustomItem.Spawn(Vector3, Item, Player) CustomItem.Spawn(IEnumerable<SpawnPoint>, UInt32) CustomItem.SpawnAll() CustomItem.Give(Player, Item, Boolean) CustomItem.Give(Player, Pickup, Boolean) CustomItem.Give(Player, Boolean) CustomItem.Init() CustomItem.Destroy() CustomItem.Check(Pickup) CustomItem.Check(Item) CustomItem.Check(Player) CustomItem.ToString() CustomItem.OnOwnerChangingRole(OwnerChangingRoleEventArgs) CustomItem.OnOwnerDying(OwnerDyingEventArgs) CustomItem.OnOwnerEscaping(OwnerEscapingEventArgs) CustomItem.OnOwnerHandcuffing(OwnerHandcuffingEventArgs) CustomItem.OnDropping(DroppingItemEventArgs) CustomItem.OnPickingUp(PickingUpItemEventArgs) CustomItem.OnChanging(ChangingItemEventArgs) CustomItem.OnUpgrading(UpgradingEventArgs) CustomItem.OnUpgrading(UpgradingItemEventArgs) CustomItem.OnAcquired(Player) CustomItem.OnWaitingForPlayers() CustomItem.ShowPickedUpMessage(Player) CustomItem.ShowSelectedMessage(Player) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.Features Assembly : Exiled.CustomItems.dll Syntax public abstract class CustomGrenade : CustomItem Properties | Improve this Doc View Source ExplodeOnCollision Gets or sets a value indicating whether gets or sets a value that determines if the grenade should explode immediately when contacting any surface. Declaration public abstract bool ExplodeOnCollision { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source FuseTime Gets or sets a value indicating how long the grenade's fuse time should be. Declaration public abstract float FuseTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Type Gets or sets the ItemType to use for this item. Declaration public override ItemType Type { get; set; } Property Value Type Description ItemType Overrides CustomItem.Type Methods | Improve this Doc View Source Check(Projectile) Checks to see if the grenade is a tracked custom grenade. Declaration public virtual bool Check(Projectile grenade) Parameters Type Name Description Projectile grenade The grenade to check. Returns Type Description System.Boolean True if it is a custom grenade. | Improve this Doc View Source OnChangedIntoGrenade(ChangedIntoGrenadeEventArgs) Handles the tracking of custom grenade pickups that are changed into live grenades by a frag grenade explosion. Declaration protected virtual void OnChangedIntoGrenade(ChangedIntoGrenadeEventArgs ev) Parameters Type Name Description ChangedIntoGrenadeEventArgs ev ChangedIntoGrenadeEventArgs . | Improve this Doc View Source OnExploding(ExplodingGrenadeEventArgs) Handles tracking exploded custom grenades. Declaration protected virtual void OnExploding(ExplodingGrenadeEventArgs ev) Parameters Type Name Description ExplodingGrenadeEventArgs ev ExplodingGrenadeEventArgs . | Improve this Doc View Source OnThrowingRequest(ThrowingRequestEventArgs) Handles tracking thrown requests by custom grenades. Declaration protected virtual void OnThrowingRequest(ThrowingRequestEventArgs ev) Parameters Type Name Description ThrowingRequestEventArgs ev ThrowingRequestEventArgs . | Improve this Doc View Source OnThrownProjectile(ThrownProjectileEventArgs) Handles tracking thrown custom grenades. Declaration protected virtual void OnThrownProjectile(ThrownProjectileEventArgs ev) Parameters Type Name Description ThrownProjectileEventArgs ev ThrownProjectileEventArgs . | Improve this Doc View Source SubscribeEvents() Declaration protected override void SubscribeEvents() Overrides CustomItem.SubscribeEvents() | Improve this Doc View Source UnsubscribeEvents() Declaration protected override void UnsubscribeEvents() Overrides CustomItem.UnsubscribeEvents() Extension Methods Extensions.Register(CustomItem) Extensions.Unregister(CustomItem) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.Features.CustomItem.html": {
    "href": "api/Exiled.CustomItems.API.Features.CustomItem.html",
    "title": "Class CustomItem | EXILED Docs",
    "keywords": "Class CustomItem The Custom Item base class. Inheritance System.Object CustomItem CustomArmor CustomGrenade CustomWeapon Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.Features Assembly : Exiled.CustomItems.dll Syntax public abstract class CustomItem Properties | Improve this Doc View Source Description Gets or sets the description of the item. Declaration public abstract string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Id Gets or sets the custom ItemID of the item. Declaration public abstract uint Id { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Name Gets or sets the name of the item. Declaration public abstract string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Registered Gets the list of current Item Managers. Declaration public static HashSet<CustomItem> Registered { get; } Property Value Type Description System.Collections.Generic.HashSet < CustomItem > | Improve this Doc View Source Scale Gets or sets the scale of the item. Declaration public virtual Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source ShouldMessageOnGban Gets a value indicating whether or not this item causes things to happen that may be considered hacks, and thus be shown to global moderators as being present in a player's inventory when they gban them. Declaration public virtual bool ShouldMessageOnGban { get; } Property Value Type Description System.Boolean | Improve this Doc View Source SpawnProperties Gets or sets the list of spawn locations and chances for each one. Declaration public abstract SpawnProperties SpawnProperties { get; set; } Property Value Type Description SpawnProperties | Improve this Doc View Source TrackedSerials Gets the list of custom items inside players' inventory being tracked as the current item. Declaration public HashSet<int> TrackedSerials { get; } Property Value Type Description System.Collections.Generic.HashSet < System.Int32 > | Improve this Doc View Source Type Gets or sets the ItemType to use for this item. Declaration public virtual ItemType Type { get; set; } Property Value Type Description ItemType | Improve this Doc View Source Weight Gets or sets the weight of the item. Declaration public abstract float Weight { get; set; } Property Value Type Description System.Single Methods | Improve this Doc View Source Check(Item) Checks the specified inventory item to see if it is a custom item. Declaration public virtual bool Check(Item item) Parameters Type Name Description Item item The Item to check. Returns Type Description System.Boolean True if it is a custom item. | Improve this Doc View Source Check(Pickup) Checks the specified pickup to see if it is a custom item. Declaration public virtual bool Check(Pickup pickup) Parameters Type Name Description Pickup pickup The Pickup to check. Returns Type Description System.Boolean True if it is a custom item. | Improve this Doc View Source Check(Player) Checks the specified player's current item to see if it is a custom item. Declaration public virtual bool Check(Player player) Parameters Type Name Description Player player The Player who's current item should be checked. Returns Type Description System.Boolean True if it is a custom item. | Improve this Doc View Source Destroy() Called when the item is unregistered. Declaration public virtual void Destroy() | Improve this Doc View Source Get(Int32) Gets a CustomItem with a specific ID. Declaration [Obsolete(\"Use Get(uint) instead.\", true)] public static CustomItem Get(int id) Parameters Type Name Description System.Int32 id The CustomItem ID. Returns Type Description CustomItem The CustomItem matching the search, null if not registered. | Improve this Doc View Source Get(String) Gets a CustomItem with a specific name. Declaration public static CustomItem Get(string name) Parameters Type Name Description System.String name The CustomItem name. Returns Type Description CustomItem The CustomItem matching the search, null if not registered. | Improve this Doc View Source Get(Type) Gets a CustomItem with a specific type. Declaration public static CustomItem Get(Type t) Parameters Type Name Description System.Type t The System.Type type. Returns Type Description CustomItem The CustomItem matching the search, if not registered. | Improve this Doc View Source Get(UInt32) Gets a CustomItem with a specific ID. Declaration public static CustomItem Get(uint id) Parameters Type Name Description System.UInt32 id The CustomItem ID. Returns Type Description CustomItem The CustomItem matching the search, null if not registered. | Improve this Doc View Source Give(Player, Item, Boolean) Gives an Item as a CustomItem to a Player . Declaration public virtual void Give(Player player, Item item, bool displayMessage = true) Parameters Type Name Description Player player The Player who will receive the item. Item item The Item to be given. System.Boolean displayMessage Indicates whether or not ShowPickedUpMessage(Player) will be called when the player receives the item. | Improve this Doc View Source Give(Player, Pickup, Boolean) Gives a InventorySystem.Items.Pickups.ItemPickupBase as a CustomItem to a Player . Declaration public virtual void Give(Player player, Pickup pickup, bool displayMessage = true) Parameters Type Name Description Player player The Player who will receive the item. Pickup pickup The InventorySystem.Items.Pickups.ItemPickupBase to be given. System.Boolean displayMessage Indicates whether or not ShowPickedUpMessage(Player) will be called when the player receives the item. | Improve this Doc View Source Give(Player, Boolean) Gives the CustomItem to a player. Declaration public virtual void Give(Player player, bool displayMessage = true) Parameters Type Name Description Player player The Player who will receive the item. System.Boolean displayMessage Indicates whether or not ShowPickedUpMessage(Player) will be called when the player receives the item. | Improve this Doc View Source Init() Called when the item is registered. Declaration public virtual void Init() | Improve this Doc View Source OnAcquired(Player) Called anytime the item enters a player's inventory by any means. Declaration protected virtual void OnAcquired(Player player) Parameters Type Name Description Player player The Player acquiring the item. | Improve this Doc View Source OnChanging(ChangingItemEventArgs) Handles tracking items when they are selected in the player's inventory. Declaration protected virtual void OnChanging(ChangingItemEventArgs ev) Parameters Type Name Description ChangingItemEventArgs ev ChangingItemEventArgs . | Improve this Doc View Source OnDropping(DroppingItemEventArgs) Handles tracking items when they are dropped by a player. Declaration protected virtual void OnDropping(DroppingItemEventArgs ev) Parameters Type Name Description DroppingItemEventArgs ev DroppingItemEventArgs . | Improve this Doc View Source OnOwnerChangingRole(OwnerChangingRoleEventArgs) Handles tracking items when they a player changes their role. Declaration protected virtual void OnOwnerChangingRole(OwnerChangingRoleEventArgs ev) Parameters Type Name Description OwnerChangingRoleEventArgs ev OwnerChangingRoleEventArgs . | Improve this Doc View Source OnOwnerDying(OwnerDyingEventArgs) Handles making sure custom items are not \"lost\" when a player dies. Declaration protected virtual void OnOwnerDying(OwnerDyingEventArgs ev) Parameters Type Name Description OwnerDyingEventArgs ev OwnerDyingEventArgs . | Improve this Doc View Source OnOwnerEscaping(OwnerEscapingEventArgs) Handles making sure custom items are not \"lost\" when a player escapes. Declaration protected virtual void OnOwnerEscaping(OwnerEscapingEventArgs ev) Parameters Type Name Description OwnerEscapingEventArgs ev OwnerEscapingEventArgs . | Improve this Doc View Source OnOwnerHandcuffing(OwnerHandcuffingEventArgs) Handles making sure custom items are not \"lost\" when being handcuffed. Declaration protected virtual void OnOwnerHandcuffing(OwnerHandcuffingEventArgs ev) Parameters Type Name Description OwnerHandcuffingEventArgs ev OwnerHandcuffingEventArgs . | Improve this Doc View Source OnPickingUp(PickingUpItemEventArgs) Handles tracking items when they are picked up by a player. Declaration protected virtual void OnPickingUp(PickingUpItemEventArgs ev) Parameters Type Name Description PickingUpItemEventArgs ev PickingUpItemEventArgs . | Improve this Doc View Source OnUpgrading(UpgradingEventArgs) Handles making sure custom items are not affected by SCP-914. Declaration protected virtual void OnUpgrading(UpgradingEventArgs ev) Parameters Type Name Description UpgradingEventArgs ev UpgradingEventArgs . | Improve this Doc View Source OnUpgrading(UpgradingItemEventArgs) Declaration protected virtual void OnUpgrading(UpgradingItemEventArgs ev) Parameters Type Name Description UpgradingItemEventArgs ev | Improve this Doc View Source OnWaitingForPlayers() Clears the lists of item uniqIDs and Pickups since any still in the list will be invalid. Declaration protected virtual void OnWaitingForPlayers() | Improve this Doc View Source RegisterItems(Boolean, Object) Registers all the CustomItem 's present in the current assembly. Declaration public static IEnumerable<CustomItem> RegisterItems(bool skipReflection = false, object overrideClass = null) Parameters Type Name Description System.Boolean skipReflection Whether or not reflection is skipped (more efficient if you are not using your custom item classes as config objects). System.Object overrideClass The class to search properties for, if different from the plugin's config class. Returns Type Description System.Collections.Generic.IEnumerable < CustomItem > A System.Collections.Generic.IEnumerable<T> of CustomItem which contains all registered CustomItem 's. | Improve this Doc View Source RegisterItems(IEnumerable<Type>, Boolean, Boolean, Object) Registers all the CustomItem 's present in the current assembly. Declaration public static IEnumerable<CustomItem> RegisterItems(IEnumerable<Type> targetTypes, bool isIgnored = false, bool skipReflection = false, object overrideClass = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > targetTypes The System.Collections.Generic.IEnumerable<T> of System.Type containing the target types. System.Boolean isIgnored A value indicating whether the target types should be ignored. System.Boolean skipReflection Whether or not reflection is skipped (more efficient if you are not using your custom item classes as config objects). System.Object overrideClass The class to search properties for, if different from the plugin's config class. Returns Type Description System.Collections.Generic.IEnumerable < CustomItem > A System.Collections.Generic.IEnumerable<T> of CustomItem which contains all registered CustomItem 's. | Improve this Doc View Source ShowPickedUpMessage(Player) Shows a message to the player upon picking up a custom item. Declaration protected virtual void ShowPickedUpMessage(Player player) Parameters Type Name Description Player player The Player who will be shown the message. | Improve this Doc View Source ShowSelectedMessage(Player) Shows a message to the player upon selecting a custom item. Declaration protected virtual void ShowSelectedMessage(Player player) Parameters Type Name Description Player player The Player who will be shown the message. | Improve this Doc View Source Spawn(Player, Item, Player) Spawns a Item as a CustomItem where a specific Player is, and optionally sets the previous owner. Declaration public virtual Pickup Spawn(Player player, Item item, Player previousOwner = null) Parameters Type Name Description Player player The Player position where the CustomItem will be spawned. Item item The Item to be spawned as a CustomItem . Player previousOwner The previous owner of the pickup, can be null. Returns Type Description Pickup The Pickup of the spawned CustomItem . | Improve this Doc View Source Spawn(Player, Player) Spawns the CustomItem where a specific Player is, and optionally sets the previous owner. Declaration public virtual Pickup Spawn(Player player, Player previousOwner = null) Parameters Type Name Description Player player The Player position where the CustomItem will be spawned. Player previousOwner The previous owner of the pickup, can be null. Returns Type Description Pickup The Pickup of the spawned CustomItem . | Improve this Doc View Source Spawn(IEnumerable<SpawnPoint>, UInt32) Spawns CustomItem s inside spawnPoints . Declaration public virtual uint Spawn(IEnumerable<SpawnPoint> spawnPoints, uint limit) Parameters Type Name Description System.Collections.Generic.IEnumerable < SpawnPoint > spawnPoints The spawn points System.Collections.Generic.IEnumerable<T> . System.UInt32 limit The spawn limit. Returns Type Description System.UInt32 Returns the number of spawned items. | Improve this Doc View Source Spawn(Single, Single, Single) Spawns the CustomItem in a specific location. Declaration public virtual Pickup Spawn(float x, float y, float z) Parameters Type Name Description System.Single x The x coordinate. System.Single y The y coordinate. System.Single z The z coordinate. Returns Type Description Pickup The Pickup wrapper of the spawned CustomItem . | Improve this Doc View Source Spawn(Single, Single, Single, Item) Spawns a Item as a CustomItem in a specific location. Declaration public virtual Pickup Spawn(float x, float y, float z, Item item) Parameters Type Name Description System.Single x The x coordinate. System.Single y The y coordinate. System.Single z The z coordinate. Item item The Item to be spawned as a CustomItem . Returns Type Description Pickup The Pickup wrapper of the spawned CustomItem . | Improve this Doc View Source Spawn(Vector3, Item, Player) Spawns the CustomItem in a specific position. Declaration public virtual Pickup Spawn(Vector3 position, Item item, Player previousOwner = null) Parameters Type Name Description UnityEngine.Vector3 position The UnityEngine.Vector3 where the CustomItem will be spawned. Item item The Item to be spawned as a CustomItem . Player previousOwner The PreviousOwner of the item. Can be null. Returns Type Description Pickup The Pickup of the spawned CustomItem . | Improve this Doc View Source Spawn(Vector3, Player) Spawns the CustomItem in a specific position. Declaration public virtual Pickup Spawn(Vector3 position, Player previousOwner = null) Parameters Type Name Description UnityEngine.Vector3 position The UnityEngine.Vector3 where the CustomItem will be spawned. Player previousOwner The PreviousOwner of the item. Can be null. Returns Type Description Pickup The Pickup of the spawned CustomItem . | Improve this Doc View Source SpawnAll() Spawns all items at their dynamic and static positions. Declaration public virtual void SpawnAll() | Improve this Doc View Source SubscribeEvents() Called after the manager is initialized, to allow loading of special event handlers. Declaration protected virtual void SubscribeEvents() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() | Improve this Doc View Source TryGet(Item, out CustomItem) Checks to see if this item is a custom item. Declaration public static bool TryGet(Item item, out CustomItem customItem) Parameters Type Name Description Item item The Item to check. CustomItem customItem The CustomItem this item is. Returns Type Description System.Boolean True if the item is a custom item. | Improve this Doc View Source TryGet(Pickup, out CustomItem) Checks if this pickup is a custom item. Declaration public static bool TryGet(Pickup pickup, out CustomItem customItem) Parameters Type Name Description Pickup pickup The InventorySystem.Items.Pickups.ItemPickupBase to check. CustomItem customItem The CustomItem this pickup is. Returns Type Description System.Boolean True if the pickup is a custom item. | Improve this Doc View Source TryGet(Player, out CustomItem) Tries to get the player's current CustomItem in their hand. Declaration public static bool TryGet(Player player, out CustomItem customItem) Parameters Type Name Description Player player The Player to check. CustomItem customItem The CustomItem in their hand. Returns Type Description System.Boolean Returns a value indicating whether the Player has a CustomItem in their hand or not. | Improve this Doc View Source TryGet(Player, out IEnumerable<CustomItem>) Tries to get the player's System.Collections.Generic.IEnumerable<T> of CustomItem . Declaration public static bool TryGet(Player player, out IEnumerable<CustomItem> customItems) Parameters Type Name Description Player player The Player to check. System.Collections.Generic.IEnumerable < CustomItem > customItems The player's System.Collections.Generic.IEnumerable<T> of CustomItem . Returns Type Description System.Boolean Returns a value indicating whether the Player has a CustomItem in their hand or not. | Improve this Doc View Source TryGet(Int32, out CustomItem) Tries to get a CustomItem with a specific ID. Declaration [Obsolete(\"Use TryGet(uint, out CustomItem?) instead.\", true)] public static bool TryGet(int id, out CustomItem customItem) Parameters Type Name Description System.Int32 id The CustomItem ID to look for. CustomItem customItem The found CustomItem , null if not registered. Returns Type Description System.Boolean Returns a value indicating whether the CustomItem was found or not. | Improve this Doc View Source TryGet(String, out CustomItem) Tries to get a CustomItem with a specific name. Declaration public static bool TryGet(string name, out CustomItem customItem) Parameters Type Name Description System.String name The CustomItem name to look for. CustomItem customItem The found CustomItem , null if not registered. Returns Type Description System.Boolean Returns a value indicating whether the CustomItem was found or not. | Improve this Doc View Source TryGet(Type, out CustomItem) Tries to get a CustomItem with a specific type. Declaration public static bool TryGet(Type t, out CustomItem customItem) Parameters Type Name Description System.Type t The System.Type of the item to look for. CustomItem customItem The found CustomItem , null if not registered. Returns Type Description System.Boolean Returns a value indicating whether the CustomItem was found or not. | Improve this Doc View Source TryGet(UInt32, out CustomItem) Tries to get a CustomItem with a specific ID. Declaration public static bool TryGet(uint id, out CustomItem customItem) Parameters Type Name Description System.UInt32 id The CustomItem ID to look for. CustomItem customItem The found CustomItem , null if not registered. Returns Type Description System.Boolean Returns a value indicating whether the CustomItem was found or not. | Improve this Doc View Source TryGive(Player, Int32, Boolean) Gives to a specific Player a specic CustomItem . Declaration [Obsolete(\"Use TryGive(Player, uint, bool) instead.\", true)] public static bool TryGive(Player player, int id, bool displayMessage = true) Parameters Type Name Description Player player The Player to give the item to. System.Int32 id The IDs of the CustomItem to give. System.Boolean displayMessage Indicates a value whether ShowPickedUpMessage(Player) will be called when the player receives the CustomItem or not. Returns Type Description System.Boolean Returns a value indicating if the player was given the CustomItem or not. | Improve this Doc View Source TryGive(Player, String, Boolean) Gives to a specific Player a specic CustomItem . Declaration public static bool TryGive(Player player, string name, bool displayMessage = true) Parameters Type Name Description Player player The Player to give the item to. System.String name The name of the CustomItem to give. System.Boolean displayMessage Indicates a value whether ShowPickedUpMessage(Player) will be called when the player receives the CustomItem or not. Returns Type Description System.Boolean Returns a value indicating if the player was given the CustomItem or not. | Improve this Doc View Source TryGive(Player, Type, Boolean) Gives to a specific Player a specic CustomItem . Declaration public static bool TryGive(Player player, Type t, bool displayMessage = true) Parameters Type Name Description Player player The Player to give the item to. System.Type t The System.Type of the item to give. System.Boolean displayMessage Indicates a value whether ShowPickedUpMessage(Player) will be called when the player receives the CustomItem or not. Returns Type Description System.Boolean Returns a value indicating if the player was given the CustomItem or not. | Improve this Doc View Source TryGive(Player, UInt32, Boolean) Gives to a specific Player a specic CustomItem . Declaration public static bool TryGive(Player player, uint id, bool displayMessage = true) Parameters Type Name Description Player player The Player to give the item to. System.UInt32 id The IDs of the CustomItem to give. System.Boolean displayMessage Indicates a value whether ShowPickedUpMessage(Player) will be called when the player receives the CustomItem or not. Returns Type Description System.Boolean Returns a value indicating if the player was given the CustomItem or not. | Improve this Doc View Source TrySpawn(Int32, Vector3, out Pickup) Tries to spawn a specific CustomItem at a specific UnityEngine.Vector3 position. Declaration [Obsolete(\"Use TrySpawn(uint, Vector3, out Pickup?) instead.\", true)] public static bool TrySpawn(int id, Vector3 position, out Pickup pickup) Parameters Type Name Description System.Int32 id The ID of the CustomItem to spawn. UnityEngine.Vector3 position The UnityEngine.Vector3 location to spawn the item. Pickup pickup The InventorySystem.Items.Pickups.ItemPickupBase instance of the CustomItem . Returns Type Description System.Boolean Returns a value indicating whether the CustomItem was spawned or not. | Improve this Doc View Source TrySpawn(String, Vector3, out Pickup) Tries to spawn a specific CustomItem at a specific UnityEngine.Vector3 position. Declaration public static bool TrySpawn(string name, Vector3 position, out Pickup pickup) Parameters Type Name Description System.String name The name of the CustomItem to spawn. UnityEngine.Vector3 position The UnityEngine.Vector3 location to spawn the item. Pickup pickup The InventorySystem.Items.Pickups.ItemPickupBase instance of the CustomItem . Returns Type Description System.Boolean Returns a value indicating whether the CustomItem was spawned or not. | Improve this Doc View Source TrySpawn(UInt32, Vector3, out Pickup) Tries to spawn a specific CustomItem at a specific UnityEngine.Vector3 position. Declaration public static bool TrySpawn(uint id, Vector3 position, out Pickup pickup) Parameters Type Name Description System.UInt32 id The ID of the CustomItem to spawn. UnityEngine.Vector3 position The UnityEngine.Vector3 location to spawn the item. Pickup pickup The InventorySystem.Items.Pickups.ItemPickupBase instance of the CustomItem . Returns Type Description System.Boolean Returns a value indicating whether the CustomItem was spawned or not. | Improve this Doc View Source UnregisterItems() Unregisters all the CustomItem 's present in the current assembly. Declaration public static IEnumerable<CustomItem> UnregisterItems() Returns Type Description System.Collections.Generic.IEnumerable < CustomItem > A System.Collections.Generic.IEnumerable<T> of CustomItem which contains all unregistered CustomItem 's. | Improve this Doc View Source UnregisterItems(IEnumerable<CustomItem>, Boolean) Unregisters all the CustomItem 's present in the current assembly. Declaration public static IEnumerable<CustomItem> UnregisterItems(IEnumerable<CustomItem> targetItems, bool isIgnored = false) Parameters Type Name Description System.Collections.Generic.IEnumerable < CustomItem > targetItems The System.Collections.Generic.IEnumerable<T> of CustomItem containing the target items. System.Boolean isIgnored A value indicating whether the target items should be ignored. Returns Type Description System.Collections.Generic.IEnumerable < CustomItem > A System.Collections.Generic.IEnumerable<T> of CustomItem which contains all unregistered CustomItem 's. | Improve this Doc View Source UnregisterItems(IEnumerable<Type>, Boolean) Unregisters all the CustomItem 's present in the current assembly. Declaration public static IEnumerable<CustomItem> UnregisterItems(IEnumerable<Type> targetTypes, bool isIgnored = false) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > targetTypes The System.Collections.Generic.IEnumerable<T> of System.Type containing the target types. System.Boolean isIgnored A value indicating whether the target types should be ignored. Returns Type Description System.Collections.Generic.IEnumerable < CustomItem > A System.Collections.Generic.IEnumerable<T> of CustomItem which contains all unregistered CustomItem 's. | Improve this Doc View Source UnsubscribeEvents() Called when the manager is being destroyed, to allow unloading of special event handlers. Declaration protected virtual void UnsubscribeEvents() Extension Methods Extensions.Register(CustomItem) Extensions.Unregister(CustomItem) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.Features.CustomWeapon.html": {
    "href": "api/Exiled.CustomItems.API.Features.CustomWeapon.html",
    "title": "Class CustomWeapon | EXILED Docs",
    "keywords": "Class CustomWeapon The Custom Weapon base class. Inheritance System.Object CustomItem CustomWeapon Inherited Members CustomItem.Registered CustomItem.Id CustomItem.Name CustomItem.Description CustomItem.Weight CustomItem.SpawnProperties CustomItem.Scale CustomItem.TrackedSerials CustomItem.ShouldMessageOnGban CustomItem.Get(Int32) CustomItem.Get(UInt32) CustomItem.Get(String) CustomItem.Get(Type) CustomItem.TryGet(Int32, CustomItem) CustomItem.TryGet(UInt32, CustomItem) CustomItem.TryGet(String, CustomItem) CustomItem.TryGet(Type, CustomItem) CustomItem.TryGet(Player, CustomItem) CustomItem.TryGet(Player, IEnumerable<CustomItem>) CustomItem.TryGet(Item, CustomItem) CustomItem.TryGet(Pickup, CustomItem) CustomItem.TrySpawn(Int32, Vector3, Pickup) CustomItem.TrySpawn(UInt32, Vector3, Pickup) CustomItem.TrySpawn(String, Vector3, Pickup) CustomItem.TryGive(Player, String, Boolean) CustomItem.TryGive(Player, Int32, Boolean) CustomItem.TryGive(Player, UInt32, Boolean) CustomItem.TryGive(Player, Type, Boolean) CustomItem.RegisterItems(Boolean, Object) CustomItem.RegisterItems(IEnumerable<Type>, Boolean, Boolean, Object) CustomItem.UnregisterItems() CustomItem.UnregisterItems(IEnumerable<Type>, Boolean) CustomItem.UnregisterItems(IEnumerable<CustomItem>, Boolean) CustomItem.Spawn(Single, Single, Single) CustomItem.Spawn(Single, Single, Single, Item) CustomItem.Spawn(Player, Player) CustomItem.Spawn(Player, Item, Player) CustomItem.Spawn(IEnumerable<SpawnPoint>, UInt32) CustomItem.SpawnAll() CustomItem.Give(Player, Item, Boolean) CustomItem.Give(Player, Pickup, Boolean) CustomItem.Init() CustomItem.Destroy() CustomItem.Check(Pickup) CustomItem.Check(Item) CustomItem.Check(Player) CustomItem.ToString() CustomItem.OnOwnerChangingRole(OwnerChangingRoleEventArgs) CustomItem.OnOwnerDying(OwnerDyingEventArgs) CustomItem.OnOwnerEscaping(OwnerEscapingEventArgs) CustomItem.OnOwnerHandcuffing(OwnerHandcuffingEventArgs) CustomItem.OnDropping(DroppingItemEventArgs) CustomItem.OnPickingUp(PickingUpItemEventArgs) CustomItem.OnChanging(ChangingItemEventArgs) CustomItem.OnUpgrading(UpgradingEventArgs) CustomItem.OnUpgrading(UpgradingItemEventArgs) CustomItem.OnAcquired(Player) CustomItem.OnWaitingForPlayers() CustomItem.ShowPickedUpMessage(Player) CustomItem.ShowSelectedMessage(Player) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.API.Features Assembly : Exiled.CustomItems.dll Syntax public abstract class CustomWeapon : CustomItem Properties | Improve this Doc View Source Attachments Gets or sets value indicating what InventorySystem.Items.Firearms.Attachments.Components.Attachment s the weapon will have. Declaration public virtual AttachmentName[] Attachments { get; set; } Property Value Type Description InventorySystem.Items.Firearms.Attachments.AttachmentName [] | Improve this Doc View Source ClipSize Gets or sets a value indicating how big of a clip the weapon will have. Declaration public virtual byte ClipSize { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Damage Gets or sets the weapon damage. Declaration public abstract float Damage { get; set; } Property Value Type Description System.Single | Improve this Doc View Source FriendlyFire Gets or sets a value indicating whether or not to allow friendly fire with this weapon on FF-enabled servers. Declaration public virtual bool FriendlyFire { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Type Declaration public override ItemType Type { get; set; } Property Value Type Description ItemType Overrides CustomItem.Type Methods | Improve this Doc View Source Give(Player, Boolean) Declaration public override void Give(Player player, bool displayMessage = true) Parameters Type Name Description Player player System.Boolean displayMessage Overrides CustomItem.Give(Player, Boolean) | Improve this Doc View Source OnHurting(HurtingEventArgs) Handles hurting for custom weapons. Declaration protected virtual void OnHurting(HurtingEventArgs ev) Parameters Type Name Description HurtingEventArgs ev HurtingEventArgs . | Improve this Doc View Source OnReloading(ReloadingWeaponEventArgs) Handles reloading for custom weapons. Declaration protected virtual void OnReloading(ReloadingWeaponEventArgs ev) Parameters Type Name Description ReloadingWeaponEventArgs ev ReloadingWeaponEventArgs . | Improve this Doc View Source OnShooting(ShootingEventArgs) Handles shooting for custom weapons. Declaration protected virtual void OnShooting(ShootingEventArgs ev) Parameters Type Name Description ShootingEventArgs ev ShootingEventArgs . | Improve this Doc View Source OnShot(ShotEventArgs) Handles shot for custom weapons. Declaration protected virtual void OnShot(ShotEventArgs ev) Parameters Type Name Description ShotEventArgs ev ShotEventArgs . | Improve this Doc View Source Spawn(Vector3, Item, Player) Declaration public override Pickup Spawn(Vector3 position, Item item, Player previousOwner = null) Parameters Type Name Description UnityEngine.Vector3 position Item item Player previousOwner Returns Type Description Pickup Overrides CustomItem.Spawn(Vector3, Item, Player) | Improve this Doc View Source Spawn(Vector3, Player) Declaration public override Pickup Spawn(Vector3 position, Player previousOwner = null) Parameters Type Name Description UnityEngine.Vector3 position Player previousOwner Returns Type Description Pickup Overrides CustomItem.Spawn(Vector3, Player) | Improve this Doc View Source SubscribeEvents() Declaration protected override void SubscribeEvents() Overrides CustomItem.SubscribeEvents() | Improve this Doc View Source UnsubscribeEvents() Declaration protected override void UnsubscribeEvents() Overrides CustomItem.UnsubscribeEvents() Extension Methods Extensions.Register(CustomItem) Extensions.Unregister(CustomItem) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.API.Features.html": {
    "href": "api/Exiled.CustomItems.API.Features.html",
    "title": "Namespace Exiled.CustomItems.API.Features | EXILED Docs",
    "keywords": "Namespace Exiled.CustomItems.API.Features Classes CustomArmor The Custom Armor base class. CustomGrenade The Custom Grenade base class. CustomItem The Custom Item base class. CustomWeapon The Custom Weapon base class."
  },
  "api/Exiled.CustomItems.API.html": {
    "href": "api/Exiled.CustomItems.API.html",
    "title": "Namespace Exiled.CustomItems.API | EXILED Docs",
    "keywords": "Namespace Exiled.CustomItems.API Classes Extensions A collection of API methods."
  },
  "api/Exiled.CustomItems.Config.html": {
    "href": "api/Exiled.CustomItems.Config.html",
    "title": "Class Config | EXILED Docs",
    "keywords": "Class Config The plugin's config class. Inheritance System.Object Config Implements IConfig Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems Assembly : Exiled.CustomItems.dll Syntax public class Config : IConfig Properties | Improve this Doc View Source Debug Declaration public bool Debug { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PickedUpHint Gets the hint that is shown when someone pickups a CustomItem . Declaration public Broadcast PickedUpHint { get; } Property Value Type Description Broadcast | Improve this Doc View Source SelectedHint Gets the hint that is shown when someone pickups a CustomItem . Declaration public Broadcast SelectedHint { get; } Property Value Type Description Broadcast Implements IConfig Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.CustomItems.html": {
    "href": "api/Exiled.CustomItems.CustomItems.html",
    "title": "Class CustomItems | EXILED Docs",
    "keywords": "Class CustomItems Handles all CustomItem API. Inheritance System.Object Plugin < Config > CustomItems Implements IPlugin < Config > System.IComparable < IPlugin < IConfig >> Inherited Members Plugin<Config>.Assembly Plugin<Config>.Name Plugin<Config>.Prefix Plugin<Config>.Author Plugin<Config>.Priority Plugin<Config>.Version Plugin<Config>.RequiredExiledVersion Plugin<Config>.IgnoreRequiredVersionCheck Plugin<Config>.Commands Plugin<Config>.Config Plugin<Config>.InternalTranslation Plugin<Config>.ConfigPath Plugin<Config>.TranslationPath Plugin<Config>.OnReloaded() Plugin<Config>.OnRegisteringCommands() Plugin<Config>.OnUnregisteringCommands() Plugin<Config>.CompareTo(IPlugin<IConfig>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems Assembly : Exiled.CustomItems.dll Syntax public class CustomItems : Plugin<Config>, IPlugin<Config>, IComparable<IPlugin<IConfig>> Properties | Improve this Doc View Source Instance Gets the static reference to this CustomItems class. Declaration public static CustomItems Instance { get; } Property Value Type Description CustomItems Methods | Improve this Doc View Source OnDisabled() Declaration public override void OnDisabled() Overrides Exiled.API.Features.Plugin<Exiled.CustomItems.Config>.OnDisabled() | Improve this Doc View Source OnEnabled() Declaration public override void OnEnabled() Overrides Exiled.API.Features.Plugin<Exiled.CustomItems.Config>.OnEnabled() Implements IPlugin<TConfig> System.IComparable<T> Extension Methods ConfigManager.LoadConfig(IPlugin<IConfig>, Dictionary<String, Object>) ConfigManager.LoadDefaultConfig(IPlugin<IConfig>, Dictionary<String, Object>) ConfigManager.LoadSeparatedConfig(IPlugin<IConfig>) PathExtensions.GetPath(IPlugin<IConfig>) TranslationManager.LoadTranslation(IPlugin<IConfig>, Dictionary<String, Object>) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomItems.html": {
    "href": "api/Exiled.CustomItems.html",
    "title": "Namespace Exiled.CustomItems | EXILED Docs",
    "keywords": "Namespace Exiled.CustomItems Classes Config The plugin's config class. CustomItems Handles all CustomItem API."
  },
  "api/Exiled.CustomItems.Patches.html": {
    "href": "api/Exiled.CustomItems.Patches.html",
    "title": "Namespace Exiled.CustomItems.Patches | EXILED Docs",
    "keywords": "Namespace Exiled.CustomItems.Patches Classes PlayerInventorySee Patches CommandSystem.Commands.RemoteAdmin.PlayerInventoryCommand.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@) . Adds the CustomItem support."
  },
  "api/Exiled.CustomItems.Patches.PlayerInventorySee.html": {
    "href": "api/Exiled.CustomItems.Patches.PlayerInventorySee.html",
    "title": "Class PlayerInventorySee | EXILED Docs",
    "keywords": "Class PlayerInventorySee Patches CommandSystem.Commands.RemoteAdmin.PlayerInventoryCommand.Execute(System.ArraySegment{System.String},CommandSystem.ICommandSender,System.String@) . Adds the CustomItem support. Inheritance System.Object PlayerInventorySee Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomItems.Patches Assembly : Exiled.CustomItems.dll Syntax public class PlayerInventorySee Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.API.Extensions.html": {
    "href": "api/Exiled.CustomRoles.API.Extensions.html",
    "title": "Class Extensions | EXILED Docs",
    "keywords": "Class Extensions A collection of API methods. Inheritance System.Object Extensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.API Assembly : Exiled.CustomRoles.dll Syntax public static class Extensions Methods | Improve this Doc View Source GetCustomRoles(Player) Gets a System.Collections.ObjectModel.ReadOnlyCollection<T> of the player's current custom roles. Declaration public static ReadOnlyCollection<CustomRole> GetCustomRoles(this Player player) Parameters Type Name Description Player player The Player to check for roles. Returns Type Description System.Collections.ObjectModel.ReadOnlyCollection < CustomRole > A System.Collections.ObjectModel.ReadOnlyCollection<T> of all current custom roles. | Improve this Doc View Source Register(CustomAbility) Registers a CustomAbility . Declaration public static void Register(this CustomAbility ability) Parameters Type Name Description CustomAbility ability The CustomAbility to be registered. | Improve this Doc View Source Register(CustomRole) Registers a CustomRole . Declaration public static void Register(this CustomRole role) Parameters Type Name Description CustomRole role CustomRole to be registered. | Improve this Doc View Source Register(IEnumerable<CustomRole>) Registers an System.Collections.Generic.IEnumerable<T> of CustomRole s. Declaration public static void Register(this IEnumerable<CustomRole> customRoles) Parameters Type Name Description System.Collections.Generic.IEnumerable < CustomRole > customRoles CustomRole s to be registered. | Improve this Doc View Source Unregister(CustomAbility) Unregisters a CustomAbility . Declaration public static void Unregister(this CustomAbility ability) Parameters Type Name Description CustomAbility ability The CustomAbility to be unregistered. | Improve this Doc View Source Unregister(CustomRole) Unregisters a CustomRole . Declaration public static void Unregister(this CustomRole role) Parameters Type Name Description CustomRole role CustomRole to be unregistered. | Improve this Doc View Source Unregister(IEnumerable<CustomRole>) Unregisters an System.Collections.Generic.IEnumerable<T> of CustomRole s. Declaration public static void Unregister(this IEnumerable<CustomRole> customRoles) Parameters Type Name Description System.Collections.Generic.IEnumerable < CustomRole > customRoles CustomRole s to be unregistered."
  },
  "api/Exiled.CustomRoles.API.Features.ActiveAbility.html": {
    "href": "api/Exiled.CustomRoles.API.Features.ActiveAbility.html",
    "title": "Class ActiveAbility | EXILED Docs",
    "keywords": "Class ActiveAbility The base class for active (on-use) abilities. Inheritance System.Object CustomAbility ActiveAbility Inherited Members CustomAbility.Registered CustomAbility.Name CustomAbility.Description CustomAbility.Players CustomAbility.AbilityType CustomAbility.Get(String) CustomAbility.TryGet(String, CustomAbility) CustomAbility.RegisterAbilities(Boolean, Object) CustomAbility.RegisterAbilities(IEnumerable<Type>, Boolean, Boolean, Object) CustomAbility.UnregisterAbilities() CustomAbility.UnregisterAbilities(IEnumerable<Type>, Boolean) CustomAbility.UnregisterAbilities(IEnumerable<CustomAbility>, Boolean) CustomAbility.AddAbility(Player) CustomAbility.RemoveAbility(Player) CustomAbility.Init() CustomAbility.Destroy() CustomAbility.SubscribeEvents() CustomAbility.UnsubscribeEvents() CustomAbility.AbilityAdded(Player) CustomAbility.AbilityRemoved(Player) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.API.Features Assembly : Exiled.CustomRoles.dll Syntax public abstract class ActiveAbility : CustomAbility Properties | Improve this Doc View Source ActivePlayers Gets all players actively using this ability. Declaration public HashSet<Player> ActivePlayers { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source CanUseOverride Gets or sets an action to override the behavior of CanUseAbility(Player, out String) . Declaration public virtual Func<bool> CanUseOverride { get; set; } Property Value Type Description System.Func < System.Boolean > | Improve this Doc View Source Cooldown Gets or sets how long must go between ability uses. Declaration public abstract float Cooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Duration Gets or sets how long the ability lasts. Declaration public abstract float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source LastUsed Gets the last time this ability was used. Declaration public Dictionary<Player, DateTime> LastUsed { get; } Property Value Type Description System.Collections.Generic.Dictionary < Player , System.DateTime > Methods | Improve this Doc View Source AbilityEnded(Player) Called when the abilities duration has ended. Declaration protected virtual void AbilityEnded(Player player) Parameters Type Name Description Player player The Player the ability has ended for. | Improve this Doc View Source AbilityUsed(Player) Called when the ability is used. Declaration protected virtual void AbilityUsed(Player player) Parameters Type Name Description Player player The Player using the ability. | Improve this Doc View Source CanUseAbility(Player, out String) Checks to see if the ability is usable by the player. Declaration public virtual bool CanUseAbility(Player player, out string response) Parameters Type Name Description Player player The player to check. System.String response The response to send to the player. Returns Type Description System.Boolean True if the ability is usable. | Improve this Doc View Source Check(Player) Checks if the specified player is using the ability. Declaration public override bool Check(Player player) Parameters Type Name Description Player player The Player to check. Returns Type Description System.Boolean True if the player is actively using the ability. Overrides CustomAbility.Check(Player) | Improve this Doc View Source EndAbility(Player) Ends the ability. Declaration public void EndAbility(Player player) Parameters Type Name Description Player player The Player the ability is ended for. | Improve this Doc View Source ShowMessage(Player) Called when the ability is successfully used. Declaration protected virtual void ShowMessage(Player player) Parameters Type Name Description Player player The Player using the ability. | Improve this Doc View Source UseAbility(Player) Uses the ability. Declaration public void UseAbility(Player player) Parameters Type Name Description Player player The Player using the ability. Extension Methods Extensions.Register(CustomAbility) Extensions.Unregister(CustomAbility) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.API.Features.CustomAbility.html": {
    "href": "api/Exiled.CustomRoles.API.Features.CustomAbility.html",
    "title": "Class CustomAbility | EXILED Docs",
    "keywords": "Class CustomAbility The custom ability base class. Inheritance System.Object CustomAbility ActiveAbility PassiveAbility Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.API.Features Assembly : Exiled.CustomRoles.dll Syntax public abstract class CustomAbility Constructors | Improve this Doc View Source CustomAbility() Initializes a new instance of the CustomAbility class. Declaration public CustomAbility() Properties | Improve this Doc View Source AbilityType Gets the System.Type for this ability. Declaration public string AbilityType { get; } Property Value Type Description System.String | Improve this Doc View Source Description Gets or sets the description of the ability. Declaration public abstract string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name Gets or sets the name of the ability. Declaration public abstract string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Players Gets all players who have this ability. Declaration public HashSet<Player> Players { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > | Improve this Doc View Source Registered Gets a list of all registered custom abilities. Declaration public static HashSet<CustomAbility> Registered { get; } Property Value Type Description System.Collections.Generic.HashSet < CustomAbility > Methods | Improve this Doc View Source AbilityAdded(Player) Called when the ability is first added to the player. Declaration protected virtual void AbilityAdded(Player player) Parameters Type Name Description Player player The Player using the ability. | Improve this Doc View Source AbilityRemoved(Player) Called when the ability is being removed. Declaration protected virtual void AbilityRemoved(Player player) Parameters Type Name Description Player player The Player using the ability. | Improve this Doc View Source AddAbility(Player) Adds this ability to the player. Declaration public void AddAbility(Player player) Parameters Type Name Description Player player The Player to give the ability to. | Improve this Doc View Source Check(Player) Checks to see if the specified player has this ability. Declaration public virtual bool Check(Player player) Parameters Type Name Description Player player The Player to check. Returns Type Description System.Boolean True if the player has this ability. | Improve this Doc View Source Destroy() Destroys this ability. Declaration public void Destroy() | Improve this Doc View Source Get(String) Gets a CustomRole by name. Declaration public static CustomAbility Get(string name) Parameters Type Name Description System.String name The name of the role to get. Returns Type Description CustomAbility The role, or null if it doesn't exist. | Improve this Doc View Source Init() Initializes this ability. Declaration public void Init() | Improve this Doc View Source RegisterAbilities(Boolean, Object) Registers all the CustomAbility 's present in the current assembly. Declaration public static IEnumerable<CustomAbility> RegisterAbilities(bool skipReflection = false, object overrideClass = null) Parameters Type Name Description System.Boolean skipReflection Whether or not reflection is skipped (more efficient if you are not using your custom item classes as config objects). System.Object overrideClass The class to search properties for, if different from the plugin's config class. Returns Type Description System.Collections.Generic.IEnumerable < CustomAbility > A System.Collections.Generic.IEnumerable<T> of CustomAbility which contains all registered CustomAbility 's. | Improve this Doc View Source RegisterAbilities(IEnumerable<Type>, Boolean, Boolean, Object) Registers all the CustomAbility 's present in the current assembly. Declaration public static IEnumerable<CustomAbility> RegisterAbilities(IEnumerable<Type> targetTypes, bool isIgnored = false, bool skipReflection = false, object overrideClass = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > targetTypes The System.Collections.Generic.IEnumerable<T> of System.Type containing the target types. System.Boolean isIgnored A value indicating whether the target types should be ignored. System.Boolean skipReflection Whether or not reflection is skipped (more efficient if you are not using your custom item classes as config objects). System.Object overrideClass The class to search properties for, if different from the plugin's config class. Returns Type Description System.Collections.Generic.IEnumerable < CustomAbility > A System.Collections.Generic.IEnumerable<T> of CustomAbility which contains all registered CustomAbility 's. | Improve this Doc View Source RemoveAbility(Player) Removes this ability from the player. Declaration public void RemoveAbility(Player player) Parameters Type Name Description Player player The Player to remove this ability from. | Improve this Doc View Source SubscribeEvents() Loads the internal event handlers for the ability. Declaration protected virtual void SubscribeEvents() | Improve this Doc View Source TryGet(String, out CustomAbility) Tries to get a CustomRole by name. Declaration public static bool TryGet(string name, out CustomAbility customAbility) Parameters Type Name Description System.String name The name of the role to get. CustomAbility customAbility The custom role. Returns Type Description System.Boolean True if the role exists. Exceptions Type Condition System.ArgumentNullException If the name is null or an empty string. | Improve this Doc View Source UnregisterAbilities() Unregisters all the CustomAbility 's present in the current assembly. Declaration public static IEnumerable<CustomAbility> UnregisterAbilities() Returns Type Description System.Collections.Generic.IEnumerable < CustomAbility > A System.Collections.Generic.IEnumerable<T> of CustomAbility which contains all unregistered CustomAbility 's. | Improve this Doc View Source UnregisterAbilities(IEnumerable<CustomAbility>, Boolean) Unregisters all the CustomAbility 's present in the current assembly. Declaration public static IEnumerable<CustomAbility> UnregisterAbilities(IEnumerable<CustomAbility> targetAbilities, bool isIgnored = false) Parameters Type Name Description System.Collections.Generic.IEnumerable < CustomAbility > targetAbilities The System.Collections.Generic.IEnumerable<T> of CustomAbility containing the target roles. System.Boolean isIgnored A value indicating whether the target abilities should be ignored. Returns Type Description System.Collections.Generic.IEnumerable < CustomAbility > A System.Collections.Generic.IEnumerable<T> of CustomAbility which contains all unregistered CustomAbility 's. | Improve this Doc View Source UnregisterAbilities(IEnumerable<Type>, Boolean) Unregisters all the CustomAbility 's present in the current assembly. Declaration public static IEnumerable<CustomAbility> UnregisterAbilities(IEnumerable<Type> targetTypes, bool isIgnored = false) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > targetTypes The System.Collections.Generic.IEnumerable<T> of System.Type containing the target types. System.Boolean isIgnored A value indicating whether the target types should be ignored. Returns Type Description System.Collections.Generic.IEnumerable < CustomAbility > A System.Collections.Generic.IEnumerable<T> of CustomAbility which contains all unregistered CustomAbility 's. | Improve this Doc View Source UnsubscribeEvents() Unloads the internal event handlers for the ability. Declaration protected virtual void UnsubscribeEvents() Extension Methods Extensions.Register(CustomAbility) Extensions.Unregister(CustomAbility) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.API.Features.CustomRole.html": {
    "href": "api/Exiled.CustomRoles.API.Features.CustomRole.html",
    "title": "Class CustomRole | EXILED Docs",
    "keywords": "Class CustomRole The custom role base class. Inheritance System.Object CustomRole Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.API.Features Assembly : Exiled.CustomRoles.dll Syntax public abstract class CustomRole Properties | Improve this Doc View Source AbilityUsage Gets or sets a System.String for the ability usage help sent to players in the player console. Declaration public virtual string AbilityUsage { get; set; } Property Value Type Description System.String | Improve this Doc View Source Ammo Gets or sets the starting ammo for the role. Declaration public virtual Dictionary<AmmoType, ushort> Ammo { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < AmmoType , System.UInt16 > | Improve this Doc View Source Broadcast Gets or sets a value indicating broadcast that will be shown to the player. Declaration public virtual Broadcast Broadcast { get; set; } Property Value Type Description Broadcast | Improve this Doc View Source ConsoleMessage Gets or sets a System.String for the console message given to players when they receive a role. Declaration public virtual string ConsoleMessage { get; set; } Property Value Type Description System.String | Improve this Doc View Source CustomAbilities Gets or sets a list of the roles custom abilities. Declaration public virtual List<CustomAbility> CustomAbilities { get; set; } Property Value Type Description System.Collections.Generic.List < CustomAbility > | Improve this Doc View Source CustomInfo Gets or sets the CustomInfo of this role. Declaration public abstract string CustomInfo { get; set; } Property Value Type Description System.String | Improve this Doc View Source CustomRoleFFMultiplier Gets or sets a System.Collections.Generic.Dictionary<TKey, TValue> containing cached System.String and their System.Collections.Generic.Dictionary<TKey, TValue> which is cached Role with FF multiplier. Declaration public virtual Dictionary<RoleTypeId, float> CustomRoleFFMultiplier { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < PlayerRoles.RoleTypeId , System.Single > | Improve this Doc View Source Description Gets or sets the description of this role. Declaration public abstract string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source DisplayCustomItemMessages Gets or sets a value indicating whether players will receive a message for getting a custom item, when gaining it through the inventory config for this role. Declaration public virtual bool DisplayCustomItemMessages { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Id Gets or sets the custom RoleID of the role. Declaration public abstract uint Id { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Inventory Gets or sets the starting inventory for the role. Declaration public virtual List<string> Inventory { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source KeepInventoryOnSpawn Gets or sets a value indicating whether players keep their current inventory when gaining this role. Declaration public virtual bool KeepInventoryOnSpawn { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KeepPositionOnSpawn Gets or sets a value indicating whether players keep their current position when gaining this role. Declaration public virtual bool KeepPositionOnSpawn { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KeepRoleOnChangingRole Gets or sets a value indicating whether players keep this Custom Role when they switch roles: Class-D -> Scientist for example. Declaration public virtual bool KeepRoleOnChangingRole { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KeepRoleOnDeath Gets or sets a value indicating whether players keep this role when they die. Declaration public virtual bool KeepRoleOnDeath { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxHealth Gets or sets the max Health for the role. Declaration public abstract int MaxHealth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Name Gets or sets the name of this role. Declaration public abstract string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Registered Gets a list of all registered custom roles. Declaration public static HashSet<CustomRole> Registered { get; } Property Value Type Description System.Collections.Generic.HashSet < CustomRole > | Improve this Doc View Source RemovalKillsPlayer Gets or sets a value indicating whether players die when this role is removed. Declaration public virtual bool RemovalKillsPlayer { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Role Gets or sets the PlayerRoles.RoleTypeId to spawn this role as. Declaration public virtual RoleTypeId Role { get; set; } Property Value Type Description PlayerRoles.RoleTypeId | Improve this Doc View Source Scale Gets or sets a value indicating the Player 's size. Declaration public virtual Vector3 Scale { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source SpawnChance Gets or sets a value indicating the Spawn Chance of the Role. Declaration public virtual float SpawnChance { get; set; } Property Value Type Description System.Single | Improve this Doc View Source SpawnProperties Gets or sets the possible spawn locations for this role. Declaration public virtual SpawnProperties SpawnProperties { get; set; } Property Value Type Description SpawnProperties | Improve this Doc View Source TrackedPlayers Gets all of the players currently set to this role. Declaration public HashSet<Player> TrackedPlayers { get; } Property Value Type Description System.Collections.Generic.HashSet < Player > Methods | Improve this Doc View Source AddRole(Player) Handles setup of the role, including spawn location, inventory and registering event handlers and add FF rules. Declaration public virtual void AddRole(Player player) Parameters Type Name Description Player player The Player to add the role to. | Improve this Doc View Source Check(Player) Checks if the given player has this role. Declaration public virtual bool Check(Player player) Parameters Type Name Description Player player The Player to check. Returns Type Description System.Boolean True if the player has this role. | Improve this Doc View Source Destroy() Destroys this role manager. Declaration public virtual void Destroy() | Improve this Doc View Source ForceSyncSetPlayerFriendlyFire(CustomRole, Player) Force sync CustomRole Friendly Fire with Player (Set to). Declaration public static void ForceSyncSetPlayerFriendlyFire(CustomRole roleToSync, Player player) Parameters Type Name Description CustomRole roleToSync CustomRole to sync with player. Player player Player Player to add custom role to. | Improve this Doc View Source Get(Int32) Gets a CustomRole by ID. Declaration [Obsolete(\"Use Get(uint) instead\", false)] public static CustomRole Get(int id) Parameters Type Name Description System.Int32 id The ID of the role to get. Returns Type Description CustomRole The role, or null if it doesn't exist. | Improve this Doc View Source Get(String) Gets a CustomRole by name. Declaration public static CustomRole Get(string name) Parameters Type Name Description System.String name The name of the role to get. Returns Type Description CustomRole The role, or null if it doesn't exist. | Improve this Doc View Source Get(Type) Gets a CustomRole by type. Declaration public static CustomRole Get(Type t) Parameters Type Name Description System.Type t The System.Type to get. Returns Type Description CustomRole The role, or null if it doesn't exist. | Improve this Doc View Source Get(UInt32) Declaration public static CustomRole Get(uint id) Parameters Type Name Description System.UInt32 id Returns Type Description CustomRole | Improve this Doc View Source GetSpawnPosition() Gets a random UnityEngine.Vector3 from SpawnProperties . Declaration protected Vector3 GetSpawnPosition() Returns Type Description UnityEngine.Vector3 The chosen spawn location. | Improve this Doc View Source Init() Initializes this role manager. Declaration public virtual void Init() | Improve this Doc View Source RegisterRoles(Boolean, Object) Registers all the CustomRole 's present in the current assembly. Declaration public static IEnumerable<CustomRole> RegisterRoles(bool skipReflection = false, object overrideClass = null) Parameters Type Name Description System.Boolean skipReflection Whether or not reflection is skipped (more efficient if you are not using your custom item classes as config objects). System.Object overrideClass The class to search properties for, if different from the plugin's config class. Returns Type Description System.Collections.Generic.IEnumerable < CustomRole > A System.Collections.Generic.IEnumerable<T> of CustomRole which contains all registered CustomRole 's. | Improve this Doc View Source RegisterRoles(IEnumerable<Type>, Boolean, Boolean, Object) Registers all the CustomRole 's present in the current assembly. Declaration public static IEnumerable<CustomRole> RegisterRoles(IEnumerable<Type> targetTypes, bool isIgnored = false, bool skipReflection = false, object overrideClass = null) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > targetTypes The System.Collections.Generic.IEnumerable<T> of System.Type containing the target types. System.Boolean isIgnored A value indicating whether the target types should be ignored. System.Boolean skipReflection Whether or not reflection is skipped (more efficient if you are not using your custom item classes as config objects). System.Object overrideClass The class to search properties for, if different from the plugin's config class. Returns Type Description System.Collections.Generic.IEnumerable < CustomRole > A System.Collections.Generic.IEnumerable<T> of CustomRole which contains all registered CustomRole 's. | Improve this Doc View Source RemoveRole(Player) Removes the role from a specific player and FF rules. Declaration public virtual void RemoveRole(Player player) Parameters Type Name Description Player player The Player to remove the role from. | Improve this Doc View Source RoleAdded(Player) Called after the role has been added to the player. Declaration protected virtual void RoleAdded(Player player) Parameters Type Name Description Player player The Player the role was added to. | Improve this Doc View Source RoleRemoved(Player) Called 1 frame before the role is removed from the player. Declaration protected virtual void RoleRemoved(Player player) Parameters Type Name Description Player player The Player the role was removed from. | Improve this Doc View Source SetFriendlyFire(RoleTypeId, Single) Tries to add PlayerRoles.RoleTypeId to CustomRole FriendlyFire rules. Declaration public void SetFriendlyFire(RoleTypeId roleToAdd, float ffMult) Parameters Type Name Description PlayerRoles.RoleTypeId roleToAdd Role to add. System.Single ffMult Friendly fire multiplier. | Improve this Doc View Source SetFriendlyFire(KeyValuePair<RoleTypeId, Single>) Wrapper to call SetFriendlyFire(RoleTypeId, Single) . Declaration public void SetFriendlyFire(KeyValuePair<RoleTypeId, float> roleFF) Parameters Type Name Description System.Collections.Generic.KeyValuePair < PlayerRoles.RoleTypeId , System.Single > roleFF Role with FF to add even if it exists. | Improve this Doc View Source ShowBroadcast(Player) Shows the spawn broadcast to the player. Declaration protected virtual void ShowBroadcast(Player player) Parameters Type Name Description Player player The Player to show the message to. | Improve this Doc View Source ShowMessage(Player) Shows the spawn message to the player. Declaration protected virtual void ShowMessage(Player player) Parameters Type Name Description Player player The Player to show the message to. | Improve this Doc View Source SubscribeEvents() Called when the role is initialized to setup internal events. Declaration protected virtual void SubscribeEvents() | Improve this Doc View Source SyncPlayerFriendlyFire(CustomRole, Player, Boolean) ResyncCustomRole Friendly Fire with Player (Append, or Overwrite). Declaration public static void SyncPlayerFriendlyFire(CustomRole roleToSync, Player player, bool overwrite = false) Parameters Type Name Description CustomRole roleToSync CustomRole to sync with player. Player player Player Player to add custom role to. System.Boolean overwrite System.Boolean whether to force sync (Overwriting previous information). | Improve this Doc View Source TryAddFriendlyFire(RoleTypeId, Single) Tries to add PlayerRoles.RoleTypeId to CustomRole FriendlyFire rules. Declaration public bool TryAddFriendlyFire(RoleTypeId roleToAdd, float ffMult) Parameters Type Name Description PlayerRoles.RoleTypeId roleToAdd Role to add. System.Single ffMult Friendly fire multiplier. Returns Type Description System.Boolean Whether the item was able to be added. | Improve this Doc View Source TryAddFriendlyFire(Dictionary<RoleTypeId, Single>, Boolean) Tries to add PlayerRoles.RoleTypeId to CustomRole FriendlyFire rules. Declaration public bool TryAddFriendlyFire(Dictionary<RoleTypeId, float> ffRules, bool overwrite = false) Parameters Type Name Description System.Collections.Generic.Dictionary < PlayerRoles.RoleTypeId , System.Single > ffRules Roles to add with friendly fire values. System.Boolean overwrite Whether to overwrite current values if they exist. Returns Type Description System.Boolean Whether the item was able to be added. | Improve this Doc View Source TryAddFriendlyFire(KeyValuePair<RoleTypeId, Single>) Tries to add PlayerRoles.RoleTypeId to CustomRole FriendlyFire rules. Declaration public bool TryAddFriendlyFire(KeyValuePair<RoleTypeId, float> pairedRoleFF) Parameters Type Name Description System.Collections.Generic.KeyValuePair < PlayerRoles.RoleTypeId , System.Single > pairedRoleFF Role FF multiplier to add. Returns Type Description System.Boolean Whether the item was able to be added. | Improve this Doc View Source TryAddItem(Player, String) Tries to add an item to the player's inventory by name. Declaration protected bool TryAddItem(Player player, string itemName) Parameters Type Name Description Player player The Player to try giving the item to. System.String itemName The name of the item to try adding. Returns Type Description System.Boolean Whether or not the item was able to be added. | Improve this Doc View Source TryGet(Player, out IReadOnlyCollection<CustomRole>) Tries to get a System.Collections.Generic.IReadOnlyCollection<T> of the specified Player 's CustomRole s. Declaration public static bool TryGet(Player player, out IReadOnlyCollection<CustomRole> customRoles) Parameters Type Name Description Player player The player to check. System.Collections.Generic.IReadOnlyCollection < CustomRole > customRoles The custom roles the player has. Returns Type Description System.Boolean True if the player has custom roles. Exceptions Type Condition System.ArgumentNullException If the player is null . | Improve this Doc View Source TryGet(Int32, out CustomRole) Tries to get a CustomRole by . Declaration [Obsolete(\"Use TryGet(uint) instead\", false)] public static bool TryGet(int id, out CustomRole customRole) Parameters Type Name Description System.Int32 id The ID of the role to get. CustomRole customRole The custom role. Returns Type Description System.Boolean True if the role exists. | Improve this Doc View Source TryGet(String, out CustomRole) Tries to get a CustomRole by name. Declaration public static bool TryGet(string name, out CustomRole customRole) Parameters Type Name Description System.String name The name of the role to get. CustomRole customRole The custom role. Returns Type Description System.Boolean True if the role exists. Exceptions Type Condition System.ArgumentNullException If the name is null or an empty string. | Improve this Doc View Source TryGet(Type, out CustomRole) Tries to get a CustomRole by name. Declaration public static bool TryGet(Type t, out CustomRole customRole) Parameters Type Name Description System.Type t The System.Type of the role to get. CustomRole customRole The custom role. Returns Type Description System.Boolean True if the role exists. Exceptions Type Condition System.ArgumentNullException If the name is null or an empty string. | Improve this Doc View Source TryGet(UInt32, out CustomRole) Declaration public static bool TryGet(uint id, out CustomRole customRole) Parameters Type Name Description System.UInt32 id CustomRole customRole Returns Type Description System.Boolean | Improve this Doc View Source UnregisterRoles() Unregisters all the CustomRole 's present in the current assembly. Declaration public static IEnumerable<CustomRole> UnregisterRoles() Returns Type Description System.Collections.Generic.IEnumerable < CustomRole > A System.Collections.Generic.IEnumerable<T> of CustomRole which contains all unregistered CustomRole 's. | Improve this Doc View Source UnregisterRoles(IEnumerable<CustomRole>, Boolean) Unregisters all the CustomRole 's present in the current assembly. Declaration public static IEnumerable<CustomRole> UnregisterRoles(IEnumerable<CustomRole> targetRoles, bool isIgnored = false) Parameters Type Name Description System.Collections.Generic.IEnumerable < CustomRole > targetRoles The System.Collections.Generic.IEnumerable<T> of CustomRole containing the target roles. System.Boolean isIgnored A value indicating whether the target roles should be ignored. Returns Type Description System.Collections.Generic.IEnumerable < CustomRole > A System.Collections.Generic.IEnumerable<T> of CustomRole which contains all unregistered CustomRole 's. | Improve this Doc View Source UnregisterRoles(IEnumerable<Type>, Boolean) Unregisters all the CustomRole 's present in the current assembly. Declaration public static IEnumerable<CustomRole> UnregisterRoles(IEnumerable<Type> targetTypes, bool isIgnored = false) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Type > targetTypes The System.Collections.Generic.IEnumerable<T> of System.Type containing the target types. System.Boolean isIgnored A value indicating whether the target types should be ignored. Returns Type Description System.Collections.Generic.IEnumerable < CustomRole > A System.Collections.Generic.IEnumerable<T> of CustomRole which contains all unregistered CustomRole 's. | Improve this Doc View Source UnsubscribeEvents() Called when the role is destroyed to unsubscribe internal event handlers. Declaration protected virtual void UnsubscribeEvents() Extension Methods Extensions.Register(CustomRole) Extensions.Unregister(CustomRole) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.API.Features.Extensions.html": {
    "href": "api/Exiled.CustomRoles.API.Features.Extensions.html",
    "title": "Namespace Exiled.CustomRoles.API.Features.Extensions | EXILED Docs",
    "keywords": "Namespace Exiled.CustomRoles.API.Features.Extensions Classes ParserExtension Extensions for ParsingEventBuffer ."
  },
  "api/Exiled.CustomRoles.API.Features.Extensions.ParserExtension.html": {
    "href": "api/Exiled.CustomRoles.API.Features.Extensions.ParserExtension.html",
    "title": "Class ParserExtension | EXILED Docs",
    "keywords": "Class ParserExtension Extensions for ParsingEventBuffer . Inheritance System.Object ParserExtension Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.API.Features.Extensions Assembly : Exiled.CustomRoles.dll Syntax public static class ParserExtension Methods | Improve this Doc View Source TryFindMappingEntry(ParsingEventBuffer, Func<Scalar, Boolean>, out Nullable<Scalar>, out Nullable<ParsingEvent>) Tries to find a valid mapping entry. Declaration public static bool TryFindMappingEntry(this ParsingEventBuffer parser, Func<Scalar, bool> selector, out Scalar? key, out ParsingEvent? value) Parameters Type Name Description ParsingEventBuffer parser The ParsingEventBuffer parser. System.Func < Scalar , System.Boolean > selector The selector. System.Nullable < Scalar > key The key found. System.Nullable < ParsingEvent > value The value found. Returns Type Description System.Boolean true when a valid mapping entry is found; otherwise, false ."
  },
  "api/Exiled.CustomRoles.API.Features.html": {
    "href": "api/Exiled.CustomRoles.API.Features.html",
    "title": "Namespace Exiled.CustomRoles.API.Features | EXILED Docs",
    "keywords": "Namespace Exiled.CustomRoles.API.Features Classes ActiveAbility The base class for active (on-use) abilities. CustomAbility The custom ability base class. CustomRole The custom role base class. PassiveAbility The base class for passive (always active) abilities."
  },
  "api/Exiled.CustomRoles.API.Features.Interfaces.html": {
    "href": "api/Exiled.CustomRoles.API.Features.Interfaces.html",
    "title": "Namespace Exiled.CustomRoles.API.Features.Interfaces | EXILED Docs",
    "keywords": "Namespace Exiled.CustomRoles.API.Features.Interfaces Interfaces ITypeDiscriminator A System.Type discriminator."
  },
  "api/Exiled.CustomRoles.API.Features.Interfaces.ITypeDiscriminator.html": {
    "href": "api/Exiled.CustomRoles.API.Features.Interfaces.ITypeDiscriminator.html",
    "title": "Interface ITypeDiscriminator | EXILED Docs",
    "keywords": "Interface ITypeDiscriminator A System.Type discriminator. Namespace : Exiled.CustomRoles.API.Features.Interfaces Assembly : Exiled.CustomRoles.dll Syntax public interface ITypeDiscriminator Properties | Improve this Doc View Source BaseType Gets the base System.Type . Declaration Type BaseType { get; } Property Value Type Description System.Type Methods | Improve this Doc View Source TryResolve(ParsingEventBuffer, out Type) Tries to resolve a mapping into a specific System.Type . Declaration bool TryResolve(ParsingEventBuffer buffer, out Type suggestedType) Parameters Type Name Description ParsingEventBuffer buffer The ParsingEventBuffer parser buffer. System.Type suggestedType The System.Type to resolve the mapping key. Returns Type Description System.Boolean true if resolution is successful; otherwise, false . Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.API.Features.Parsers.AbstractClassNodeTypeResolver.html": {
    "href": "api/Exiled.CustomRoles.API.Features.Parsers.AbstractClassNodeTypeResolver.html",
    "title": "Class AbstractClassNodeTypeResolver | EXILED Docs",
    "keywords": "Class AbstractClassNodeTypeResolver A node resolver for CustomAbility . Inheritance System.Object AbstractClassNodeTypeResolver Namespace : Exiled.CustomRoles.API.Features.Parsers Assembly : Exiled.CustomRoles.dll Syntax public class AbstractClassNodeTypeResolver : INodeDeserializer Constructors | Improve this Doc View Source AbstractClassNodeTypeResolver(INodeDeserializer, ITypeDiscriminator[]) Initializes a new instance of the AbstractClassNodeTypeResolver class. Declaration public AbstractClassNodeTypeResolver(INodeDeserializer original, params ITypeDiscriminator[] discriminators) Parameters Type Name Description INodeDeserializer original The original deserializer. ITypeDiscriminator [] discriminators The ITypeDiscriminator array of discriminators. Methods | Improve this Doc View Source Deserialize(IParser, Type, Func<IParser, Type, Object>, out Object) Declaration public bool Deserialize(IParser reader, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value) Parameters Type Name Description IParser reader System.Type expectedType System.Func < IParser , System.Type , System.Object > nestedObjectDeserializer System.Object value Returns Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.API.Features.Parsers.AggregateExpectationTypeResolver-1.html": {
    "href": "api/Exiled.CustomRoles.API.Features.Parsers.AggregateExpectationTypeResolver-1.html",
    "title": "Class AggregateExpectationTypeResolver<T> | EXILED Docs",
    "keywords": "Class AggregateExpectationTypeResolver<T> Inheritance System.Object AggregateExpectationTypeResolver<T> Implements ITypeDiscriminator Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.API.Features.Parsers Assembly : Exiled.CustomRoles.dll Syntax public class AggregateExpectationTypeResolver<T> : ITypeDiscriminator where T : class Type Parameters Name Description T Constructors | Improve this Doc View Source AggregateExpectationTypeResolver(INamingConvention) Initializes a new instance of the AggregateExpectationTypeResolver<T> class. Declaration public AggregateExpectationTypeResolver(INamingConvention namingConvention) Parameters Type Name Description INamingConvention namingConvention The instance. Properties | Improve this Doc View Source BaseType Declaration public Type BaseType { get; } Property Value Type Description System.Type Methods | Improve this Doc View Source TryResolve(ParsingEventBuffer, out Type) Declaration public bool TryResolve(ParsingEventBuffer buffer, out Type suggestedType) Parameters Type Name Description ParsingEventBuffer buffer System.Type suggestedType Returns Type Description System.Boolean Implements ITypeDiscriminator Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.API.Features.Parsers.html": {
    "href": "api/Exiled.CustomRoles.API.Features.Parsers.html",
    "title": "Namespace Exiled.CustomRoles.API.Features.Parsers | EXILED Docs",
    "keywords": "Namespace Exiled.CustomRoles.API.Features.Parsers Classes AbstractClassNodeTypeResolver A node resolver for CustomAbility . AggregateExpectationTypeResolver<T> ParsingEventBuffer"
  },
  "api/Exiled.CustomRoles.API.Features.Parsers.ParsingEventBuffer.html": {
    "href": "api/Exiled.CustomRoles.API.Features.Parsers.ParsingEventBuffer.html",
    "title": "Class ParsingEventBuffer | EXILED Docs",
    "keywords": "Class ParsingEventBuffer Inheritance System.Object ParsingEventBuffer Namespace : Exiled.CustomRoles.API.Features.Parsers Assembly : Exiled.CustomRoles.dll Syntax public class ParsingEventBuffer : IParser Constructors | Improve this Doc View Source ParsingEventBuffer(LinkedList<ParsingEvent>) Initializes a new instance of the ParsingEventBuffer class. Declaration public ParsingEventBuffer(LinkedList<ParsingEvent> events) Parameters Type Name Description System.Collections.Generic.LinkedList < ParsingEvent > events The System.Collections.Generic.LinkedList<T> instance. Properties | Improve this Doc View Source Current Declaration public ParsingEvent? Current { get; } Property Value Type Description System.Nullable < ParsingEvent > Methods | Improve this Doc View Source MoveNext() Declaration public bool MoveNext() Returns Type Description System.Boolean | Improve this Doc View Source Reset() Resets the buffer. Declaration public void Reset() Extension Methods ParserExtension.TryFindMappingEntry(ParsingEventBuffer, Func<Scalar, Boolean>, out Nullable<Scalar>, out Nullable<ParsingEvent>) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.API.Features.PassiveAbility.html": {
    "href": "api/Exiled.CustomRoles.API.Features.PassiveAbility.html",
    "title": "Class PassiveAbility | EXILED Docs",
    "keywords": "Class PassiveAbility The base class for passive (always active) abilities. Inheritance System.Object CustomAbility PassiveAbility Inherited Members CustomAbility.Registered CustomAbility.Name CustomAbility.Description CustomAbility.Players CustomAbility.AbilityType CustomAbility.Get(String) CustomAbility.TryGet(String, CustomAbility) CustomAbility.RegisterAbilities(Boolean, Object) CustomAbility.RegisterAbilities(IEnumerable<Type>, Boolean, Boolean, Object) CustomAbility.UnregisterAbilities() CustomAbility.UnregisterAbilities(IEnumerable<Type>, Boolean) CustomAbility.UnregisterAbilities(IEnumerable<CustomAbility>, Boolean) CustomAbility.Check(Player) CustomAbility.AddAbility(Player) CustomAbility.RemoveAbility(Player) CustomAbility.Init() CustomAbility.Destroy() CustomAbility.SubscribeEvents() CustomAbility.UnsubscribeEvents() CustomAbility.AbilityAdded(Player) CustomAbility.AbilityRemoved(Player) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.API.Features Assembly : Exiled.CustomRoles.dll Syntax public abstract class PassiveAbility : CustomAbility Extension Methods Extensions.Register(CustomAbility) Extensions.Unregister(CustomAbility) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.API.html": {
    "href": "api/Exiled.CustomRoles.API.html",
    "title": "Namespace Exiled.CustomRoles.API | EXILED Docs",
    "keywords": "Namespace Exiled.CustomRoles.API Classes Extensions A collection of API methods."
  },
  "api/Exiled.CustomRoles.Commands.html": {
    "href": "api/Exiled.CustomRoles.Commands.html",
    "title": "Namespace Exiled.CustomRoles.Commands | EXILED Docs",
    "keywords": "Namespace Exiled.CustomRoles.Commands Classes Parent The main parent command. UseAbility Handles the using of custom role abilities."
  },
  "api/Exiled.CustomRoles.Commands.Parent.html": {
    "href": "api/Exiled.CustomRoles.Commands.Parent.html",
    "title": "Class Parent | EXILED Docs",
    "keywords": "Class Parent The main parent command. Inheritance System.Object CommandSystem.CommandHandler ParentCommand Parent Implements CommandSystem.ICommandHandler CommandSystem.ICommand Inherited Members ParentCommand.Execute(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) CommandSystem.CommandHandler.Commands CommandSystem.CommandHandler.CommandAliases CommandSystem.CommandHandler.TryGetCommand(System.String, CommandSystem.ICommand) CommandSystem.CommandHandler.RegisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.UnregisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.ClearCommands() CommandSystem.CommandHandler.AllCommands System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.Commands Assembly : Exiled.CustomRoles.dll Syntax [CommandHandler(typeof(RemoteAdminCommandHandler))] [CommandHandler(typeof(GameConsoleCommandHandler))] public class Parent : ParentCommand, ICommandHandler, ICommand Constructors | Improve this Doc View Source Parent() Initializes a new instance of the Parent class. Declaration public Parent() Properties | Improve this Doc View Source Aliases Declaration public override string[] Aliases { get; } Property Value Type Description System.String [] Overrides ParentCommand.Aliases | Improve this Doc View Source Command Declaration public override string Command { get; } Property Value Type Description System.String Overrides ParentCommand.Command | Improve this Doc View Source Description Declaration public override string Description { get; } Property Value Type Description System.String Overrides ParentCommand.Description Methods | Improve this Doc View Source ExecuteParent(ArraySegment<String>, ICommandSender, out String) Declaration protected override bool ExecuteParent(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Overrides ParentCommand.ExecuteParent(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) | Improve this Doc View Source LoadGeneratedCommands() Declaration public override void LoadGeneratedCommands() Overrides CommandSystem.CommandHandler.LoadGeneratedCommands() Implements CommandSystem.ICommandHandler CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.Commands.UseAbility.html": {
    "href": "api/Exiled.CustomRoles.Commands.UseAbility.html",
    "title": "Class UseAbility | EXILED Docs",
    "keywords": "Class UseAbility Handles the using of custom role abilities. Inheritance System.Object UseAbility Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.Commands Assembly : Exiled.CustomRoles.dll Syntax [CommandHandler(typeof(ClientCommandHandler))] public class UseAbility : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.Config.html": {
    "href": "api/Exiled.CustomRoles.Config.html",
    "title": "Class Config | EXILED Docs",
    "keywords": "Class Config The plugin's config. Inheritance System.Object Config Implements IConfig Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles Assembly : Exiled.CustomRoles.dll Syntax public class Config : IConfig Properties | Improve this Doc View Source Debug Gets or sets a value indicating whether debug messages should be printed to the console. Declaration public bool Debug { get; set; } Property Value Type Description System.Boolean System.Boolean . | Improve this Doc View Source GotRoleHint Gets the hint that is shown when someone gets a CustomRole . Declaration public Broadcast GotRoleHint { get; } Property Value Type Description Broadcast | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source UsedAbilityHint Gets the hint that is shown when someone used a CustomAbility . Declaration public Broadcast UsedAbilityHint { get; } Property Value Type Description Broadcast Implements IConfig Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.CustomRoles.html": {
    "href": "api/Exiled.CustomRoles.CustomRoles.html",
    "title": "Class CustomRoles | EXILED Docs",
    "keywords": "Class CustomRoles Handles all custom role API functions. Inheritance System.Object Plugin < Config > CustomRoles Implements IPlugin < Config > System.IComparable < IPlugin < IConfig >> Inherited Members Plugin<Config>.Assembly Plugin<Config>.Name Plugin<Config>.Prefix Plugin<Config>.Author Plugin<Config>.Priority Plugin<Config>.Version Plugin<Config>.RequiredExiledVersion Plugin<Config>.IgnoreRequiredVersionCheck Plugin<Config>.Commands Plugin<Config>.Config Plugin<Config>.InternalTranslation Plugin<Config>.ConfigPath Plugin<Config>.TranslationPath Plugin<Config>.OnReloaded() Plugin<Config>.OnRegisteringCommands() Plugin<Config>.OnUnregisteringCommands() Plugin<Config>.CompareTo(IPlugin<IConfig>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles Assembly : Exiled.CustomRoles.dll Syntax public class CustomRoles : Plugin<Config>, IPlugin<Config>, IComparable<IPlugin<IConfig>> Constructors | Improve this Doc View Source CustomRoles() Initializes a new instance of the CustomRoles class. Declaration public CustomRoles() Properties | Improve this Doc View Source Instance Gets a static reference to the plugin's instance. Declaration public static CustomRoles Instance { get; } Property Value Type Description CustomRoles Methods | Improve this Doc View Source OnDisabled() Declaration public override void OnDisabled() Overrides Exiled.API.Features.Plugin<Exiled.CustomRoles.Config>.OnDisabled() | Improve this Doc View Source OnEnabled() Declaration public override void OnEnabled() Overrides Exiled.API.Features.Plugin<Exiled.CustomRoles.Config>.OnEnabled() Implements IPlugin<TConfig> System.IComparable<T> Extension Methods ConfigManager.LoadConfig(IPlugin<IConfig>, Dictionary<String, Object>) ConfigManager.LoadDefaultConfig(IPlugin<IConfig>, Dictionary<String, Object>) ConfigManager.LoadSeparatedConfig(IPlugin<IConfig>) PathExtensions.GetPath(IPlugin<IConfig>) TranslationManager.LoadTranslation(IPlugin<IConfig>, Dictionary<String, Object>) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.Events.html": {
    "href": "api/Exiled.CustomRoles.Events.html",
    "title": "Namespace Exiled.CustomRoles.Events | EXILED Docs",
    "keywords": "Namespace Exiled.CustomRoles.Events Classes PlayerHandlers Handles general events for players."
  },
  "api/Exiled.CustomRoles.Events.PlayerHandlers.html": {
    "href": "api/Exiled.CustomRoles.Events.PlayerHandlers.html",
    "title": "Class PlayerHandlers | EXILED Docs",
    "keywords": "Class PlayerHandlers Handles general events for players. Inheritance System.Object PlayerHandlers Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.CustomRoles.Events Assembly : Exiled.CustomRoles.dll Syntax public class PlayerHandlers Constructors | Improve this Doc View Source PlayerHandlers(CustomRoles) Initializes a new instance of the PlayerHandlers class. Declaration public PlayerHandlers(CustomRoles plugin) Parameters Type Name Description CustomRoles plugin The CustomRoles plugin instance. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.CustomRoles.html": {
    "href": "api/Exiled.CustomRoles.html",
    "title": "Namespace Exiled.CustomRoles | EXILED Docs",
    "keywords": "Namespace Exiled.CustomRoles Classes Config The plugin's config. CustomRoles Handles all custom role API functions."
  },
  "api/Exiled.Events.Commands.Config.EConfig.html": {
    "href": "api/Exiled.Events.Commands.Config.EConfig.html",
    "title": "Class EConfig | EXILED Docs",
    "keywords": "Class EConfig The config command. Inheritance System.Object CommandSystem.CommandHandler ParentCommand EConfig Implements CommandSystem.ICommandHandler CommandSystem.ICommand Inherited Members ParentCommand.Execute(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) CommandSystem.CommandHandler.Commands CommandSystem.CommandHandler.CommandAliases CommandSystem.CommandHandler.TryGetCommand(System.String, CommandSystem.ICommand) CommandSystem.CommandHandler.RegisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.UnregisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.ClearCommands() CommandSystem.CommandHandler.AllCommands System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Config Assembly : Exiled.Events.dll Syntax [CommandHandler(typeof(GameConsoleCommandHandler))] public class EConfig : ParentCommand, ICommandHandler, ICommand Constructors | Improve this Doc View Source EConfig() Initializes a new instance of the EConfig class. Declaration public EConfig() Properties | Improve this Doc View Source Aliases Declaration public override string[] Aliases { get; } Property Value Type Description System.String [] Overrides ParentCommand.Aliases | Improve this Doc View Source Command Declaration public override string Command { get; } Property Value Type Description System.String Overrides ParentCommand.Command | Improve this Doc View Source Description Declaration public override string Description { get; } Property Value Type Description System.String Overrides ParentCommand.Description Methods | Improve this Doc View Source ExecuteParent(ArraySegment<String>, ICommandSender, out String) Declaration protected override bool ExecuteParent(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Overrides ParentCommand.ExecuteParent(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) | Improve this Doc View Source LoadGeneratedCommands() Declaration public override void LoadGeneratedCommands() Overrides CommandSystem.CommandHandler.LoadGeneratedCommands() Implements CommandSystem.ICommandHandler CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Config.html": {
    "href": "api/Exiled.Events.Commands.Config.html",
    "title": "Namespace Exiled.Events.Commands.Config | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Commands.Config Classes EConfig The config command. Merge The config merge command. Split The config split command."
  },
  "api/Exiled.Events.Commands.Config.Merge.html": {
    "href": "api/Exiled.Events.Commands.Config.Merge.html",
    "title": "Class Merge | EXILED Docs",
    "keywords": "Class Merge The config merge command. Inheritance System.Object Merge Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Config Assembly : Exiled.Events.dll Syntax public class Merge : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the Merge command. Declaration public static Merge Instance { get; } Property Value Type Description Merge Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Config.Split.html": {
    "href": "api/Exiled.Events.Commands.Config.Split.html",
    "title": "Class Split | EXILED Docs",
    "keywords": "Class Split The config split command. Inheritance System.Object Split Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Config Assembly : Exiled.Events.dll Syntax public class Split : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the Split command. Declaration public static Split Instance { get; } Property Value Type Description Split Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.All.html": {
    "href": "api/Exiled.Events.Commands.Reload.All.html",
    "title": "Class All | EXILED Docs",
    "keywords": "Class All The reload configs command. Inheritance System.Object All Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax public class All : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the All command. Declaration public static All Instance { get; } Property Value Type Description All Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.Configs.html": {
    "href": "api/Exiled.Events.Commands.Reload.Configs.html",
    "title": "Class Configs | EXILED Docs",
    "keywords": "Class Configs The reload configs command. Inheritance System.Object Configs Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax public class Configs : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the Configs command. Declaration public static Configs Instance { get; } Property Value Type Description Configs Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.GamePlay.html": {
    "href": "api/Exiled.Events.Commands.Reload.GamePlay.html",
    "title": "Class GamePlay | EXILED Docs",
    "keywords": "Class GamePlay The reload gameplay command. Inheritance System.Object GamePlay Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax public class GamePlay : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the GamePlay command. Declaration public static GamePlay Instance { get; } Property Value Type Description GamePlay Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.html": {
    "href": "api/Exiled.Events.Commands.Reload.html",
    "title": "Namespace Exiled.Events.Commands.Reload | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Commands.Reload Classes All The reload configs command. Configs The reload configs command. GamePlay The reload gameplay command. Permissions The reload configs command. Plugins The reload plugins command. Reload The reload command. RemoteAdmin The reload remoteadmin command. Translations The reload configs command."
  },
  "api/Exiled.Events.Commands.Reload.Permissions.html": {
    "href": "api/Exiled.Events.Commands.Reload.Permissions.html",
    "title": "Class Permissions | EXILED Docs",
    "keywords": "Class Permissions The reload configs command. Inheritance System.Object Permissions Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax public class Permissions : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the Permissions command. Declaration public static Permissions Instance { get; } Property Value Type Description Permissions Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.Plugins.html": {
    "href": "api/Exiled.Events.Commands.Reload.Plugins.html",
    "title": "Class Plugins | EXILED Docs",
    "keywords": "Class Plugins The reload plugins command. Inheritance System.Object Plugins Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax public class Plugins : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the Plugins command. Declaration public static Plugins Instance { get; } Property Value Type Description Plugins Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.Reload.html": {
    "href": "api/Exiled.Events.Commands.Reload.Reload.html",
    "title": "Class Reload | EXILED Docs",
    "keywords": "Class Reload The reload command. Inheritance System.Object CommandSystem.CommandHandler ParentCommand Reload Implements CommandSystem.ICommandHandler CommandSystem.ICommand Inherited Members ParentCommand.Execute(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) CommandSystem.CommandHandler.Commands CommandSystem.CommandHandler.CommandAliases CommandSystem.CommandHandler.TryGetCommand(System.String, CommandSystem.ICommand) CommandSystem.CommandHandler.RegisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.UnregisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.ClearCommands() CommandSystem.CommandHandler.AllCommands System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax [CommandHandler(typeof(RemoteAdminCommandHandler))] [CommandHandler(typeof(GameConsoleCommandHandler))] public class Reload : ParentCommand, ICommandHandler, ICommand Constructors | Improve this Doc View Source Reload() Initializes a new instance of the Reload class. Declaration public Reload() Properties | Improve this Doc View Source Aliases Declaration public override string[] Aliases { get; } Property Value Type Description System.String [] Overrides ParentCommand.Aliases | Improve this Doc View Source Command Declaration public override string Command { get; } Property Value Type Description System.String Overrides ParentCommand.Command | Improve this Doc View Source Description Declaration public override string Description { get; } Property Value Type Description System.String Overrides ParentCommand.Description Methods | Improve this Doc View Source ExecuteParent(ArraySegment<String>, ICommandSender, out String) Declaration protected override bool ExecuteParent(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Overrides ParentCommand.ExecuteParent(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) | Improve this Doc View Source LoadGeneratedCommands() Declaration public override void LoadGeneratedCommands() Overrides CommandSystem.CommandHandler.LoadGeneratedCommands() Implements CommandSystem.ICommandHandler CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.RemoteAdmin.html": {
    "href": "api/Exiled.Events.Commands.Reload.RemoteAdmin.html",
    "title": "Class RemoteAdmin | EXILED Docs",
    "keywords": "Class RemoteAdmin The reload remoteadmin command. Inheritance System.Object RemoteAdmin Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax public class RemoteAdmin : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the RemoteAdmin command. Declaration public static RemoteAdmin Instance { get; } Property Value Type Description RemoteAdmin Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Reload.Translations.html": {
    "href": "api/Exiled.Events.Commands.Reload.Translations.html",
    "title": "Class Translations | EXILED Docs",
    "keywords": "Class Translations The reload configs command. Inheritance System.Object Translations Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Reload Assembly : Exiled.Events.dll Syntax public class Translations : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Gets static instance of the Translations command. Declaration public static Translations Instance { get; } Property Value Type Description Translations Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Show.html": {
    "href": "api/Exiled.Events.Commands.Show.html",
    "title": "Namespace Exiled.Events.Commands.Show | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Commands.Show Classes Plugins The command to show all plugins. Show The command to show all plugins."
  },
  "api/Exiled.Events.Commands.Show.Plugins.html": {
    "href": "api/Exiled.Events.Commands.Show.Plugins.html",
    "title": "Class Plugins | EXILED Docs",
    "keywords": "Class Plugins The command to show all plugins. Inheritance System.Object Plugins Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Show Assembly : Exiled.Events.dll Syntax public sealed class Plugins : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Commands.Show.Show.html": {
    "href": "api/Exiled.Events.Commands.Show.Show.html",
    "title": "Class Show | EXILED Docs",
    "keywords": "Class Show The command to show all plugins. Inheritance System.Object CommandSystem.CommandHandler ParentCommand Show Implements CommandSystem.ICommandHandler CommandSystem.ICommand Inherited Members ParentCommand.Execute(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) CommandSystem.CommandHandler.Commands CommandSystem.CommandHandler.CommandAliases CommandSystem.CommandHandler.TryGetCommand(System.String, CommandSystem.ICommand) CommandSystem.CommandHandler.RegisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.UnregisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.ClearCommands() CommandSystem.CommandHandler.AllCommands System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Commands.Show Assembly : Exiled.Events.dll Syntax [CommandHandler(typeof(RemoteAdminCommandHandler))] [CommandHandler(typeof(GameConsoleCommandHandler))] public sealed class Show : ParentCommand, ICommandHandler, ICommand Constructors | Improve this Doc View Source Show() Initializes a new instance of the Show class. Declaration public Show() Properties | Improve this Doc View Source Aliases Declaration public override string[] Aliases { get; } Property Value Type Description System.String [] Overrides ParentCommand.Aliases | Improve this Doc View Source Command Declaration public override string Command { get; } Property Value Type Description System.String Overrides ParentCommand.Command | Improve this Doc View Source Description Declaration public override string Description { get; } Property Value Type Description System.String Overrides ParentCommand.Description Methods | Improve this Doc View Source ExecuteParent(ArraySegment<String>, ICommandSender, out String) Declaration protected override bool ExecuteParent(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Overrides ParentCommand.ExecuteParent(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) | Improve this Doc View Source LoadGeneratedCommands() Declaration public override void LoadGeneratedCommands() Overrides CommandSystem.CommandHandler.LoadGeneratedCommands() Implements CommandSystem.ICommandHandler CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Config.html": {
    "href": "api/Exiled.Events.Config.html",
    "title": "Class Config | EXILED Docs",
    "keywords": "Class Config Inheritance System.Object Config Implements IConfig Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events Assembly : Exiled.Events.dll Syntax public sealed class Config : IConfig Properties | Improve this Doc View Source CanFlashbangsAffectThrower Gets or sets a value indicating whether flashbangs flash original thrower. Declaration public bool CanFlashbangsAffectThrower { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanKeycardThrowAffectDoors Gets or sets a value indicating whether keycard throw can affect basic doors. Declaration public bool CanKeycardThrowAffectDoors { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanScp049SenseTutorial Gets or sets a value indicating whether SCP-049 can activate the sense ability on tutorials. Declaration public bool CanScp049SenseTutorial { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanSpawnBlood Gets or sets a value indicating whether the blood can be spawned or not. Declaration public bool CanSpawnBlood { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanTutorialBlockScp173 Gets or sets a value indicating whether SCP-173 can be blocked or not by the tutorial. Declaration public bool CanTutorialBlockScp173 { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanTutorialTriggerScp096 Gets or sets a value indicating whether SCP-096 can be triggered or not by the tutorial. Declaration public bool CanTutorialTriggerScp096 { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Debug Declaration public bool Debug { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNameTrackingEnabled Gets or sets a value indicating whether the name tracking is enabled or not. Declaration public bool IsNameTrackingEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LogRaCommands Gets or sets a value indicating whether to log RA commands. Declaration public bool LogRaCommands { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldDropInventory Gets or sets a value indicating whether the inventory should be dropped before being set as spectator, through commands or plugins. Declaration public bool ShouldDropInventory { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldLogBans Gets a value indicating whether bans should be logged or not. Declaration public bool ShouldLogBans { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldReloadConfigsAtRoundRestart Gets or sets a value indicating whether configs has to be reloaded every time a round restarts. Declaration public bool ShouldReloadConfigsAtRoundRestart { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldReloadTranslationsAtRoundRestart Gets or sets a value indicating whether translations has to be reloaded every time a round restarts. Declaration public bool ShouldReloadTranslationsAtRoundRestart { get; set; } Property Value Type Description System.Boolean Implements IConfig Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Cassie.html": {
    "href": "api/Exiled.Events.EventArgs.Cassie.html",
    "title": "Namespace Exiled.Events.EventArgs.Cassie | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Cassie Classes SendingCassieMessageEventArgs Contains all the information after sending a C.A.S.S.I.E. message."
  },
  "api/Exiled.Events.EventArgs.Cassie.SendingCassieMessageEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Cassie.SendingCassieMessageEventArgs.html",
    "title": "Class SendingCassieMessageEventArgs | EXILED Docs",
    "keywords": "Class SendingCassieMessageEventArgs Contains all the information after sending a C.A.S.S.I.E. message. Inheritance System.Object SendingCassieMessageEventArgs Implements IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Cassie Assembly : Exiled.Events.dll Syntax public class SendingCassieMessageEventArgs : IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source SendingCassieMessageEventArgs(String, Boolean, Boolean, Boolean) Initializes a new instance of the SendingCassieMessageEventArgs class. Declaration public SendingCassieMessageEventArgs(string words, bool makeHold, bool makeNoise, bool isAllowed = true) Parameters Type Name Description System.String words System.Boolean makeHold System.Boolean makeNoise System.Boolean isAllowed Indicates whether the event can be executed or not. Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the message can be sent. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MakeHold Gets or sets a value indicating whether or not the message should be held. Declaration public bool MakeHold { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MakeNoise Gets or sets a value indicating whether or not the message should make noise. Declaration public bool MakeNoise { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Words Gets or sets the message. Declaration public string Words { get; set; } Property Value Type Description System.String Implements IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.html",
    "title": "Namespace Exiled.Events.EventArgs.Interfaces | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Interfaces Interfaces IAttackerEvent Event args for when a player is taking damage. ICameraEvent Event args used for all Camera related events. IDeniableEvent Event args for events that can be allowed or denied. IDoorEvent Event args used for all Door related events. IExiledEvent The base Exiled Event Args interface to be used by all other event arg interfaces/classes. IFirearmEvent Event args used for all Firearm related events. IGeneratorEvent Event args used for all Generator related events. IHazardEvent Event args for all Hazards.EnvironmentalHazard related events. IItemEvent Event args used for all Item related events. IPickupEvent Event args used for all Pickup related events. IPlayerEvent Event args used for all Player related events. IRagdollEvent Event args used for all Ragdoll related events. IRoomEvent Event args used for all Room related events. ITeslaEvent Event args used for all TeslaGate related events."
  },
  "api/Exiled.Events.EventArgs.Interfaces.IAttackerEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.IAttackerEvent.html",
    "title": "Interface IAttackerEvent | EXILED Docs",
    "keywords": "Interface IAttackerEvent Event args for when a player is taking damage. Inherited Members IPlayerEvent.Player Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface IAttackerEvent : IPlayerEvent, IExiledEvent Properties | Improve this Doc View Source Attacker Gets the attacker Player . Declaration Player Attacker { get; } Property Value Type Description Player | Improve this Doc View Source DamageHandler Gets or sets the DamageHandlerBase managing the damage to the target. Declaration CustomDamageHandler DamageHandler { get; set; } Property Value Type Description CustomDamageHandler Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.ICameraEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.ICameraEvent.html",
    "title": "Interface ICameraEvent | EXILED Docs",
    "keywords": "Interface ICameraEvent Event args used for all Camera related events. Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface ICameraEvent : IExiledEvent Properties | Improve this Doc View Source Camera Gets or sets the Camera triggering the event. Declaration Camera Camera { get; set; } Property Value Type Description Camera Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.IDeniableEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.IDeniableEvent.html",
    "title": "Interface IDeniableEvent | EXILED Docs",
    "keywords": "Interface IDeniableEvent Event args for events that can be allowed or denied. Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface IDeniableEvent : IExiledEvent Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the event is allowed to continue. Declaration bool IsAllowed { get; set; } Property Value Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.IDoorEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.IDoorEvent.html",
    "title": "Interface IDoorEvent | EXILED Docs",
    "keywords": "Interface IDoorEvent Event args used for all Door related events. Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface IDoorEvent : IExiledEvent Properties | Improve this Doc View Source Door Gets the Door triggering the event. Declaration Door Door { get; } Property Value Type Description Door Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.IExiledEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.IExiledEvent.html",
    "title": "Interface IExiledEvent | EXILED Docs",
    "keywords": "Interface IExiledEvent The base Exiled Event Args interface to be used by all other event arg interfaces/classes. Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.IFirearmEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.IFirearmEvent.html",
    "title": "Interface IFirearmEvent | EXILED Docs",
    "keywords": "Interface IFirearmEvent Event args used for all Firearm related events. Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface IFirearmEvent : IExiledEvent Properties | Improve this Doc View Source Firearm Gets the Firearm triggering the event. Declaration Firearm Firearm { get; } Property Value Type Description Firearm Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.IGeneratorEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.IGeneratorEvent.html",
    "title": "Interface IGeneratorEvent | EXILED Docs",
    "keywords": "Interface IGeneratorEvent Event args used for all Generator related events. Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface IGeneratorEvent : IExiledEvent Properties | Improve this Doc View Source Generator Gets the Generator triggering the event. Declaration Generator Generator { get; } Property Value Type Description Generator Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.IHazardEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.IHazardEvent.html",
    "title": "Interface IHazardEvent | EXILED Docs",
    "keywords": "Interface IHazardEvent Event args for all Hazards.EnvironmentalHazard related events. Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface IHazardEvent : IExiledEvent Properties | Improve this Doc View Source EnvironmentalHazard Gets the environmental hazard that the player is interacting with. Declaration EnvironmentalHazard EnvironmentalHazard { get; } Property Value Type Description Hazards.EnvironmentalHazard Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.IItemEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.IItemEvent.html",
    "title": "Interface IItemEvent | EXILED Docs",
    "keywords": "Interface IItemEvent Event args used for all Item related events. Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface IItemEvent : IExiledEvent Properties | Improve this Doc View Source Item Gets the Item triggering the event. Declaration Item Item { get; } Property Value Type Description Item Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.IPickupEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.IPickupEvent.html",
    "title": "Interface IPickupEvent | EXILED Docs",
    "keywords": "Interface IPickupEvent Event args used for all Pickup related events. Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface IPickupEvent : IExiledEvent Properties | Improve this Doc View Source Pickup Gets the Pickup triggering the event. Declaration Pickup Pickup { get; } Property Value Type Description Pickup Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.IPlayerEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.IPlayerEvent.html",
    "title": "Interface IPlayerEvent | EXILED Docs",
    "keywords": "Interface IPlayerEvent Event args used for all Player related events. Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface IPlayerEvent : IExiledEvent Properties | Improve this Doc View Source Player Gets the Player triggering the event. Declaration Player Player { get; } Property Value Type Description Player Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.IRagdollEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.IRagdollEvent.html",
    "title": "Interface IRagdollEvent | EXILED Docs",
    "keywords": "Interface IRagdollEvent Event args used for all Ragdoll related events. Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface IRagdollEvent : IExiledEvent Properties | Improve this Doc View Source Ragdoll Gets the Ragdoll triggering the event. Declaration Ragdoll Ragdoll { get; } Property Value Type Description Ragdoll Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.IRoomEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.IRoomEvent.html",
    "title": "Interface IRoomEvent | EXILED Docs",
    "keywords": "Interface IRoomEvent Event args used for all Room related events. Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface IRoomEvent : IExiledEvent Properties | Improve this Doc View Source Room Gets the Room that is a part of the event. Declaration Room Room { get; } Property Value Type Description Room Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Interfaces.ITeslaEvent.html": {
    "href": "api/Exiled.Events.EventArgs.Interfaces.ITeslaEvent.html",
    "title": "Interface ITeslaEvent | EXILED Docs",
    "keywords": "Interface ITeslaEvent Event args used for all TeslaGate related events. Namespace : Exiled.Events.EventArgs.Interfaces Assembly : Exiled.Events.dll Syntax public interface ITeslaEvent : IExiledEvent Properties | Improve this Doc View Source Tesla Gets the TeslaGate triggering the event. Declaration TeslaGate Tesla { get; } Property Value Type Description TeslaGate Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Item.ChangingAmmoEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Item.ChangingAmmoEventArgs.html",
    "title": "Class ChangingAmmoEventArgs | EXILED Docs",
    "keywords": "Class ChangingAmmoEventArgs Contains all information before changing firearm ammo. Inheritance System.Object ChangingAmmoEventArgs Implements IPlayerEvent IFirearmEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Item Assembly : Exiled.Events.dll Syntax public class ChangingAmmoEventArgs : IPlayerEvent, IFirearmEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingAmmoEventArgs(ItemBase, Byte, Byte, Boolean) Initializes a new instance of the ChangingAmmoEventArgs class. Declaration public ChangingAmmoEventArgs(ItemBase firearm, byte oldAmmo, byte newAmmo, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.ItemBase firearm System.Byte oldAmmo System.Byte newAmmo System.Boolean isAllowed Properties | Improve this Doc View Source Firearm Gets the Firearm the ammo is being changed to. Declaration public Firearm Firearm { get; } Property Value Type Description Firearm | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the ammo can be changed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewAmmo Gets or sets the new ammo to be used by the firearm. Declaration public byte NewAmmo { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source OldAmmo Gets the old ammo. Declaration public byte OldAmmo { get; } Property Value Type Description System.Byte | Improve this Doc View Source Player Gets the Player who's changing the Firearm 's ammo. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IFirearmEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Item.ChangingAttachmentsEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Item.ChangingAttachmentsEventArgs.html",
    "title": "Class ChangingAttachmentsEventArgs | EXILED Docs",
    "keywords": "Class ChangingAttachmentsEventArgs Contains all information before changing item attachments. Inheritance System.Object ChangingAttachmentsEventArgs Implements IPlayerEvent IDeniableEvent IFirearmEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Item Assembly : Exiled.Events.dll Syntax public class ChangingAttachmentsEventArgs : IPlayerEvent, IDeniableEvent, IFirearmEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingAttachmentsEventArgs(Player, Firearm, UInt32, Boolean) Initializes a new instance of the ChangingAttachmentsEventArgs class. Declaration public ChangingAttachmentsEventArgs(Player player, Firearm firearm, uint code, bool isAllowed = true) Parameters Type Name Description Player player Firearm firearm System.UInt32 code The attachments code. System.Boolean isAllowed Properties | Improve this Doc View Source CurrentAttachmentIdentifiers Gets the old AttachmentIdentifier . Declaration public IEnumerable<AttachmentIdentifier> CurrentAttachmentIdentifiers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < AttachmentIdentifier > | Improve this Doc View Source CurrentCode Gets the CurrentAttachmentIdentifiers code. Declaration public uint CurrentCode { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Firearm Gets the Firearm which is being modified. Declaration public Firearm Firearm { get; } Property Value Type Description Firearm | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the attachments can be changed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewAttachmentIdentifiers Gets or sets the new AttachmentIdentifier . Declaration public List<AttachmentIdentifier> NewAttachmentIdentifiers { get; set; } Property Value Type Description System.Collections.Generic.List < AttachmentIdentifier > | Improve this Doc View Source NewCode Gets the NewAttachmentIdentifiers code. Declaration public uint NewCode { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Player Gets the Player who's changing attachments. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IFirearmEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Item.ChargingJailbirdEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Item.ChargingJailbirdEventArgs.html",
    "title": "Class ChargingJailbirdEventArgs | EXILED Docs",
    "keywords": "Class ChargingJailbirdEventArgs Contains all information before a player charges a Jailbird . Inheritance System.Object ChargingJailbirdEventArgs Implements IPlayerEvent IItemEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Item Assembly : Exiled.Events.dll Syntax public class ChargingJailbirdEventArgs : IPlayerEvent, IItemEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChargingJailbirdEventArgs(ReferenceHub, ItemBase, Boolean) Initializes a new instance of the ChargingJailbirdEventArgs class. Declaration public ChargingJailbirdEventArgs(ReferenceHub player, ItemBase swingItem, bool isAllowed = true) Parameters Type Name Description ReferenceHub player InventorySystem.Items.ItemBase swingItem The item being charged. System.Boolean isAllowed Whether the item can be charged or not. Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the Jailbird can be charged. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Gets the Item that is being charged. This will always be a Jailbird . Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source Player Gets the Player who's charging an item. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IItemEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Item.html": {
    "href": "api/Exiled.Events.EventArgs.Item.html",
    "title": "Namespace Exiled.Events.EventArgs.Item | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Item Classes ChangingAmmoEventArgs Contains all information before changing firearm ammo. ChangingAttachmentsEventArgs Contains all information before changing item attachments. ChargingJailbirdEventArgs Contains all information before a player charges a Jailbird . KeycardInteractingEventArgs Contains all information before a keycard interacts with a door. ReceivingPreferenceEventArgs Contains all information before receiving a preference. SwingingEventArgs Contains all information before a player swings a Jailbird ."
  },
  "api/Exiled.Events.EventArgs.Item.KeycardInteractingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Item.KeycardInteractingEventArgs.html",
    "title": "Class KeycardInteractingEventArgs | EXILED Docs",
    "keywords": "Class KeycardInteractingEventArgs Contains all information before a keycard interacts with a door. Inheritance System.Object KeycardInteractingEventArgs Implements IPlayerEvent IDeniableEvent IDoorEvent IPickupEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Item Assembly : Exiled.Events.dll Syntax public class KeycardInteractingEventArgs : IPlayerEvent, IDeniableEvent, IDoorEvent, IPickupEvent, IExiledEvent Constructors | Improve this Doc View Source KeycardInteractingEventArgs(KeycardPickup, Player, DoorVariant, Boolean) Initializes a new instance of the KeycardInteractingEventArgs class. Declaration public KeycardInteractingEventArgs(KeycardPickup pickup, Player player, DoorVariant door, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.Keycards.KeycardPickup pickup Player player Interactables.Interobjects.DoorUtils.DoorVariant door System.Boolean isAllowed Properties | Improve this Doc View Source Door Gets the Door instance. Declaration public Door Door { get; } Property Value Type Description Door | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the keycard can interact with the door. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pickup Gets the pickup that's interacting with the door. Declaration public Pickup Pickup { get; } Property Value Type Description Pickup | Improve this Doc View Source Player Gets the player who's threw the keycard. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IDoorEvent IPickupEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Item.ReceivingPreferenceEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Item.ReceivingPreferenceEventArgs.html",
    "title": "Class ReceivingPreferenceEventArgs | EXILED Docs",
    "keywords": "Class ReceivingPreferenceEventArgs Contains all information before receiving a preference. Inheritance System.Object ReceivingPreferenceEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Item Assembly : Exiled.Events.dll Syntax public class ReceivingPreferenceEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ReceivingPreferenceEventArgs(Player, ItemType, UInt32, UInt32, Boolean) Initializes a new instance of the ReceivingPreferenceEventArgs class. Declaration public ReceivingPreferenceEventArgs(Player player, ItemType itemType, uint currentCode, uint newCode, bool isAllowed = true) Parameters Type Name Description Player player ItemType itemType System.UInt32 currentCode System.UInt32 newCode System.Boolean isAllowed Properties | Improve this Doc View Source CurrentAttachmentIdentifiers Gets the old AttachmentIdentifier []. Declaration public IEnumerable<AttachmentIdentifier> CurrentAttachmentIdentifiers { get; } Property Value Type Description System.Collections.Generic.IEnumerable < AttachmentIdentifier > | Improve this Doc View Source CurrentCode Gets the current attachments code. Declaration public uint CurrentCode { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the attachments preference can be executed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Gets the FirearmType which is being modified. Declaration public FirearmType Item { get; } Property Value Type Description FirearmType | Improve this Doc View Source NewAttachmentIdentifiers Gets or sets the new System.Collections.Generic.List<T> of AttachmentIdentifier . Declaration public List<AttachmentIdentifier> NewAttachmentIdentifiers { get; set; } Property Value Type Description System.Collections.Generic.List < AttachmentIdentifier > | Improve this Doc View Source NewCode Gets or sets the new attachments code. Declaration public uint NewCode { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Player Gets the Player who's changing attachments. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Item.SwingingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Item.SwingingEventArgs.html",
    "title": "Class SwingingEventArgs | EXILED Docs",
    "keywords": "Class SwingingEventArgs Contains all information before a player swings a Jailbird . Inheritance System.Object SwingingEventArgs Implements IPlayerEvent IItemEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Item Assembly : Exiled.Events.dll Syntax public class SwingingEventArgs : IPlayerEvent, IItemEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source SwingingEventArgs(ReferenceHub, ItemBase, Boolean) Initializes a new instance of the SwingingEventArgs class. Declaration public SwingingEventArgs(ReferenceHub player, ItemBase swingItem, bool isAllowed = true) Parameters Type Name Description ReferenceHub player InventorySystem.Items.ItemBase swingItem The item being swung. System.Boolean isAllowed Whether the item can be swung or not. Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the item can be swung. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Gets the Item that is being swung. Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source Player Gets the Player who's swinging an item. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IItemEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Map.AnnouncingDecontaminationEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Map.AnnouncingDecontaminationEventArgs.html",
    "title": "Class AnnouncingDecontaminationEventArgs | EXILED Docs",
    "keywords": "Class AnnouncingDecontaminationEventArgs Contains all information before C.A.S.S.I.E announces light containment zone decontamination. Inheritance System.Object AnnouncingDecontaminationEventArgs Implements IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Map Assembly : Exiled.Events.dll Syntax public class AnnouncingDecontaminationEventArgs : IExiledEvent Constructors | Improve this Doc View Source AnnouncingDecontaminationEventArgs(Int32, Boolean) Initializes a new instance of the AnnouncingDecontaminationEventArgs class. Declaration public AnnouncingDecontaminationEventArgs(int announcementId, bool isGlobal) Parameters Type Name Description System.Int32 announcementId System.Boolean isGlobal Properties | Improve this Doc View Source Id Gets the announcement id, from 0 to 6. Declaration public int Id { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsGlobal Gets a value indicating whether the announcement is going to be global or not. Declaration public bool IsGlobal { get; } Property Value Type Description System.Boolean Implements IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Map.AnnouncingNtfEntranceEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Map.AnnouncingNtfEntranceEventArgs.html",
    "title": "Class AnnouncingNtfEntranceEventArgs | EXILED Docs",
    "keywords": "Class AnnouncingNtfEntranceEventArgs Contains all information before C.A.S.S.I.E announces the NTF entrance. Inheritance System.Object AnnouncingNtfEntranceEventArgs Implements IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Map Assembly : Exiled.Events.dll Syntax public class AnnouncingNtfEntranceEventArgs : IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source AnnouncingNtfEntranceEventArgs(Int32, String, Int32, Boolean) Initializes a new instance of the AnnouncingNtfEntranceEventArgs class. Declaration public AnnouncingNtfEntranceEventArgs(int scpsLeft, string unitName, int unitNumber, bool isAllowed = true) Parameters Type Name Description System.Int32 scpsLeft System.String unitName System.Int32 unitNumber System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the NTF spawn will be announced by C.A.S.S.I.E. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScpsLeft Gets or sets the number of SCPs left. Declaration public int ScpsLeft { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source UnitName Gets or sets the NTF unit name. Declaration public string UnitName { get; set; } Property Value Type Description System.String | Improve this Doc View Source UnitNumber Gets or sets the NTF unit number. Declaration public int UnitNumber { get; set; } Property Value Type Description System.Int32 Implements IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Map.AnnouncingScpTerminationEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Map.AnnouncingScpTerminationEventArgs.html",
    "title": "Class AnnouncingScpTerminationEventArgs | EXILED Docs",
    "keywords": "Class AnnouncingScpTerminationEventArgs Contains all information before C.A.S.S.I.E announces an SCP termination. Inheritance System.Object AnnouncingScpTerminationEventArgs Implements IAttackerEvent IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Map Assembly : Exiled.Events.dll Syntax public class AnnouncingScpTerminationEventArgs : IAttackerEvent, IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source AnnouncingScpTerminationEventArgs(Player, DamageHandlerBase, Boolean) Initializes a new instance of the AnnouncingScpTerminationEventArgs class. Declaration public AnnouncingScpTerminationEventArgs(Player scp, DamageHandlerBase damageHandlerBase, bool isAllowed = true) Parameters Type Name Description Player scp PlayerStatsSystem.DamageHandlerBase damageHandlerBase System.Boolean isAllowed Properties | Improve this Doc View Source Attacker Gets the player who killed the SCP. Declaration public Player Attacker { get; } Property Value Type Description Player | Improve this Doc View Source DamageHandler Gets or sets the CustomDamageHandler . Declaration public CustomDamageHandler DamageHandler { get; set; } Property Value Type Description CustomDamageHandler | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the SCP termination will be announced by C.A.S.S.I.E. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player the announcement is being played for. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Role Gets the killed Role . Declaration public Role Role { get; } Property Value Type Description Role | Improve this Doc View Source TerminationCause Gets or sets the termination cause. Declaration public string TerminationCause { get; set; } Property Value Type Description System.String Implements IAttackerEvent IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Map.ChangedIntoGrenadeEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Map.ChangedIntoGrenadeEventArgs.html",
    "title": "Class ChangedIntoGrenadeEventArgs | EXILED Docs",
    "keywords": "Class ChangedIntoGrenadeEventArgs Contains all information for when the server is turned a pickup into a live grenade. Inheritance System.Object ChangedIntoGrenadeEventArgs Implements IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Map Assembly : Exiled.Events.dll Syntax public class ChangedIntoGrenadeEventArgs : IExiledEvent Constructors | Improve this Doc View Source ChangedIntoGrenadeEventArgs(TimedGrenadePickup, ThrownProjectile) Initializes a new instance of the ChangedIntoGrenadeEventArgs class. Declaration public ChangedIntoGrenadeEventArgs(TimedGrenadePickup pickup, ThrownProjectile projectile) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.TimedGrenadePickup pickup The Pickup being changed. InventorySystem.Items.ThrowableProjectiles.ThrownProjectile projectile The TimeGrenadeProjectile . Properties | Improve this Doc View Source FuseTime Gets or sets a value indicating how long the fuse of the changed grenade will be. Declaration public float FuseTime { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Pickup Gets a value indicating the pickup that changed. Declaration public GrenadePickup Pickup { get; } Property Value Type Description GrenadePickup | Improve this Doc View Source Projectile Gets a value indicating the projectile that spawned. Declaration public Projectile Projectile { get; } Property Value Type Description Projectile Implements IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Map.ChangingIntoGrenadeEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Map.ChangingIntoGrenadeEventArgs.html",
    "title": "Class ChangingIntoGrenadeEventArgs | EXILED Docs",
    "keywords": "Class ChangingIntoGrenadeEventArgs Contains all information for when the server is turning a pickup into a live grenade. Inheritance System.Object ChangingIntoGrenadeEventArgs Implements IDeniableEvent IPickupEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Map Assembly : Exiled.Events.dll Syntax public class ChangingIntoGrenadeEventArgs : IDeniableEvent, IPickupEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingIntoGrenadeEventArgs(TimedGrenadePickup) Initializes a new instance of the ChangingIntoGrenadeEventArgs class. Declaration public ChangingIntoGrenadeEventArgs(TimedGrenadePickup pickup) Parameters Type Name Description InventorySystem.Items.ThrowableProjectiles.TimedGrenadePickup pickup The Pickup being changed. Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the pickup will be changed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pickup Gets a value indicating the pickup being changed. Declaration public Pickup Pickup { get; } Property Value Type Description Pickup | Improve this Doc View Source Type Gets or sets a value indicating what type of grenade will be spawned. Declaration public ItemType Type { get; set; } Property Value Type Description ItemType Implements IDeniableEvent IPickupEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Map.DecontaminatingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Map.DecontaminatingEventArgs.html",
    "title": "Class DecontaminatingEventArgs | EXILED Docs",
    "keywords": "Class DecontaminatingEventArgs Contains all information before decontaminating the light containment zone. Inheritance System.Object DecontaminatingEventArgs Implements IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Map Assembly : Exiled.Events.dll Syntax public class DecontaminatingEventArgs : IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source DecontaminatingEventArgs(Boolean) Initializes a new instance of the DecontaminatingEventArgs class. Declaration public DecontaminatingEventArgs(bool isAllowed = true) Parameters Type Name Description System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not light containment zone decontamination can begin. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean Implements IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Map.ExplodingGrenadeEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Map.ExplodingGrenadeEventArgs.html",
    "title": "Class ExplodingGrenadeEventArgs | EXILED Docs",
    "keywords": "Class ExplodingGrenadeEventArgs Contains all information before a grenade explodes. Inheritance System.Object ExplodingGrenadeEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Map Assembly : Exiled.Events.dll Syntax public class ExplodingGrenadeEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ExplodingGrenadeEventArgs(Player, EffectGrenade, Boolean) Initializes a new instance of the ExplodingGrenadeEventArgs class. Declaration public ExplodingGrenadeEventArgs(Player thrower, EffectGrenade grenade, bool isAllowed = true) Parameters Type Name Description Player thrower InventorySystem.Items.ThrowableProjectiles.EffectGrenade grenade System.Boolean isAllowed | Improve this Doc View Source ExplodingGrenadeEventArgs(Player, Vector3, EffectGrenade, Collider[]) Initializes a new instance of the ExplodingGrenadeEventArgs class. Declaration public ExplodingGrenadeEventArgs(Player thrower, Vector3 position, EffectGrenade grenade, Collider[] targets) Parameters Type Name Description Player thrower UnityEngine.Vector3 position InventorySystem.Items.ThrowableProjectiles.EffectGrenade grenade UnityEngine.Collider [] targets Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the grenade can be thrown. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who thrown the grenade. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets the position where is exploding. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Projectile Gets the grenade that is exploding. Declaration public EffectGrenadeProjectile Projectile { get; } Property Value Type Description EffectGrenadeProjectile | Improve this Doc View Source TargetsToAffect Gets the players who could be affected by the grenade, if any, and the damage that would hurt them. Declaration public List<Player> TargetsToAffect { get; } Property Value Type Description System.Collections.Generic.List < Player > Methods | Improve this Doc View Source Finalize() Finalizes an instance of the ExplodingGrenadeEventArgs class. Declaration protected void Finalize() Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Map.GeneratorActivatedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Map.GeneratorActivatedEventArgs.html",
    "title": "Class GeneratorActivatedEventArgs | EXILED Docs",
    "keywords": "Class GeneratorActivatedEventArgs Contains all information after activating a generator. Inheritance System.Object GeneratorActivatedEventArgs Implements IGeneratorEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Map Assembly : Exiled.Events.dll Syntax public class GeneratorActivatedEventArgs : IGeneratorEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source GeneratorActivatedEventArgs(Scp079Generator, Boolean) Initializes a new instance of the GeneratorActivatedEventArgs class. Declaration public GeneratorActivatedEventArgs(Scp079Generator generator, bool isAllowed = true) Parameters Type Name Description MapGeneration.Distributors.Scp079Generator generator System.Boolean isAllowed Properties | Improve this Doc View Source Generator Gets the activated generator. Declaration public Generator Generator { get; } Property Value Type Description Generator | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the generator can be activated or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean Implements IGeneratorEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Map.html": {
    "href": "api/Exiled.Events.EventArgs.Map.html",
    "title": "Namespace Exiled.Events.EventArgs.Map | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Map Classes AnnouncingDecontaminationEventArgs Contains all information before C.A.S.S.I.E announces light containment zone decontamination. AnnouncingNtfEntranceEventArgs Contains all information before C.A.S.S.I.E announces the NTF entrance. AnnouncingScpTerminationEventArgs Contains all information before C.A.S.S.I.E announces an SCP termination. ChangedIntoGrenadeEventArgs Contains all information for when the server is turned a pickup into a live grenade. ChangingIntoGrenadeEventArgs Contains all information for when the server is turning a pickup into a live grenade. DecontaminatingEventArgs Contains all information before decontaminating the light containment zone. ExplodingGrenadeEventArgs Contains all information before a grenade explodes. GeneratorActivatedEventArgs Contains all information after activating a generator. PlacingBloodEventArgs Contains all information before placing a blood decal. PlacingBulletHole Contains all information before placing a bullet hole decal. SpawningItemEventArgs Contains all information before the server spawns an item. TurningOffLightsEventArgs Contains all information before turning off lights."
  },
  "api/Exiled.Events.EventArgs.Map.PlacingBloodEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Map.PlacingBloodEventArgs.html",
    "title": "Class PlacingBloodEventArgs | EXILED Docs",
    "keywords": "Class PlacingBloodEventArgs Contains all information before placing a blood decal. Inheritance System.Object PlacingBloodEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Map Assembly : Exiled.Events.dll Syntax public class PlacingBloodEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source PlacingBloodEventArgs(Player, Player, RaycastHit, Boolean) Initializes a new instance of the PlacingBloodEventArgs class. Declaration public PlacingBloodEventArgs(Player player, Player target, RaycastHit hit, bool isAllowed = true) Parameters Type Name Description Player player Player target UnityEngine.RaycastHit hit System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the blood can be placed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the Player who's placing the blood. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the blood placing position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Target Gets the target's Player instance. Declaration public Player Target { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Map.PlacingBulletHole.html": {
    "href": "api/Exiled.Events.EventArgs.Map.PlacingBulletHole.html",
    "title": "Class PlacingBulletHole | EXILED Docs",
    "keywords": "Class PlacingBulletHole Contains all information before placing a bullet hole decal. Inheritance System.Object PlacingBulletHole Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Map Assembly : Exiled.Events.dll Syntax public class PlacingBulletHole : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source PlacingBulletHole(Player, RaycastHit) Initializes a new instance of the PlacingBulletHole class. Declaration public PlacingBulletHole(Player owner, RaycastHit hit) Parameters Type Name Description Player owner UnityEngine.RaycastHit hit Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the decal can be placed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the decal owner. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the decal position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Rotation Gets or sets the decal rotation. Declaration public Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Map.SpawningItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Map.SpawningItemEventArgs.html",
    "title": "Class SpawningItemEventArgs | EXILED Docs",
    "keywords": "Class SpawningItemEventArgs Contains all information before the server spawns an item. Inheritance System.Object SpawningItemEventArgs Implements IDeniableEvent IPickupEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Map Assembly : Exiled.Events.dll Syntax public class SpawningItemEventArgs : IDeniableEvent, IPickupEvent, IExiledEvent Constructors | Improve this Doc View Source SpawningItemEventArgs(ItemPickupBase, Boolean, DoorVariant) Initializes a new instance of the SpawningItemEventArgs class. Declaration public SpawningItemEventArgs(ItemPickupBase pickupBase, bool shouldInitiallySpawn, DoorVariant door) Parameters Type Name Description InventorySystem.Items.Pickups.ItemPickupBase pickupBase System.Boolean shouldInitiallySpawn Interactables.Interobjects.DoorUtils.DoorVariant door Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the item can be spawned. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pickup Gets a value indicating the pickup being spawned. Declaration public Pickup Pickup { get; } Property Value Type Description Pickup | Improve this Doc View Source ShouldInitiallySpawn Gets or sets a value indicating whether or not the item will be initially spawned. Declaration public bool ShouldInitiallySpawn { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source TriggerDoor Gets or sets a value indicating the trigger door for pickup. Declaration public Door TriggerDoor { get; set; } Property Value Type Description Door Remarks Works only when ShouldInitiallySpawn is false. null when ShouldInitiallySpawn is true. Can be not fully initialized. Implements IDeniableEvent IPickupEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Map.TurningOffLightsEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Map.TurningOffLightsEventArgs.html",
    "title": "Class TurningOffLightsEventArgs | EXILED Docs",
    "keywords": "Class TurningOffLightsEventArgs Contains all information before turning off lights. Inheritance System.Object TurningOffLightsEventArgs Implements IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Map Assembly : Exiled.Events.dll Syntax public class TurningOffLightsEventArgs : IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source TurningOffLightsEventArgs(FlickerableLightController, Single, Boolean) Initializes a new instance of the TurningOffLightsEventArgs class. Declaration public TurningOffLightsEventArgs(FlickerableLightController flickerableLightControllerHandler, float duration, bool isAllowed = true) Parameters Type Name Description FlickerableLightController flickerableLightControllerHandler System.Single duration System.Boolean isAllowed Properties | Improve this Doc View Source Duration Gets or sets the blackout duration. Declaration public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source FlickerableLightControllerHandler Gets the FlickerableLightController . Declaration public FlickerableLightController FlickerableLightControllerHandler { get; } Property Value Type Description FlickerableLightController | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the lights can be turned off. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean Implements IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ActivatingGeneratorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ActivatingGeneratorEventArgs.html",
    "title": "Class ActivatingGeneratorEventArgs | EXILED Docs",
    "keywords": "Class ActivatingGeneratorEventArgs Contains all information before a player filps the switch of the generator. Inheritance System.Object ActivatingGeneratorEventArgs StoppingGeneratorEventArgs Implements IPlayerEvent IGeneratorEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ActivatingGeneratorEventArgs : IPlayerEvent, IGeneratorEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ActivatingGeneratorEventArgs(Player, Scp079Generator, Boolean) Initializes a new instance of the ActivatingGeneratorEventArgs class. Declaration public ActivatingGeneratorEventArgs(Player player, Scp079Generator generator, bool isAllowed = true) Parameters Type Name Description Player player MapGeneration.Distributors.Scp079Generator generator System.Boolean isAllowed Properties | Improve this Doc View Source Generator Gets the Generator instance. Declaration public Generator Generator { get; } Property Value Type Description Generator | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the switch can be flipped. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's filpping the switch of the generator. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IGeneratorEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ActivatingWarheadPanelEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ActivatingWarheadPanelEventArgs.html",
    "title": "Class ActivatingWarheadPanelEventArgs | EXILED Docs",
    "keywords": "Class ActivatingWarheadPanelEventArgs Contains all information before a player activates the warhead panel. Inheritance System.Object ActivatingWarheadPanelEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ActivatingWarheadPanelEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ActivatingWarheadPanelEventArgs(Player, Boolean) Initializes a new instance of the ActivatingWarheadPanelEventArgs class. Declaration public ActivatingWarheadPanelEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the warhead can be activated. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's trying to activate the warhead panel. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ActivatingWorkstationEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ActivatingWorkstationEventArgs.html",
    "title": "Class ActivatingWorkstationEventArgs | EXILED Docs",
    "keywords": "Class ActivatingWorkstationEventArgs Contains all information before a player activates a workstation. Inheritance System.Object ActivatingWorkstationEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ActivatingWorkstationEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ActivatingWorkstationEventArgs(Player, WorkstationController, Boolean) Initializes a new instance of the ActivatingWorkstationEventArgs class. Declaration public ActivatingWorkstationEventArgs(Player player, WorkstationController controller, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.Firearms.Attachments.WorkstationController controller System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the workstation can be activated. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewStatus Gets or sets the workstation status. Declaration public WorkstationController.WorkstationStatus NewStatus { get; set; } Property Value Type Description InventorySystem.Items.Firearms.Attachments.WorkstationController.WorkstationStatus | Improve this Doc View Source Player Gets the player who's trying to activate the workstation. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source WorkstationController Gets the workstation. Declaration public WorkstationController WorkstationController { get; } Property Value Type Description InventorySystem.Items.Firearms.Attachments.WorkstationController Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.AimingDownSightEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.AimingDownSightEventArgs.html",
    "title": "Class AimingDownSightEventArgs | EXILED Docs",
    "keywords": "Class AimingDownSightEventArgs Contains all information when a player aims. Inheritance System.Object AimingDownSightEventArgs Implements IPlayerEvent IFirearmEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class AimingDownSightEventArgs : IPlayerEvent, IFirearmEvent, IExiledEvent Constructors | Improve this Doc View Source AimingDownSightEventArgs(Player, Boolean, Boolean) Initializes a new instance of the AimingDownSightEventArgs class. Declaration public AimingDownSightEventArgs(Player player, bool adsIn, bool adsOut) Parameters Type Name Description Player player System.Boolean adsIn System.Boolean adsOut Properties | Improve this Doc View Source AdsIn Gets a value indicating whether or not the player is aiming down sight in. Declaration public bool AdsIn { get; } Property Value Type Description System.Boolean | Improve this Doc View Source AdsOut Gets a value indicating whether or not the player is aiming down sight out. Declaration public bool AdsOut { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Firearm Gets the Firearm used to trigger the aim action. Declaration public Firearm Firearm { get; } Property Value Type Description Firearm | Improve this Doc View Source Player Gets the player who's triggering the aim action. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IFirearmEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.BannedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.BannedEventArgs.html",
    "title": "Class BannedEventArgs | EXILED Docs",
    "keywords": "Class BannedEventArgs Contains all information after banning a player from the server. Inheritance System.Object BannedEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class BannedEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source BannedEventArgs(Player, Player, BanDetails, BanHandler.BanType, Boolean) Initializes a new instance of the BannedEventArgs class. Declaration public BannedEventArgs(Player target, Player issuer, BanDetails details, BanHandler.BanType type, bool isForced) Parameters Type Name Description Player target Player issuer BanDetails details BanHandler.BanType type System.Boolean isForced Properties | Improve this Doc View Source Details Gets the ban details. Declaration public BanDetails Details { get; } Property Value Type Description BanDetails | Improve this Doc View Source IsForced Gets a value indicating whether the ban is forced or not. Declaration public bool IsForced { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the issuer player. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Target Gets the banned player. Declaration public Player Target { get; } Property Value Type Description Player | Improve this Doc View Source Type Gets the ban type. Declaration public BanHandler.BanType Type { get; } Property Value Type Description BanHandler.BanType Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.BanningEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.BanningEventArgs.html",
    "title": "Class BanningEventArgs | EXILED Docs",
    "keywords": "Class BanningEventArgs Contains all information before banning a player from the server. Inheritance System.Object KickingEventArgs BanningEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members KickingEventArgs.Target KickingEventArgs.Reason KickingEventArgs.FullMessage KickingEventArgs.IsAllowed KickingEventArgs.Player KickingEventArgs.LogBanChange(String, String) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class BanningEventArgs : KickingEventArgs, IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source BanningEventArgs(Player, Player, Int64, String, String, Boolean) Initializes a new instance of the BanningEventArgs class. Declaration public BanningEventArgs(Player target, Player issuer, long duration, string reason, string fullMessage, bool isAllowed = true) Parameters Type Name Description Player target The ban target. Player issuer The ban issuer. System.Int64 duration The ban seconds duration. System.String reason The ban reason. System.String fullMessage The ban full message. System.Boolean isAllowed Indicates whether the event can be executed or not. Properties | Improve this Doc View Source Duration Gets or sets the ban duration. Declaration public long Duration { get; set; } Property Value Type Description System.Int64 Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.CancellingItemUseEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.CancellingItemUseEventArgs.html",
    "title": "Class CancellingItemUseEventArgs | EXILED Docs",
    "keywords": "Class CancellingItemUseEventArgs Contains all information before a player cancels usage of a medical item. Inheritance System.Object UsedItemEventArgs UsingItemEventArgs CancellingItemUseEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members UsingItemEventArgs.Cooldown UsingItemEventArgs.IsAllowed UsedItemEventArgs.Item UsedItemEventArgs.Player System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class CancellingItemUseEventArgs : UsingItemEventArgs, IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source CancellingItemUseEventArgs(Player, UsableItem) Initializes a new instance of the CancellingItemUseEventArgs class. Declaration public CancellingItemUseEventArgs(Player player, UsableItem item) Parameters Type Name Description Player player The player who's stopping the use of the medical item. InventorySystem.Items.Usables.UsableItem item Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ChangedItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ChangedItemEventArgs.html",
    "title": "Class ChangedItemEventArgs | EXILED Docs",
    "keywords": "Class ChangedItemEventArgs Contains all information after a player's held item changes. Inheritance System.Object ChangedItemEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ChangedItemEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source ChangedItemEventArgs(Player, ItemBase) Initializes a new instance of the ChangedItemEventArgs class. Declaration public ChangedItemEventArgs(Player player, ItemBase oldItem) Parameters Type Name Description Player player InventorySystem.Items.ItemBase oldItem Properties | Improve this Doc View Source NewItem Gets the new item. Declaration public Item NewItem { get; } Property Value Type Description Item | Improve this Doc View Source OldItem Gets the previous item. Declaration public Item OldItem { get; } Property Value Type Description Item | Improve this Doc View Source Player Gets the player who's changed the item. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ChangingGroupEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ChangingGroupEventArgs.html",
    "title": "Class ChangingGroupEventArgs | EXILED Docs",
    "keywords": "Class ChangingGroupEventArgs Contains all information before a player's user group changes. Inheritance System.Object ChangingGroupEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ChangingGroupEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingGroupEventArgs(Player, UserGroup, Boolean) Initializes a new instance of the ChangingGroupEventArgs class. Declaration public ChangingGroupEventArgs(Player player, UserGroup newGroup, bool isAllowed = true) Parameters Type Name Description Player player UserGroup newGroup System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can change groups. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewGroup Gets or sets the player's new group. Declaration public UserGroup NewGroup { get; set; } Property Value Type Description UserGroup | Improve this Doc View Source Player Gets the player who's changing his group. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ChangingIntercomMuteStatusEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ChangingIntercomMuteStatusEventArgs.html",
    "title": "Class ChangingIntercomMuteStatusEventArgs | EXILED Docs",
    "keywords": "Class ChangingIntercomMuteStatusEventArgs Contains all information before a player's intercom mute status is changed. Inheritance System.Object ChangingIntercomMuteStatusEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ChangingIntercomMuteStatusEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingIntercomMuteStatusEventArgs(Player, Boolean, Boolean) Initializes a new instance of the ChangingIntercomMuteStatusEventArgs class. Declaration public ChangingIntercomMuteStatusEventArgs(Player player, bool isMuted, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isMuted System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can be intercom muted/unmuted. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMuted Gets a value indicating whether the player is being intercom muted or unmuted. Declaration public bool IsMuted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's being intercom muted/unmuted. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ChangingItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ChangingItemEventArgs.html",
    "title": "Class ChangingItemEventArgs | EXILED Docs",
    "keywords": "Class ChangingItemEventArgs Contains all information before a player's held item changes. Inheritance System.Object ChangingItemEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ChangingItemEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingItemEventArgs(Player, ItemBase) Initializes a new instance of the ChangingItemEventArgs class. Declaration public ChangingItemEventArgs(Player player, ItemBase newItem) Parameters Type Name Description Player player InventorySystem.Items.ItemBase newItem Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the event is allowed to continue. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewItem Gets or sets the new item. Declaration public Item NewItem { get; set; } Property Value Type Description Item | Improve this Doc View Source Player Gets the player who's changing the item. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ChangingMicroHIDStateEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ChangingMicroHIDStateEventArgs.html",
    "title": "Class ChangingMicroHIDStateEventArgs | EXILED Docs",
    "keywords": "Class ChangingMicroHIDStateEventArgs Contains all information before MicroHID state is changed. Inheritance System.Object ChangingMicroHIDStateEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ChangingMicroHIDStateEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingMicroHIDStateEventArgs(Player, MicroHIDItem, HidState, HidState, Boolean) Initializes a new instance of the ChangingMicroHIDStateEventArgs class. Declaration public ChangingMicroHIDStateEventArgs(Player player, MicroHIDItem microHID, HidState oldState, HidState newState, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.MicroHID.MicroHIDItem microHID InventorySystem.Items.MicroHID.HidState oldState InventorySystem.Items.MicroHID.HidState newState System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the MicroHID state can be changed or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MicroHID Gets the MicroHID instance. Declaration public MicroHid MicroHID { get; } Property Value Type Description MicroHid | Improve this Doc View Source NewState Gets or sets the new MicroHID state. Declaration public HidState NewState { get; set; } Property Value Type Description InventorySystem.Items.MicroHID.HidState | Improve this Doc View Source OldState Gets the old MicroHID state. Declaration public HidState OldState { get; } Property Value Type Description InventorySystem.Items.MicroHID.HidState | Improve this Doc View Source Player Gets the player who's using the MicroHID. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ChangingMoveStateEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ChangingMoveStateEventArgs.html",
    "title": "Class ChangingMoveStateEventArgs | EXILED Docs",
    "keywords": "Class ChangingMoveStateEventArgs Contains all information before changing movement state. Inheritance System.Object ChangingMoveStateEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ChangingMoveStateEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingMoveStateEventArgs(Player, PlayerMovementState, PlayerMovementState, Boolean) Initializes a new instance of the ChangingMoveStateEventArgs class. Declaration public ChangingMoveStateEventArgs(Player player, PlayerMovementState oldState, PlayerMovementState newState, bool isAllowed = true) Parameters Type Name Description Player player PlayerRoles.FirstPersonControl.PlayerMovementState oldState PlayerRoles.FirstPersonControl.PlayerMovementState newState System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the player can change the movement state. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewState Gets or sets the new state. Declaration public PlayerMovementState NewState { get; set; } Property Value Type Description PlayerRoles.FirstPersonControl.PlayerMovementState | Improve this Doc View Source OldState Gets the old state. Declaration public PlayerMovementState OldState { get; } Property Value Type Description PlayerRoles.FirstPersonControl.PlayerMovementState | Improve this Doc View Source Player Gets the player who's changing the movement state. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ChangingMuteStatusEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ChangingMuteStatusEventArgs.html",
    "title": "Class ChangingMuteStatusEventArgs | EXILED Docs",
    "keywords": "Class ChangingMuteStatusEventArgs Contains all information before a player's mute status is changed. Inheritance System.Object ChangingMuteStatusEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ChangingMuteStatusEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingMuteStatusEventArgs(Player, Boolean, Boolean) Initializes a new instance of the ChangingMuteStatusEventArgs class. Declaration public ChangingMuteStatusEventArgs(Player player, bool isMuted, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isMuted System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can be muted/unmuted. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMuted Gets a value indicating whether the player is being muted or unmuted. Declaration public bool IsMuted { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's being muted/unmuted. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ChangingRadioPresetEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ChangingRadioPresetEventArgs.html",
    "title": "Class ChangingRadioPresetEventArgs | EXILED Docs",
    "keywords": "Class ChangingRadioPresetEventArgs Contains all information before radio preset is changed. Inheritance System.Object ChangingRadioPresetEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ChangingRadioPresetEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingRadioPresetEventArgs(Player, RadioMessages.RadioRangeLevel, RadioMessages.RadioRangeLevel, Boolean) Initializes a new instance of the ChangingRadioPresetEventArgs class. Declaration public ChangingRadioPresetEventArgs(Player player, RadioMessages.RadioRangeLevel oldValue, RadioMessages.RadioRangeLevel newValue, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.Radio.RadioMessages.RadioRangeLevel oldValue InventorySystem.Items.Radio.RadioMessages.RadioRangeLevel newValue System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the radio preset can be changed or not. Client radio graphics won't sync with OldValue . Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewValue Gets or sets the new radio preset value. Client radio graphics won't sync with this value. Declaration public RadioRange NewValue { get; set; } Property Value Type Description RadioRange | Improve this Doc View Source OldValue Gets the old radio preset value. Declaration public RadioRange OldValue { get; } Property Value Type Description RadioRange | Improve this Doc View Source Player Gets the player who's using the radio. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ChangingRoleEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ChangingRoleEventArgs.html",
    "title": "Class ChangingRoleEventArgs | EXILED Docs",
    "keywords": "Class ChangingRoleEventArgs Contains all information before a player's PlayerRoles.RoleTypeId changes. Inheritance System.Object ChangingRoleEventArgs OwnerChangingRoleEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ChangingRoleEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingRoleEventArgs(Player, RoleTypeId, RoleChangeReason, RoleSpawnFlags) Initializes a new instance of the ChangingRoleEventArgs class. Declaration public ChangingRoleEventArgs(Player player, RoleTypeId newRole, RoleChangeReason reason, RoleSpawnFlags spawnFlags) Parameters Type Name Description Player player PlayerRoles.RoleTypeId newRole PlayerRoles.RoleChangeReason reason PlayerRoles.RoleSpawnFlags spawnFlags Properties | Improve this Doc View Source Ammo Gets the base ammo values for the new role. Declaration public Dictionary<ItemType, ushort> Ammo { get; } Property Value Type Description System.Collections.Generic.Dictionary < ItemType , System.UInt16 > | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the event can continue. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Items Gets base items that the player will receive. Declaration public List<ItemType> Items { get; } Property Value Type Description System.Collections.Generic.List < ItemType > | Improve this Doc View Source NewRole Gets or sets the new player's role. Declaration public RoleTypeId NewRole { get; set; } Property Value Type Description PlayerRoles.RoleTypeId | Improve this Doc View Source Player Gets the player whose PlayerRoles.RoleTypeId is changing. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Reason Gets or sets the reason for their class change. Declaration public SpawnReason Reason { get; set; } Property Value Type Description SpawnReason | Improve this Doc View Source ShouldPreserveInventory Gets or sets a value indicating whether the inventory will be preserved or not. Declaration public bool ShouldPreserveInventory { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SpawnFlags Gets or sets the spawn flags for their class change. Declaration public RoleSpawnFlags SpawnFlags { get; set; } Property Value Type Description PlayerRoles.RoleSpawnFlags Methods | Improve this Doc View Source Finalize() Finalizes an instance of the ChangingRoleEventArgs class. Declaration protected void Finalize() Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ChangingSpectatedPlayerEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ChangingSpectatedPlayerEventArgs.html",
    "title": "Class ChangingSpectatedPlayerEventArgs | EXILED Docs",
    "keywords": "Class ChangingSpectatedPlayerEventArgs Contains all information before a spectator changes the spectated player. Inheritance System.Object ChangingSpectatedPlayerEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ChangingSpectatedPlayerEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingSpectatedPlayerEventArgs(ReferenceHub, UInt32, UInt32) Initializes a new instance of the ChangingSpectatedPlayerEventArgs class. Declaration public ChangingSpectatedPlayerEventArgs(ReferenceHub player, uint oldTarget, uint newTarget) Parameters Type Name Description ReferenceHub player System.UInt32 oldTarget System.UInt32 newTarget Properties | Improve this Doc View Source NewTarget Gets the player who's going to be spectated. Declaration public Player NewTarget { get; } Property Value Type Description Player | Improve this Doc View Source OldTarget Gets player that was spectated. Declaration public Player OldTarget { get; } Property Value Type Description Player | Improve this Doc View Source Player Gets player that is changing spectated player. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ClosingGeneratorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ClosingGeneratorEventArgs.html",
    "title": "Class ClosingGeneratorEventArgs | EXILED Docs",
    "keywords": "Class ClosingGeneratorEventArgs Contains all information before a player closes a generator. Inheritance System.Object OpeningGeneratorEventArgs ClosingGeneratorEventArgs Implements IPlayerEvent IDeniableEvent IGeneratorEvent IExiledEvent Inherited Members OpeningGeneratorEventArgs.IsAllowed OpeningGeneratorEventArgs.Generator OpeningGeneratorEventArgs.Player System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ClosingGeneratorEventArgs : OpeningGeneratorEventArgs, IPlayerEvent, IDeniableEvent, IGeneratorEvent, IExiledEvent Constructors | Improve this Doc View Source ClosingGeneratorEventArgs(Player, Scp079Generator, Boolean) Initializes a new instance of the ClosingGeneratorEventArgs class. Declaration public ClosingGeneratorEventArgs(Player player, Scp079Generator generator, bool isAllowed = true) Parameters Type Name Description Player player The player who's closing the generator. MapGeneration.Distributors.Scp079Generator generator The MapGeneration.Distributors.Scp079Generator instance. System.Boolean isAllowed Indicates whether or not the generator can be closed. Implements IPlayerEvent IDeniableEvent IGeneratorEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.DamagingShootingTargetEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.DamagingShootingTargetEventArgs.html",
    "title": "Class DamagingShootingTargetEventArgs | EXILED Docs",
    "keywords": "Class DamagingShootingTargetEventArgs Contains all information before a player damages a shooting target. Inheritance System.Object DamagingShootingTargetEventArgs Implements IPlayerEvent IDeniableEvent IItemEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class DamagingShootingTargetEventArgs : IPlayerEvent, IDeniableEvent, IItemEvent, IExiledEvent Constructors | Improve this Doc View Source DamagingShootingTargetEventArgs(Player, Single, Single, Vector3, ShootingTarget, DamageHandlerBase, Boolean) Initializes a new instance of the DamagingShootingTargetEventArgs class. Declaration public DamagingShootingTargetEventArgs(Player player, float damage, float distance, Vector3 hitLocation, ShootingTarget shootingTarget, DamageHandlerBase damageHandler, bool isAllowed = true) Parameters Type Name Description Player player System.Single damage System.Single distance UnityEngine.Vector3 hitLocation AdminToys.ShootingTarget shootingTarget PlayerStatsSystem.DamageHandlerBase damageHandler System.Boolean isAllowed Properties | Improve this Doc View Source Amount Gets or sets the damage amount. Declaration public float Amount { get; set; } Property Value Type Description System.Single | Improve this Doc View Source DamageHandler Gets the PlayerStatsSystem.AttackerDamageHandler . Declaration public AttackerDamageHandler DamageHandler { get; } Property Value Type Description PlayerStatsSystem.AttackerDamageHandler | Improve this Doc View Source Distance Gets or sets the distance between the shooter and the shooting target. Declaration public float Distance { get; set; } Property Value Type Description System.Single | Improve this Doc View Source HitLocation Gets the exact world location the bullet impacted the target. Declaration public Vector3 HitLocation { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the target can be damaged. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Gets the item which is being used to deal the damage. Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source Player Gets the player who's damaging the shooting target. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source ShootingTarget Gets the shooting target which is being damaged. Declaration public ShootingTargetToy ShootingTarget { get; } Property Value Type Description ShootingTargetToy Implements IPlayerEvent IDeniableEvent IItemEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.DamagingWindowEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.DamagingWindowEventArgs.html",
    "title": "Class DamagingWindowEventArgs | EXILED Docs",
    "keywords": "Class DamagingWindowEventArgs Contains all information before damage is dealt to a BreakableWindow . Inheritance System.Object DamagingWindowEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class DamagingWindowEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source DamagingWindowEventArgs(BreakableWindow, Single, DamageHandlerBase) Initializes a new instance of the DamagingWindowEventArgs class. Declaration public DamagingWindowEventArgs(BreakableWindow window, float damage, DamageHandlerBase handler) Parameters Type Name Description BreakableWindow window System.Single damage The damage being dealt. PlayerStatsSystem.DamageHandlerBase handler Properties | Improve this Doc View Source Handler Gets or sets the Damage handler for this event. Declaration public DamageHandler Handler { get; set; } Property Value Type Description DamageHandler | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the window can be broken. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the Player causing the damage. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Window Gets the Window object that is damaged. Declaration public Window Window { get; } Property Value Type Description Window Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.DeactivatingWorkstationEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.DeactivatingWorkstationEventArgs.html",
    "title": "Class DeactivatingWorkstationEventArgs | EXILED Docs",
    "keywords": "Class DeactivatingWorkstationEventArgs Contains all information before deactivating a workstation. Inheritance System.Object DeactivatingWorkstationEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class DeactivatingWorkstationEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source DeactivatingWorkstationEventArgs(WorkstationController, Boolean) Initializes a new instance of the DeactivatingWorkstationEventArgs class. Declaration public DeactivatingWorkstationEventArgs(WorkstationController controller, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.Firearms.Attachments.WorkstationController controller System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the workstation can be deactivated. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewStatus Gets or sets the workstation status. Declaration public WorkstationController.WorkstationStatus NewStatus { get; set; } Property Value Type Description InventorySystem.Items.Firearms.Attachments.WorkstationController.WorkstationStatus | Improve this Doc View Source Player Gets the Player last user of the workstation. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source WorkstationController Gets the workstation. Declaration public WorkstationController WorkstationController { get; } Property Value Type Description InventorySystem.Items.Firearms.Attachments.WorkstationController Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.DestroyingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.DestroyingEventArgs.html",
    "title": "Class DestroyingEventArgs | EXILED Docs",
    "keywords": "Class DestroyingEventArgs Contains all information before a player's object is destroyed. Inheritance System.Object DestroyingEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class DestroyingEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source DestroyingEventArgs(Player) Initializes a new instance of the DestroyingEventArgs class. Declaration public DestroyingEventArgs(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source Player Gets the destoying player. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.DiedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.DiedEventArgs.html",
    "title": "Class DiedEventArgs | EXILED Docs",
    "keywords": "Class DiedEventArgs Contains all information after a player dies. Inheritance System.Object DiedEventArgs Implements IAttackerEvent IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class DiedEventArgs : IAttackerEvent, IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source DiedEventArgs(Player, RoleTypeId, DamageHandlerBase) Initializes a new instance of the DiedEventArgs class. Declaration public DiedEventArgs(Player target, RoleTypeId targetOldRole, DamageHandlerBase damageHandler) Parameters Type Name Description Player target PlayerRoles.RoleTypeId targetOldRole Target's old PlayerRoles.RoleTypeId . PlayerStatsSystem.DamageHandlerBase damageHandler Properties | Improve this Doc View Source Attacker Gets the killer player. Declaration public Player Attacker { get; } Property Value Type Description Player | Improve this Doc View Source DamageHandler Gets or sets the DamageHandler . Declaration public CustomDamageHandler DamageHandler { get; set; } Property Value Type Description CustomDamageHandler | Improve this Doc View Source Player Gets the killed player. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source TargetOldRole Gets the old PlayerRoles.RoleTypeId from the killed player. Declaration public RoleTypeId TargetOldRole { get; } Property Value Type Description PlayerRoles.RoleTypeId Implements IAttackerEvent IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.DroppingAmmoEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.DroppingAmmoEventArgs.html",
    "title": "Class DroppingAmmoEventArgs | EXILED Docs",
    "keywords": "Class DroppingAmmoEventArgs Contains all information before a player drops an item. Inheritance System.Object DroppingAmmoEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class DroppingAmmoEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source DroppingAmmoEventArgs(Player, AmmoType, UInt16, Boolean) Initializes a new instance of the DroppingAmmoEventArgs class. Declaration public DroppingAmmoEventArgs(Player player, AmmoType ammoType, ushort amount, bool isAllowed = true) Parameters Type Name Description Player player AmmoType ammoType System.UInt16 amount System.Boolean isAllowed Properties | Improve this Doc View Source AmmoType Gets the type of ammo being dropped. Declaration public AmmoType AmmoType { get; } Property Value Type Description AmmoType | Improve this Doc View Source Amount Gets or sets the amount of ammo being dropped. Declaration public int Amount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the ammo can be dropped. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's dropping the ammo. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.DroppingItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.DroppingItemEventArgs.html",
    "title": "Class DroppingItemEventArgs | EXILED Docs",
    "keywords": "Class DroppingItemEventArgs Contains all information before a player drops an item. Inheritance System.Object DroppingItemEventArgs Implements IPlayerEvent IItemEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class DroppingItemEventArgs : IPlayerEvent, IItemEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source DroppingItemEventArgs(Player, ItemBase, Boolean, Boolean) Initializes a new instance of the DroppingItemEventArgs class. Declaration public DroppingItemEventArgs(Player player, ItemBase item, bool isThrown, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.ItemBase item System.Boolean isThrown System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the item can be dropped. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsThrown Gets or sets a value indicating whether or not the item was thrown. Declaration public bool IsThrown { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Gets the item to be dropped. Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source Player Gets the player who's dropping the item. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IItemEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.DroppingNothingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.DroppingNothingEventArgs.html",
    "title": "Class DroppingNothingEventArgs | EXILED Docs",
    "keywords": "Class DroppingNothingEventArgs Contains all information before a player drops a null item. Inheritance System.Object DroppingNothingEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class DroppingNothingEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source DroppingNothingEventArgs(Player) Initializes a new instance of the DroppingNothingEventArgs class. Declaration public DroppingNothingEventArgs(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source Player Gets the player who's dropping the null item. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.DryfiringWeaponEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.DryfiringWeaponEventArgs.html",
    "title": "Class DryfiringWeaponEventArgs | EXILED Docs",
    "keywords": "Class DryfiringWeaponEventArgs Contains all information before a player's weapon is dryfired. Inheritance System.Object DryfiringWeaponEventArgs Implements IPlayerEvent IFirearmEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class DryfiringWeaponEventArgs : IPlayerEvent, IFirearmEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source DryfiringWeaponEventArgs(Player, Boolean) Initializes a new instance of the DryfiringWeaponEventArgs class. Declaration public DryfiringWeaponEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source Firearm Gets the Firearm being dryfired. Declaration public Firearm Firearm { get; } Property Value Type Description Firearm | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the weapon can be dryfired. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's dryfiring the weapon. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IFirearmEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.DyingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.DyingEventArgs.html",
    "title": "Class DyingEventArgs | EXILED Docs",
    "keywords": "Class DyingEventArgs Contains all information before a player dies. Inheritance System.Object DyingEventArgs OwnerDyingEventArgs Implements IAttackerEvent IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class DyingEventArgs : IAttackerEvent, IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source DyingEventArgs(Player, DamageHandlerBase) Initializes a new instance of the DyingEventArgs class. Declaration public DyingEventArgs(Player target, DamageHandlerBase damageHandler) Parameters Type Name Description Player target PlayerStatsSystem.DamageHandlerBase damageHandler Properties | Improve this Doc View Source Attacker Gets the killing player. Declaration public Player Attacker { get; } Property Value Type Description Player | Improve this Doc View Source DamageHandler Gets or sets the CustomDamageHandler . Declaration public CustomDamageHandler DamageHandler { get; set; } Property Value Type Description CustomDamageHandler | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can be killed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ItemsToDrop Gets or sets the list of items to be dropped. Declaration public List<Item> ItemsToDrop { get; set; } Property Value Type Description System.Collections.Generic.List < Item > | Improve this Doc View Source Player Gets the dying player. Declaration public Player Player { get; } Property Value Type Description Player Implements IAttackerEvent IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.EnteringEnvironmentalHazardEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.EnteringEnvironmentalHazardEventArgs.html",
    "title": "Class EnteringEnvironmentalHazardEventArgs | EXILED Docs",
    "keywords": "Class EnteringEnvironmentalHazardEventArgs Contains all information before a player enters in an environmental hazard. Inheritance System.Object EnteringEnvironmentalHazardEventArgs Implements IPlayerEvent IDeniableEvent IHazardEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class EnteringEnvironmentalHazardEventArgs : IPlayerEvent, IDeniableEvent, IHazardEvent, IExiledEvent Constructors | Improve this Doc View Source EnteringEnvironmentalHazardEventArgs(Player, EnvironmentalHazard, Boolean) Initializes a new instance of the EnteringEnvironmentalHazardEventArgs class. Declaration public EnteringEnvironmentalHazardEventArgs(Player player, EnvironmentalHazard environmentalHazard, bool isAllowed = true) Parameters Type Name Description Player player Hazards.EnvironmentalHazard environmentalHazard System.Boolean isAllowed Properties | Improve this Doc View Source EnvironmentalHazard Gets the environmental hazard that the player is entering in. Declaration public EnvironmentalHazard EnvironmentalHazard { get; } Property Value Type Description Hazards.EnvironmentalHazard | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player should be affected by the environmental hazard. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's entering in the environmental hazard. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IHazardEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.EnteringKillerCollisionEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.EnteringKillerCollisionEventArgs.html",
    "title": "Class EnteringKillerCollisionEventArgs | EXILED Docs",
    "keywords": "Class EnteringKillerCollisionEventArgs Contains all information before a player enters killer collision. Inheritance System.Object EnteringKillerCollisionEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class EnteringKillerCollisionEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source EnteringKillerCollisionEventArgs(Player, Boolean) Initializes a new instance of the EnteringKillerCollisionEventArgs class. Declaration public EnteringKillerCollisionEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player is killed by killer collision. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's currently entering killer collision. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.EnteringPocketDimensionEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.EnteringPocketDimensionEventArgs.html",
    "title": "Class EnteringPocketDimensionEventArgs | EXILED Docs",
    "keywords": "Class EnteringPocketDimensionEventArgs Contains all information before a player enters the pocket dimension. Inheritance System.Object EnteringPocketDimensionEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class EnteringPocketDimensionEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source EnteringPocketDimensionEventArgs(Player, Player, Boolean) Initializes a new instance of the EnteringPocketDimensionEventArgs class. Declaration public EnteringPocketDimensionEventArgs(Player player, Player scp106, bool isAllowed = true) Parameters Type Name Description Player player Player scp106 System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can enter the pocket dimension. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's entering the pocket dimension. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp106 Gets the SCP-106 who sent the player to the pocket dimension. Declaration public Player Scp106 { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.EscapingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.EscapingEventArgs.html",
    "title": "Class EscapingEventArgs | EXILED Docs",
    "keywords": "Class EscapingEventArgs Contains all information before a player escapes. Inheritance System.Object EscapingEventArgs OwnerEscapingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class EscapingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source EscapingEventArgs(Player, RoleTypeId) Initializes a new instance of the EscapingEventArgs class. Declaration public EscapingEventArgs(Player player, RoleTypeId newRole) Parameters Type Name Description Player player PlayerRoles.RoleTypeId newRole Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can escape. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewRole Gets or sets the role that will be assigned when the player escapes. Declaration public RoleTypeId NewRole { get; set; } Property Value Type Description PlayerRoles.RoleTypeId | Improve this Doc View Source Player Gets the player who's escaping. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.EscapingPocketDimensionEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.EscapingPocketDimensionEventArgs.html",
    "title": "Class EscapingPocketDimensionEventArgs | EXILED Docs",
    "keywords": "Class EscapingPocketDimensionEventArgs Contains all information before a player escapes the pocket dimension. Inheritance System.Object EscapingPocketDimensionEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class EscapingPocketDimensionEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source EscapingPocketDimensionEventArgs(Player, Vector3) Initializes a new instance of the EscapingPocketDimensionEventArgs class. Declaration public EscapingPocketDimensionEventArgs(Player player, Vector3 position) Parameters Type Name Description Player player UnityEngine.Vector3 position Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can successfully escape the pocket dimension. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's escaping the pocket dimension. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source TeleportPosition Gets or sets the position in which the player is going to be teleported to. Declaration public Vector3 TeleportPosition { get; set; } Property Value Type Description UnityEngine.Vector3 Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ExitingEnvironmentalHazardEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ExitingEnvironmentalHazardEventArgs.html",
    "title": "Class ExitingEnvironmentalHazardEventArgs | EXILED Docs",
    "keywords": "Class ExitingEnvironmentalHazardEventArgs Contains all information before a player exits an environmental hazard. Inheritance System.Object ExitingEnvironmentalHazardEventArgs Implements IPlayerEvent IDeniableEvent IHazardEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ExitingEnvironmentalHazardEventArgs : IPlayerEvent, IDeniableEvent, IHazardEvent, IExiledEvent Constructors | Improve this Doc View Source ExitingEnvironmentalHazardEventArgs(Player, EnvironmentalHazard, Boolean) Initializes a new instance of the ExitingEnvironmentalHazardEventArgs class. Declaration public ExitingEnvironmentalHazardEventArgs(Player player, EnvironmentalHazard environmentalHazard, bool isAllowed = true) Parameters Type Name Description Player player Hazards.EnvironmentalHazard environmentalHazard System.Boolean isAllowed Properties | Improve this Doc View Source EnvironmentalHazard Gets the environmental hazard that the player is exiting from. Declaration public EnvironmentalHazard EnvironmentalHazard { get; } Property Value Type Description Hazards.EnvironmentalHazard | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player should be affected by the environmental hazard. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's exiting from the environmental hazard. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IHazardEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.FailingEscapePocketDimensionEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.FailingEscapePocketDimensionEventArgs.html",
    "title": "Class FailingEscapePocketDimensionEventArgs | EXILED Docs",
    "keywords": "Class FailingEscapePocketDimensionEventArgs Contains all information before a player dies from walking through an incorrect exit in the pocket dimension. Inheritance System.Object FailingEscapePocketDimensionEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class FailingEscapePocketDimensionEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source FailingEscapePocketDimensionEventArgs(Player, PocketDimensionTeleport, Boolean) Initializes a new instance of the FailingEscapePocketDimensionEventArgs class. Declaration public FailingEscapePocketDimensionEventArgs(Player player, PocketDimensionTeleport teleporter, bool isAllowed = true) Parameters Type Name Description Player player PocketDimensionTeleport teleporter System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player dies by failing the pocket dimension escape. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's escaping the pocket dimension. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Teleporter Gets the PocketDimensionTeleport the player walked into. Declaration public PocketDimensionTeleport Teleporter { get; } Property Value Type Description PocketDimensionTeleport Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.FlippingCoinEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.FlippingCoinEventArgs.html",
    "title": "Class FlippingCoinEventArgs | EXILED Docs",
    "keywords": "Class FlippingCoinEventArgs Contains all information before a player flips a coin. Inheritance System.Object FlippingCoinEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class FlippingCoinEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source FlippingCoinEventArgs(Player, Boolean) Initializes a new instance of the FlippingCoinEventArgs class. Declaration public FlippingCoinEventArgs(Player player, bool isTails) Parameters Type Name Description Player player System.Boolean isTails Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the coin can be flipped. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTails Gets or sets a value indicating whether or not the coin is landing on tails. Declaration public bool IsTails { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's flipping the coin. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.HandcuffingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.HandcuffingEventArgs.html",
    "title": "Class HandcuffingEventArgs | EXILED Docs",
    "keywords": "Class HandcuffingEventArgs Contains all information before handcuffing a player. Inheritance System.Object HandcuffingEventArgs OwnerHandcuffingEventArgs RemovingHandcuffsEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class HandcuffingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source HandcuffingEventArgs(Player, Player, Boolean) Initializes a new instance of the HandcuffingEventArgs class. Declaration public HandcuffingEventArgs(Player cuffer, Player target, bool isAllowed = true) Parameters Type Name Description Player cuffer Player target System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can be handcuffed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the cuffer player. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Target Gets the target player to be cuffed. Declaration public Player Target { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.html": {
    "href": "api/Exiled.Events.EventArgs.Player.html",
    "title": "Namespace Exiled.Events.EventArgs.Player | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Player Classes ActivatingGeneratorEventArgs Contains all information before a player filps the switch of the generator. ActivatingWarheadPanelEventArgs Contains all information before a player activates the warhead panel. ActivatingWorkstationEventArgs Contains all information before a player activates a workstation. AimingDownSightEventArgs Contains all information when a player aims. BannedEventArgs Contains all information after banning a player from the server. BanningEventArgs Contains all information before banning a player from the server. CancellingItemUseEventArgs Contains all information before a player cancels usage of a medical item. ChangedItemEventArgs Contains all information after a player's held item changes. ChangingGroupEventArgs Contains all information before a player's user group changes. ChangingIntercomMuteStatusEventArgs Contains all information before a player's intercom mute status is changed. ChangingItemEventArgs Contains all information before a player's held item changes. ChangingMicroHIDStateEventArgs Contains all information before MicroHID state is changed. ChangingMoveStateEventArgs Contains all information before changing movement state. ChangingMuteStatusEventArgs Contains all information before a player's mute status is changed. ChangingRadioPresetEventArgs Contains all information before radio preset is changed. ChangingRoleEventArgs Contains all information before a player's PlayerRoles.RoleTypeId changes. ChangingSpectatedPlayerEventArgs Contains all information before a spectator changes the spectated player. ClosingGeneratorEventArgs Contains all information before a player closes a generator. DamagingShootingTargetEventArgs Contains all information before a player damages a shooting target. DamagingWindowEventArgs Contains all information before damage is dealt to a BreakableWindow . DeactivatingWorkstationEventArgs Contains all information before deactivating a workstation. DestroyingEventArgs Contains all information before a player's object is destroyed. DiedEventArgs Contains all information after a player dies. DroppingAmmoEventArgs Contains all information before a player drops an item. DroppingItemEventArgs Contains all information before a player drops an item. DroppingNothingEventArgs Contains all information before a player drops a null item. DryfiringWeaponEventArgs Contains all information before a player's weapon is dryfired. DyingEventArgs Contains all information before a player dies. EnteringEnvironmentalHazardEventArgs Contains all information before a player enters in an environmental hazard. EnteringKillerCollisionEventArgs Contains all information before a player enters killer collision. EnteringPocketDimensionEventArgs Contains all information before a player enters the pocket dimension. EscapingEventArgs Contains all information before a player escapes. EscapingPocketDimensionEventArgs Contains all information before a player escapes the pocket dimension. ExitingEnvironmentalHazardEventArgs Contains all information before a player exits an environmental hazard. FailingEscapePocketDimensionEventArgs Contains all information before a player dies from walking through an incorrect exit in the pocket dimension. FlippingCoinEventArgs Contains all information before a player flips a coin. HandcuffingEventArgs Contains all information before handcuffing a player. HurtingEventArgs Contains all information before a player gets damaged. InteractedEventArgs Contains all information after a player has interacted with an interactable. InteractingDoorEventArgs Contains all information before a player interacts with a door. InteractingElevatorEventArgs Contains all information before a player interacts with an elevator. InteractingLockerEventArgs Contains all information before a player interacts with a locker. InteractingShootingTargetEventArgs Contains all information before a player interacts with a shooting target. IntercomSpeakingEventArgs Contains all information before a player speaks to the intercom. IssuingMuteEventArgs Contains all information before muting a player. ItemAddedEventArgs Contains all information after adding an item to a player's inventory. JoinedEventArgs Contains all information after a player joins the server. JumpingEventArgs Contains all information before a player jumps. KickedEventArgs Contains all information after kicking a player from the server. KickingEventArgs Contains all information before kicking a player from the server. KillingPlayerEventArgs Contains all information before player data to kill player is sent. LandingEventArgs Contains all the information after a Player lands on the ground. LeftEventArgs Contains all information after a Player disconnects from the server. LocalReportingEventArgs Contains information before a report is sent to local administrators. MakingNoiseEventArgs Contains all information before a player makes noise. OpeningGeneratorEventArgs Contains all information before a player opens a generator. PickingUpItemEventArgs Contains all information before a player picks up an item. PreAuthenticatingEventArgs Contains all information before pre-authenticating a player. ProcessingHotkeyEventArgs Contains all information before pressing a hotkey. ReceivingEffectEventArgs Contains all information before a player receives a CustomPlayerEffects.StatusEffectBase . ReloadingWeaponEventArgs Contains all information before a player's weapon is reloaded. RemovingHandcuffsEventArgs Contains all information before freeing a handcuffed player. ReservedSlotsCheckEventArgs Contains all information when checking if a player has a reserved slot. RevokingMuteEventArgs Contains all information before unmuting a player. SearchingPickupEventArgs Contains all information before a player searches a Pickup. ShootingEventArgs Contains all information before a player fires a weapon. ShotEventArgs Contains all information after a player has fired a weapon. SpawnedEventArgs Contains all information after spawning a player. SpawningEventArgs Contains all information before spawning a player. SpawningRagdollEventArgs Contains all information before spawning a player ragdoll. StayingOnEnvironmentalHazardEventArgs Contains all information when a player stays on an environmental hazard. StoppingGeneratorEventArgs Contains all information before a player ejects a tablet from a generator. ThrowingRequestEventArgs Contains all information before receving a throwing request. ThrownProjectileEventArgs Contains all information after a player throws a grenade. TogglingFlashlightEventArgs Contains all information before a player toggles the flashlight. TogglingNoClipEventArgs Contains all information before a player toggles the NoClip mode. TogglingOverwatchEventArgs Contains all information before a player toggles the overwatch. TogglingWeaponFlashlightEventArgs Contains all information before a player toggles the weapon's flashlight. TransmittingEventArgs Contains all information after a player presses the transmission key. TriggeringTeslaEventArgs Contains all information before triggering a tesla. UnloadingWeaponEventArgs Contains all information before a player's weapon is unloaded. UnlockingGeneratorEventArgs Contains all information before a generator is unlocked. UsedItemEventArgs Contains all information after a player used an item. UsingItemEventArgs Contains all information before a player uses an item. UsingMicroHIDEnergyEventArgs Contains all information before MicroHID energy is changed. UsingRadioBatteryEventArgs Contains all information before radio battery charge is changed. VerifiedEventArgs Contains all information after the server verifies a player. VoiceChattingEventArgs Contains all information after a player presses the voicechat key."
  },
  "api/Exiled.Events.EventArgs.Player.HurtingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.HurtingEventArgs.html",
    "title": "Class HurtingEventArgs | EXILED Docs",
    "keywords": "Class HurtingEventArgs Contains all information before a player gets damaged. Inheritance System.Object HurtingEventArgs Implements IAttackerEvent IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class HurtingEventArgs : IAttackerEvent, IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source HurtingEventArgs(Player, DamageHandlerBase) Initializes a new instance of the HurtingEventArgs class. Declaration public HurtingEventArgs(Player target, DamageHandlerBase damageHandler) Parameters Type Name Description Player target PlayerStatsSystem.DamageHandlerBase damageHandler Properties | Improve this Doc View Source Amount Gets or sets the amount of inflicted damage. Declaration public float Amount { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Attacker Gets the attacker player. Declaration public Player Attacker { get; } Property Value Type Description Player | Improve this Doc View Source DamageHandler Gets or sets the CustomDamageHandler for the event. Declaration public CustomDamageHandler DamageHandler { get; set; } Property Value Type Description CustomDamageHandler | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player will be dealt damage. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the target player, who is going to be hurt. Declaration public Player Player { get; } Property Value Type Description Player Implements IAttackerEvent IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.InteractedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.InteractedEventArgs.html",
    "title": "Class InteractedEventArgs | EXILED Docs",
    "keywords": "Class InteractedEventArgs Contains all information after a player has interacted with an interactable. Inheritance System.Object InteractedEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class InteractedEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source InteractedEventArgs(Player) Initializes a new instance of the InteractedEventArgs class. Declaration public InteractedEventArgs(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source Player Gets the player who interacted. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.InteractingDoorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.InteractingDoorEventArgs.html",
    "title": "Class InteractingDoorEventArgs | EXILED Docs",
    "keywords": "Class InteractingDoorEventArgs Contains all information before a player interacts with a door. Inheritance System.Object InteractingDoorEventArgs TriggeringDoorEventArgs Implements IPlayerEvent IDoorEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class InteractingDoorEventArgs : IPlayerEvent, IDoorEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source InteractingDoorEventArgs(Player, DoorVariant, Boolean) Initializes a new instance of the InteractingDoorEventArgs class. Declaration public InteractingDoorEventArgs(Player player, DoorVariant door, bool isAllowed = true) Parameters Type Name Description Player player Interactables.Interobjects.DoorUtils.DoorVariant door System.Boolean isAllowed Properties | Improve this Doc View Source Door Gets or sets the Door instance. Declaration public Door Door { get; set; } Property Value Type Description Door | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can interact with the door. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's interacting with the door. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDoorEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.InteractingElevatorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.InteractingElevatorEventArgs.html",
    "title": "Class InteractingElevatorEventArgs | EXILED Docs",
    "keywords": "Class InteractingElevatorEventArgs Contains all information before a player interacts with an elevator. Inheritance System.Object InteractingElevatorEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class InteractingElevatorEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source InteractingElevatorEventArgs(Player, ElevatorChamber, Boolean) Initializes a new instance of the InteractingElevatorEventArgs class. Declaration public InteractingElevatorEventArgs(Player player, ElevatorChamber elevator, bool isAllowed = true) Parameters Type Name Description Player player Interactables.Interobjects.ElevatorChamber elevator System.Boolean isAllowed Properties | Improve this Doc View Source Elevator Gets the Elevator instance. Declaration public ElevatorChamber Elevator { get; } Property Value Type Description Interactables.Interobjects.ElevatorChamber | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can interact with the elevator. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Lift Gets the Lift instance. Declaration public Lift Lift { get; } Property Value Type Description Lift | Improve this Doc View Source Player Gets the player who's interacting with the elevator. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.InteractingLockerEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.InteractingLockerEventArgs.html",
    "title": "Class InteractingLockerEventArgs | EXILED Docs",
    "keywords": "Class InteractingLockerEventArgs Contains all information before a player interacts with a locker. Inheritance System.Object InteractingLockerEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class InteractingLockerEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source InteractingLockerEventArgs(Player, Locker, LockerChamber, Byte, Boolean) Initializes a new instance of the InteractingLockerEventArgs class. Declaration public InteractingLockerEventArgs(Player player, Locker locker, LockerChamber lockerChamber, byte chamberId, bool isAllowed) Parameters Type Name Description Player player MapGeneration.Distributors.Locker locker MapGeneration.Distributors.LockerChamber lockerChamber System.Byte chamberId System.Boolean isAllowed Properties | Improve this Doc View Source Chamber Gets the interacting chamber. Declaration public LockerChamber Chamber { get; } Property Value Type Description MapGeneration.Distributors.LockerChamber | Improve this Doc View Source ChamberId Gets the chamber id. Declaration public byte ChamberId { get; } Property Value Type Description System.Byte | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can interact with the locker. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Locker Gets the MapGeneration.Distributors.Locker instance. Declaration public Locker Locker { get; } Property Value Type Description MapGeneration.Distributors.Locker | Improve this Doc View Source Player Gets the player who's interacting with the locker. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.InteractingShootingTargetEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.InteractingShootingTargetEventArgs.html",
    "title": "Class InteractingShootingTargetEventArgs | EXILED Docs",
    "keywords": "Class InteractingShootingTargetEventArgs Contains all information before a player interacts with a shooting target. Inheritance System.Object InteractingShootingTargetEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class InteractingShootingTargetEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source InteractingShootingTargetEventArgs(Player, ShootingTarget, ShootingTargetButton, Int32, Int32, Boolean) Initializes a new instance of the InteractingShootingTargetEventArgs class. Declaration public InteractingShootingTargetEventArgs(Player player, ShootingTarget shootingTarget, ShootingTargetButton targetButton, int maxHp, int autoResetTime, bool isAllowed = true) Parameters Type Name Description Player player AdminToys.ShootingTarget shootingTarget ShootingTargetButton targetButton System.Int32 maxHp System.Int32 autoResetTime System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the interaction is allowed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewAutoResetTime Gets or sets the new auto reset time of the target. Declaration public int NewAutoResetTime { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source NewMaxHp Gets or sets the new max HP of the target. Declaration public int NewMaxHp { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Player Gets the player interacting with the shooting target. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source ShootingTarget Gets the shooting target being interacted with. Declaration public ShootingTargetToy ShootingTarget { get; } Property Value Type Description ShootingTargetToy | Improve this Doc View Source TargetButton Gets the button the player interacted with. Declaration public ShootingTargetButton TargetButton { get; } Property Value Type Description ShootingTargetButton Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.IntercomSpeakingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.IntercomSpeakingEventArgs.html",
    "title": "Class IntercomSpeakingEventArgs | EXILED Docs",
    "keywords": "Class IntercomSpeakingEventArgs Contains all information before a player speaks to the intercom. Inheritance System.Object IntercomSpeakingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class IntercomSpeakingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source IntercomSpeakingEventArgs(Player, Boolean) Initializes a new instance of the IntercomSpeakingEventArgs class. Declaration public IntercomSpeakingEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can speak to the intercom. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's going to speak to the intercom. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.IssuingMuteEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.IssuingMuteEventArgs.html",
    "title": "Class IssuingMuteEventArgs | EXILED Docs",
    "keywords": "Class IssuingMuteEventArgs Contains all information before muting a player. Inheritance System.Object IssuingMuteEventArgs RevokingMuteEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class IssuingMuteEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source IssuingMuteEventArgs(Player, Boolean, Boolean) Initializes a new instance of the IssuingMuteEventArgs class. Declaration public IssuingMuteEventArgs(Player player, bool isIntercom, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isIntercom System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can be muted. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsIntercom Gets or sets a value indicating whether the player is being intercom muted or not. Declaration public bool IsIntercom { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's being muted. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ItemAddedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ItemAddedEventArgs.html",
    "title": "Class ItemAddedEventArgs | EXILED Docs",
    "keywords": "Class ItemAddedEventArgs Contains all information after adding an item to a player's inventory. Inheritance System.Object ItemAddedEventArgs Implements IPlayerEvent IItemEvent IPickupEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ItemAddedEventArgs : IPlayerEvent, IItemEvent, IPickupEvent, IExiledEvent Constructors | Improve this Doc View Source ItemAddedEventArgs(ReferenceHub, ItemBase, ItemPickupBase) Initializes a new instance of the ItemAddedEventArgs class. Declaration public ItemAddedEventArgs(ReferenceHub referenceHub, ItemBase itemBase, ItemPickupBase pickupBase) Parameters Type Name Description ReferenceHub referenceHub The ReferenceHub the item was added to. InventorySystem.Items.ItemBase itemBase The added InventorySystem.Items.ItemBase . InventorySystem.Items.Pickups.ItemPickupBase pickupBase The InventorySystem.Items.Pickups.ItemPickupBase the InventorySystem.Items.ItemBase originated from, or null if the item was not picked up. Properties | Improve this Doc View Source Item Gets the item that was added. Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source Pickup Gets the pickup that the item originated from or null if the item was not picked up. Declaration public Pickup Pickup { get; } Property Value Type Description Pickup | Improve this Doc View Source Player Gets the player that had the item added. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IItemEvent IPickupEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.JoinedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.JoinedEventArgs.html",
    "title": "Class JoinedEventArgs | EXILED Docs",
    "keywords": "Class JoinedEventArgs Contains all information after a player joins the server. Inheritance System.Object JoinedEventArgs LeftEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class JoinedEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source JoinedEventArgs(Player) Initializes a new instance of the JoinedEventArgs class. Declaration public JoinedEventArgs(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source Player Gets the joined player. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.JumpingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.JumpingEventArgs.html",
    "title": "Class JumpingEventArgs | EXILED Docs",
    "keywords": "Class JumpingEventArgs Contains all information before a player jumps. Inheritance System.Object JumpingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class JumpingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source JumpingEventArgs(Player, Vector3, Boolean) Initializes a new instance of the JumpingEventArgs class. Declaration public JumpingEventArgs(Player player, Vector3 direction, bool isAllowed = true) Parameters Type Name Description Player player UnityEngine.Vector3 direction System.Boolean isAllowed Properties | Improve this Doc View Source Direction Gets or sets the jump direction. Declaration public Vector3 Direction { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the client data can be synchronized with the server. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's jumping. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Speed Gets or sets the jump speed. Declaration public float Speed { get; set; } Property Value Type Description System.Single Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.KickedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.KickedEventArgs.html",
    "title": "Class KickedEventArgs | EXILED Docs",
    "keywords": "Class KickedEventArgs Contains all information after kicking a player from the server. Inheritance System.Object KickedEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class KickedEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source KickedEventArgs(Player, String) Initializes a new instance of the KickedEventArgs class. Declaration public KickedEventArgs(Player target, string reason) Parameters Type Name Description Player target System.String reason Properties | Improve this Doc View Source Player Gets the kicked player. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Reason Gets the kick reason. Declaration public string Reason { get; } Property Value Type Description System.String Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.KickingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.KickingEventArgs.html",
    "title": "Class KickingEventArgs | EXILED Docs",
    "keywords": "Class KickingEventArgs Contains all information before kicking a player from the server. Inheritance System.Object KickingEventArgs BanningEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class KickingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source KickingEventArgs(Player, Player, String, String, Boolean) Initializes a new instance of the KickingEventArgs class. Declaration public KickingEventArgs(Player target, Player issuer, string reason, string fullMessage, bool isAllowed = true) Parameters Type Name Description Player target Player issuer System.String reason System.String fullMessage System.Boolean isAllowed Properties | Improve this Doc View Source FullMessage Gets or sets the full kick message. Declaration public string FullMessage { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not action is taken against the target. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets or sets the ban issuer. Declaration public Player Player { get; set; } Property Value Type Description Player | Improve this Doc View Source Reason Gets or sets the kick reason. Declaration public string Reason { get; set; } Property Value Type Description System.String | Improve this Doc View Source Target Gets or sets the ban target. Declaration public Player Target { get; set; } Property Value Type Description Player Methods | Improve this Doc View Source LogBanChange(String, String) Logs the kick, anti-backdoor protection from malicious plugins. Declaration protected void LogBanChange(string assemblyName, string message) Parameters Type Name Description System.String assemblyName The name of the calling assembly. System.String message The message to be logged. Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.KillingPlayerEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.KillingPlayerEventArgs.html",
    "title": "Class KillingPlayerEventArgs | EXILED Docs",
    "keywords": "Class KillingPlayerEventArgs Contains all information before player data to kill player is sent. Inheritance System.Object KillingPlayerEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class KillingPlayerEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source KillingPlayerEventArgs(Player, ref DamageHandlerBase) Initializes a new instance of the KillingPlayerEventArgs class. Declaration public KillingPlayerEventArgs(Player player, ref DamageHandlerBase handler) Parameters Type Name Description Player player Current player. PlayerStatsSystem.DamageHandlerBase handler DamageHandler instance. Properties | Improve this Doc View Source Handler Gets or sets current Damage Handler. Declaration public DamageHandlerBase Handler { get; set; } Property Value Type Description PlayerStatsSystem.DamageHandlerBase | Improve this Doc View Source Player Gets or sets current player. Declaration public Player Player { get; set; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.LandingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.LandingEventArgs.html",
    "title": "Class LandingEventArgs | EXILED Docs",
    "keywords": "Class LandingEventArgs Contains all the information after a Player lands on the ground. Inheritance System.Object LandingEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class LandingEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source LandingEventArgs(Player) Initializes a new instance of the LandingEventArgs class. Declaration public LandingEventArgs(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source Player Gets the Player who's landing. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.LeftEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.LeftEventArgs.html",
    "title": "Class LeftEventArgs | EXILED Docs",
    "keywords": "Class LeftEventArgs Contains all information after a Player disconnects from the server. Inheritance System.Object JoinedEventArgs LeftEventArgs Implements IPlayerEvent IExiledEvent Inherited Members JoinedEventArgs.Player System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class LeftEventArgs : JoinedEventArgs, IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source LeftEventArgs(Player) Initializes a new instance of the LeftEventArgs class. Declaration public LeftEventArgs(Player player) Parameters Type Name Description Player player The player who left the server. Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.LocalReportingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.LocalReportingEventArgs.html",
    "title": "Class LocalReportingEventArgs | EXILED Docs",
    "keywords": "Class LocalReportingEventArgs Contains information before a report is sent to local administrators. Inheritance System.Object LocalReportingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class LocalReportingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source LocalReportingEventArgs(Player, Player, String, Boolean) Initializes a new instance of the LocalReportingEventArgs class. Declaration public LocalReportingEventArgs(Player issuer, Player target, string reason, bool isAllowed = true) Parameters Type Name Description Player issuer Player target System.String reason System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the report can be processed or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the report issuer. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Reason Gets or sets the report reason. Declaration public string Reason { get; set; } Property Value Type Description System.String | Improve this Doc View Source Target Gets the report target. Declaration public Player Target { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.MakingNoiseEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.MakingNoiseEventArgs.html",
    "title": "Class MakingNoiseEventArgs | EXILED Docs",
    "keywords": "Class MakingNoiseEventArgs Contains all information before a player makes noise. Inheritance System.Object MakingNoiseEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class MakingNoiseEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source MakingNoiseEventArgs(AnimatedCharacterModel, Single) Initializes a new instance of the MakingNoiseEventArgs class. Declaration public MakingNoiseEventArgs(AnimatedCharacterModel animatedCharacterModel, float distance) Parameters Type Name Description PlayerRoles.FirstPersonControl.Thirdperson.AnimatedCharacterModel animatedCharacterModel The PlayerRoles.FirstPersonControl.Thirdperson.AnimatedCharacterModel instance. System.Single distance Properties | Improve this Doc View Source Distance Gets the footsteps distance. Declaration public float Distance { get; } Property Value Type Description System.Single | Improve this Doc View Source Player Gets the player who's making noise. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.OpeningGeneratorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.OpeningGeneratorEventArgs.html",
    "title": "Class OpeningGeneratorEventArgs | EXILED Docs",
    "keywords": "Class OpeningGeneratorEventArgs Contains all information before a player opens a generator. Inheritance System.Object OpeningGeneratorEventArgs ClosingGeneratorEventArgs Implements IPlayerEvent IDeniableEvent IGeneratorEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class OpeningGeneratorEventArgs : IPlayerEvent, IDeniableEvent, IGeneratorEvent, IExiledEvent Constructors | Improve this Doc View Source OpeningGeneratorEventArgs(Player, Scp079Generator, Boolean) Initializes a new instance of the OpeningGeneratorEventArgs class. Declaration public OpeningGeneratorEventArgs(Player player, Scp079Generator generator, bool isAllowed = true) Parameters Type Name Description Player player MapGeneration.Distributors.Scp079Generator generator System.Boolean isAllowed Properties | Improve this Doc View Source Generator Gets the generator that is opening. Declaration public Generator Generator { get; } Property Value Type Description Generator | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the generator can be opened. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's opening the generator. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IGeneratorEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.PickingUpItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.PickingUpItemEventArgs.html",
    "title": "Class PickingUpItemEventArgs | EXILED Docs",
    "keywords": "Class PickingUpItemEventArgs Contains all information before a player picks up an item. Inheritance System.Object PickingUpItemEventArgs Implements IPlayerEvent IPickupEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class PickingUpItemEventArgs : IPlayerEvent, IPickupEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source PickingUpItemEventArgs(Player, ItemPickupBase, Boolean) Initializes a new instance of the PickingUpItemEventArgs class. Declaration public PickingUpItemEventArgs(Player player, ItemPickupBase pickup, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.Pickups.ItemPickupBase pickup System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the item can be picked up. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pickup Gets the dropped pickup. Declaration public Pickup Pickup { get; } Property Value Type Description Pickup | Improve this Doc View Source Player Gets the player who dropped the item. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IPickupEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.PreAuthenticatingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.PreAuthenticatingEventArgs.html",
    "title": "Class PreAuthenticatingEventArgs | EXILED Docs",
    "keywords": "Class PreAuthenticatingEventArgs Contains all information before pre-authenticating a player. Inheritance System.Object PreAuthenticatingEventArgs Implements IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class PreAuthenticatingEventArgs : IExiledEvent Constructors | Improve this Doc View Source PreAuthenticatingEventArgs(String, String, Int64, CentralAuthPreauthFlags, String, Byte[], ConnectionRequest, Int32) Initializes a new instance of the PreAuthenticatingEventArgs class. Declaration public PreAuthenticatingEventArgs(string userId, string ipAddress, long expiration, CentralAuthPreauthFlags flags, string country, byte[] signature, ConnectionRequest request, int readerStartPosition) Parameters Type Name Description System.String userId System.String ipAddress System.Int64 expiration CentralAuthPreauthFlags flags System.String country System.Byte [] signature LiteNetLib.ConnectionRequest request System.Int32 readerStartPosition Properties | Improve this Doc View Source Country Gets the player's country. Declaration public string Country { get; } Property Value Type Description System.String | Improve this Doc View Source Expiration Gets the request's expiration. Declaration public long Expiration { get; } Property Value Type Description System.Int64 | Improve this Doc View Source Flags Gets the flags. Declaration public CentralAuthPreauthFlags Flags { get; } Property Value Type Description CentralAuthPreauthFlags | Improve this Doc View Source IpAddress Gets the player's IP address. Declaration public string IpAddress { get; } Property Value Type Description System.String | Improve this Doc View Source IsAllowed Gets a value indicating whether the player can be authenticated or not. Declaration public bool IsAllowed { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ReaderStartPosition Gets the reader starting position for reading the preauth. Declaration public int ReaderStartPosition { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Request Gets the connection request. Declaration public ConnectionRequest Request { get; } Property Value Type Description LiteNetLib.ConnectionRequest | Improve this Doc View Source Signature Gets the request's signature. Declaration public byte[] Signature { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source UserId Gets the player's user id. Declaration public string UserId { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Delay(Byte, Boolean) Delays a pre-authentincating player. Declaration public void Delay(byte seconds, bool isForced) Parameters Type Name Description System.Byte seconds The seconds of delay. System.Boolean isForced Indicates whether the delay is forced or not. | Improve this Doc View Source Redirect(UInt16, Boolean) Redirects a pre-authentincating player. Declaration public void Redirect(ushort port, bool isForced) Parameters Type Name Description System.UInt16 port The redirection port. System.Boolean isForced Indicates whether the redirection is forced or not. | Improve this Doc View Source Reject(RejectionReason, Boolean) Rejects a pre-authentincating player. Declaration public void Reject(RejectionReason reason, bool isForced) Parameters Type Name Description RejectionReason reason The RejectionReason . System.Boolean isForced Indicates whether the rejection is forced or not. | Improve this Doc View Source Reject(String, Boolean) Rejects a pre-authentincating player. Declaration public void Reject(string customReason, bool isForced) Parameters Type Name Description System.String customReason The rejection custom reason. System.Boolean isForced Indicates whether the rejection is forced or not. | Improve this Doc View Source RejectBanned(String, DateTime, Boolean) Rejects a pre-authentincating banned player. Declaration public void RejectBanned(string banReason, DateTime expiration, bool isForced) Parameters Type Name Description System.String banReason The ban reason. System.DateTime expiration The ban System.DateTime expiration. System.Boolean isForced Indicates whether the rejection is forced or not. | Improve this Doc View Source RejectBanned(String, Int64, Boolean) Rejects a pre-authentincating banned player. Declaration public void RejectBanned(string banReason, long expiration, bool isForced) Parameters Type Name Description System.String banReason The ban reason. System.Int64 expiration The ban expiration. System.Boolean isForced Indicates whether the rejection is forced or not. Implements IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ProcessingHotkeyEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ProcessingHotkeyEventArgs.html",
    "title": "Class ProcessingHotkeyEventArgs | EXILED Docs",
    "keywords": "Class ProcessingHotkeyEventArgs Contains all information before pressing a hotkey. Inheritance System.Object ProcessingHotkeyEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ProcessingHotkeyEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ProcessingHotkeyEventArgs(Player, HotkeyButton, Boolean) Initializes a new instance of the ProcessingHotkeyEventArgs class. Declaration public ProcessingHotkeyEventArgs(Player player, HotkeyButton hotkey, bool isAllowed = true) Parameters Type Name Description Player player HotkeyButton hotkey System.Boolean isAllowed Properties | Improve this Doc View Source Hotkey Gets the pressed hotkey. Declaration public HotkeyButton Hotkey { get; } Property Value Type Description HotkeyButton | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the hotkey is allowed to be pressed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's pressing the hotkey. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ReceivingEffectEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ReceivingEffectEventArgs.html",
    "title": "Class ReceivingEffectEventArgs | EXILED Docs",
    "keywords": "Class ReceivingEffectEventArgs Contains all information before a player receives a CustomPlayerEffects.StatusEffectBase . Inheritance System.Object ReceivingEffectEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ReceivingEffectEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ReceivingEffectEventArgs(Player, StatusEffectBase, Byte, Byte, Single) Initializes a new instance of the ReceivingEffectEventArgs class. Declaration public ReceivingEffectEventArgs(Player player, StatusEffectBase effect, byte intensity, byte currentIntensity, float duration) Parameters Type Name Description Player player CustomPlayerEffects.StatusEffectBase effect System.Byte intensity The intensity the effect is being changed to. System.Byte currentIntensity System.Single duration Properties | Improve this Doc View Source CurrentIntensity Gets the value of the current intensity of this effect on the player. Declaration public byte CurrentIntensity { get; } Property Value Type Description System.Byte | Improve this Doc View Source Duration Gets or sets a value indicating how long the effect will last. If its value is 0, then it doesn't always reflect the real effect duration. Declaration public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Effect Gets the CustomPlayerEffects.StatusEffectBase being received. Declaration public StatusEffectBase Effect { get; } Property Value Type Description CustomPlayerEffects.StatusEffectBase | Improve this Doc View Source Intensity Gets or sets the value of the new intensity of the effect. Setting this to 0 is the same as setting IsAllowed to false . Declaration public byte Intensity { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the effect will be applied. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the Player receiving the effect. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ReloadingWeaponEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ReloadingWeaponEventArgs.html",
    "title": "Class ReloadingWeaponEventArgs | EXILED Docs",
    "keywords": "Class ReloadingWeaponEventArgs Contains all information before a player's weapon is reloaded. Inheritance System.Object ReloadingWeaponEventArgs Implements IPlayerEvent IFirearmEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ReloadingWeaponEventArgs : IPlayerEvent, IFirearmEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ReloadingWeaponEventArgs(Player, Boolean) Initializes a new instance of the ReloadingWeaponEventArgs class. Declaration public ReloadingWeaponEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source Firearm Gets the Firearm being reloaded. Declaration public Firearm Firearm { get; } Property Value Type Description Firearm | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the weapon can be reloaded. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's reloading the weapon. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IFirearmEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.RemovingHandcuffsEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.RemovingHandcuffsEventArgs.html",
    "title": "Class RemovingHandcuffsEventArgs | EXILED Docs",
    "keywords": "Class RemovingHandcuffsEventArgs Contains all information before freeing a handcuffed player. Inheritance System.Object HandcuffingEventArgs RemovingHandcuffsEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members HandcuffingEventArgs.Target HandcuffingEventArgs.IsAllowed HandcuffingEventArgs.Player System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class RemovingHandcuffsEventArgs : HandcuffingEventArgs, IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source RemovingHandcuffsEventArgs(Player, Player, Boolean) Initializes a new instance of the RemovingHandcuffsEventArgs class. Declaration public RemovingHandcuffsEventArgs(Player cuffer, Player target, bool isAllowed = true) Parameters Type Name Description Player cuffer The cuffer player. Player target The target player to be uncuffed. System.Boolean isAllowed Indicates whether the event can be executed or not. Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ReservedSlotsCheckEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ReservedSlotsCheckEventArgs.html",
    "title": "Class ReservedSlotsCheckEventArgs | EXILED Docs",
    "keywords": "Class ReservedSlotsCheckEventArgs Contains all information when checking if a player has a reserved slot. Inheritance System.Object ReservedSlotsCheckEventArgs Implements IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ReservedSlotsCheckEventArgs : IExiledEvent Constructors | Improve this Doc View Source ReservedSlotsCheckEventArgs(String, Boolean) Initializes a new instance of the ReservedSlotsCheckEventArgs class. Declaration public ReservedSlotsCheckEventArgs(string userId, bool hasReservedSlot) Parameters Type Name Description System.String userId System.Boolean hasReservedSlot Properties | Improve this Doc View Source HasReservedSlot Gets a value indicating whether the player has a reserved slot in the base game system. Declaration public bool HasReservedSlot { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Result Gets or sets the event result. Declaration public ReservedSlotEventResult Result { get; set; } Property Value Type Description ReservedSlotEventResult | Improve this Doc View Source UserId Gets the UserID of the player that is being checked. Declaration public string UserId { get; } Property Value Type Description System.String Implements IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.RevokingMuteEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.RevokingMuteEventArgs.html",
    "title": "Class RevokingMuteEventArgs | EXILED Docs",
    "keywords": "Class RevokingMuteEventArgs Contains all information before unmuting a player. Inheritance System.Object IssuingMuteEventArgs RevokingMuteEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members IssuingMuteEventArgs.Player IssuingMuteEventArgs.IsIntercom IssuingMuteEventArgs.IsAllowed System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class RevokingMuteEventArgs : IssuingMuteEventArgs, IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source RevokingMuteEventArgs(Player, Boolean, Boolean) Initializes a new instance of the RevokingMuteEventArgs class. Declaration public RevokingMuteEventArgs(Player player, bool isIntercom, bool isAllowed = true) Parameters Type Name Description Player player The player who's being unmuted. System.Boolean isIntercom Indicates whether the player is being intercom unmuted or not. System.Boolean isAllowed Indicates whether or not the player can be unmuted. Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.SearchingPickupEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.SearchingPickupEventArgs.html",
    "title": "Class SearchingPickupEventArgs | EXILED Docs",
    "keywords": "Class SearchingPickupEventArgs Contains all information before a player searches a Pickup. Inheritance System.Object SearchingPickupEventArgs Implements IPlayerEvent IPickupEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class SearchingPickupEventArgs : IPlayerEvent, IPickupEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source SearchingPickupEventArgs(Player, ItemPickupBase, SearchSession, SearchCompletor, Single) Initializes a new instance of the SearchingPickupEventArgs class. Declaration public SearchingPickupEventArgs(Player player, ItemPickupBase pickup, SearchSession searchSession, SearchCompletor searchCompletor, float searchTime) Parameters Type Name Description Player player InventorySystem.Items.Pickups.ItemPickupBase pickup InventorySystem.Searching.SearchSession searchSession InventorySystem.Searching.SearchCompletor searchCompletor System.Single searchTime Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the Pickup can be searched. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pickup Gets the Pickup that is being searched. Declaration public Pickup Pickup { get; } Property Value Type Description Pickup | Improve this Doc View Source Player Gets the Player who's searching the Pickup. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source SearchCompletor Gets or sets the SearchCompletor. Declaration public SearchCompletor SearchCompletor { get; set; } Property Value Type Description InventorySystem.Searching.SearchCompletor | Improve this Doc View Source SearchSession Gets or sets the SearchSession. Declaration public SearchSession SearchSession { get; set; } Property Value Type Description InventorySystem.Searching.SearchSession | Improve this Doc View Source SearchTime Gets or sets the Pickup search duration. Declaration public float SearchTime { get; set; } Property Value Type Description System.Single Implements IPlayerEvent IPickupEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ShootingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ShootingEventArgs.html",
    "title": "Class ShootingEventArgs | EXILED Docs",
    "keywords": "Class ShootingEventArgs Contains all information before a player fires a weapon. Inheritance System.Object ShootingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ShootingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ShootingEventArgs(Player, ShotMessage) Initializes a new instance of the ShootingEventArgs class. Declaration public ShootingEventArgs(Player shooter, ShotMessage msg) Parameters Type Name Description Player shooter InventorySystem.Items.Firearms.BasicMessages.ShotMessage msg Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the shot can be fired. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's shooting. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source ShotMessage Gets or sets the ShotMessage for the event. Declaration public ShotMessage ShotMessage { get; set; } Property Value Type Description InventorySystem.Items.Firearms.BasicMessages.ShotMessage | Improve this Doc View Source ShotPosition Gets or sets the position of the shot. Declaration public Vector3 ShotPosition { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source TargetNetId Gets or sets the netId of the target of the shot. Declaration public uint TargetNetId { get; set; } Property Value Type Description System.UInt32 Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ShotEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ShotEventArgs.html",
    "title": "Class ShotEventArgs | EXILED Docs",
    "keywords": "Class ShotEventArgs Contains all information after a player has fired a weapon. Inheritance System.Object ShotEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ShotEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source ShotEventArgs(Player, RaycastHit, IDestructible, Single) Initializes a new instance of the ShotEventArgs class. Declaration public ShotEventArgs(Player shooter, RaycastHit hit, IDestructible destructible, float damage) Parameters Type Name Description Player shooter UnityEngine.RaycastHit hit IDestructible destructible The IDestructible hit. System.Single damage Properties | Improve this Doc View Source CanHurt Gets or sets a value indicating whether or not the shot can hurt the target. Declaration public bool CanHurt { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Damage Gets or sets the inflicted damage. Declaration public float Damage { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Distance Gets the shot distance. Declaration public float Distance { get; } Property Value Type Description System.Single | Improve this Doc View Source Hitbox Gets the hitbox type of the shot. Can be null !. Declaration public HitboxIdentity Hitbox { get; } Property Value Type Description HitboxIdentity | Improve this Doc View Source Player Gets the player who shot. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets the shot position. Declaration public Vector3 Position { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source RaycastHit Gets the raycast result. Declaration public RaycastHit RaycastHit { get; } Property Value Type Description UnityEngine.RaycastHit | Improve this Doc View Source Target Gets the target of the shot. Can be null !. Declaration public Player Target { get; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.SpawnedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.SpawnedEventArgs.html",
    "title": "Class SpawnedEventArgs | EXILED Docs",
    "keywords": "Class SpawnedEventArgs Contains all information after spawning a player. Inheritance System.Object SpawnedEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class SpawnedEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source SpawnedEventArgs(Player, PlayerRoleBase) Initializes a new instance of the SpawnedEventArgs class. Declaration public SpawnedEventArgs(Player player, PlayerRoleBase oldRole) Parameters Type Name Description Player player the spawned player. PlayerRoles.PlayerRoleBase oldRole the spawned player's old PlayerRoles.PlayerRoleBase . Properties | Improve this Doc View Source OldRole Gets the player's old PlayerRoles.PlayerRoleBase . Declaration public Role OldRole { get; } Property Value Type Description Role | Improve this Doc View Source Player Gets the Player who spawned. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Reason Gets the reason for their class change. Declaration public SpawnReason Reason { get; } Property Value Type Description SpawnReason | Improve this Doc View Source SpawnFlags Gets the spawn flags for their class change. Declaration public RoleSpawnFlags SpawnFlags { get; } Property Value Type Description PlayerRoles.RoleSpawnFlags Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.SpawningEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.SpawningEventArgs.html",
    "title": "Class SpawningEventArgs | EXILED Docs",
    "keywords": "Class SpawningEventArgs Contains all information before spawning a player. Inheritance System.Object SpawningEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class SpawningEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source SpawningEventArgs(Player, Vector3, Single, PlayerRoleBase) Initializes a new instance of the SpawningEventArgs class. Declaration public SpawningEventArgs(Player player, Vector3 position, float rotation, PlayerRoleBase oldRole) Parameters Type Name Description Player player UnityEngine.Vector3 position System.Single rotation PlayerRoles.PlayerRoleBase oldRole the spawned player's old PlayerRoles.PlayerRoleBase . Properties | Improve this Doc View Source HorizontalRotation Gets or sets the Player 's spawning rotation. Declaration public float HorizontalRotation { get; set; } Property Value Type Description System.Single Remarks Rotation will apply only for FpcRole . | Improve this Doc View Source OldRole Gets the player's old PlayerRoles.PlayerRoleBase . Declaration public Role OldRole { get; } Property Value Type Description Role | Improve this Doc View Source Player Gets the spawning Player . Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the Player 's spawning position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 Remarks Position will apply only for FpcRole . Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.SpawningRagdollEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.SpawningRagdollEventArgs.html",
    "title": "Class SpawningRagdollEventArgs | EXILED Docs",
    "keywords": "Class SpawningRagdollEventArgs Contains all information before spawning a player ragdoll. Inheritance System.Object SpawningRagdollEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class SpawningRagdollEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source SpawningRagdollEventArgs(RagdollData, DamageHandlerBase, Boolean) Initializes a new instance of the SpawningRagdollEventArgs class. Declaration public SpawningRagdollEventArgs(RagdollData info, DamageHandlerBase damageHandlerBase, bool isAllowed = true) Parameters Type Name Description RagdollData info PlayerStatsSystem.DamageHandlerBase damageHandlerBase System.Boolean isAllowed Properties | Improve this Doc View Source CreationTime Gets the ragdoll's creation time. Declaration public double CreationTime { get; } Property Value Type Description System.Double | Improve this Doc View Source DamageHandlerBase Gets or sets the ragdoll's PlayerStatsSystem.DamageHandlerBase . Declaration public DamageHandlerBase DamageHandlerBase { get; set; } Property Value Type Description PlayerStatsSystem.DamageHandlerBase | Improve this Doc View Source Info Gets or sets the ragdoll's RagdollData . Declaration public RagdollData Info { get; set; } Property Value Type Description RagdollData | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the ragdoll can be spawned. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Nickname Gets or sets the ragdoll's nickname. Declaration public string Nickname { get; set; } Property Value Type Description System.String | Improve this Doc View Source Player Gets the Owner of the ragdoll. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the spawning position of the ragdoll. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Role Gets or sets the ragdoll's PlayerRoles.RoleTypeId . Declaration public RoleTypeId Role { get; set; } Property Value Type Description PlayerRoles.RoleTypeId | Improve this Doc View Source Rotation Gets or sets the ragdoll's rotation. Declaration public Quaternion Rotation { get; set; } Property Value Type Description UnityEngine.Quaternion Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.StayingOnEnvironmentalHazardEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.StayingOnEnvironmentalHazardEventArgs.html",
    "title": "Class StayingOnEnvironmentalHazardEventArgs | EXILED Docs",
    "keywords": "Class StayingOnEnvironmentalHazardEventArgs Contains all information when a player stays on an environmental hazard. Inheritance System.Object StayingOnEnvironmentalHazardEventArgs Implements IPlayerEvent IHazardEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class StayingOnEnvironmentalHazardEventArgs : IPlayerEvent, IHazardEvent, IExiledEvent Constructors | Improve this Doc View Source StayingOnEnvironmentalHazardEventArgs(Player, EnvironmentalHazard) Initializes a new instance of the StayingOnEnvironmentalHazardEventArgs class. Declaration public StayingOnEnvironmentalHazardEventArgs(Player player, EnvironmentalHazard environmentalHazard) Parameters Type Name Description Player player Hazards.EnvironmentalHazard environmentalHazard Properties | Improve this Doc View Source EnvironmentalHazard Gets the environmental hazard that the player is staying on. Declaration public EnvironmentalHazard EnvironmentalHazard { get; } Property Value Type Description Hazards.EnvironmentalHazard | Improve this Doc View Source Player Gets the player who's staying on the environmental hazard. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IHazardEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.StoppingGeneratorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.StoppingGeneratorEventArgs.html",
    "title": "Class StoppingGeneratorEventArgs | EXILED Docs",
    "keywords": "Class StoppingGeneratorEventArgs Contains all information before a player ejects a tablet from a generator. Inheritance System.Object ActivatingGeneratorEventArgs StoppingGeneratorEventArgs Implements IPlayerEvent IGeneratorEvent IDeniableEvent IExiledEvent Inherited Members ActivatingGeneratorEventArgs.IsAllowed ActivatingGeneratorEventArgs.Generator ActivatingGeneratorEventArgs.Player System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class StoppingGeneratorEventArgs : ActivatingGeneratorEventArgs, IPlayerEvent, IGeneratorEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source StoppingGeneratorEventArgs(Player, Scp079Generator, Boolean) Initializes a new instance of the StoppingGeneratorEventArgs class. Declaration public StoppingGeneratorEventArgs(Player player, Scp079Generator generator, bool isAllowed = true) Parameters Type Name Description Player player The player who's ejecting the tablet. MapGeneration.Distributors.Scp079Generator generator The MapGeneration.Distributors.Scp079Generator instance. System.Boolean isAllowed Indicates whether or not the tablet can be ejected. Implements IPlayerEvent IGeneratorEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ThrowingRequestEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ThrowingRequestEventArgs.html",
    "title": "Class ThrowingRequestEventArgs | EXILED Docs",
    "keywords": "Class ThrowingRequestEventArgs Contains all information before receving a throwing request. Inheritance System.Object ThrowingRequestEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ThrowingRequestEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ThrowingRequestEventArgs(Player, ThrowableItem, ThrowableNetworkHandler.RequestType, Boolean) Initializes a new instance of the ThrowingRequestEventArgs class. Declaration public ThrowingRequestEventArgs(Player player, ThrowableItem item, ThrowableNetworkHandler.RequestType request, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.ThrowableProjectiles.ThrowableItem item InventorySystem.Items.ThrowableProjectiles.ThrowableNetworkHandler.RequestType request System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the grenade can be thrown. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's send request. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source RequestType Gets or sets the type of throw being requested. Declaration public ThrowRequest RequestType { get; set; } Property Value Type Description ThrowRequest | Improve this Doc View Source Throwable Gets or sets the item being thrown. Declaration public Throwable Throwable { get; set; } Property Value Type Description Throwable Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.ThrownProjectileEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.ThrownProjectileEventArgs.html",
    "title": "Class ThrownProjectileEventArgs | EXILED Docs",
    "keywords": "Class ThrownProjectileEventArgs Contains all information after a player throws a grenade. Inheritance System.Object ThrownProjectileEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class ThrownProjectileEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source ThrownProjectileEventArgs(Player, ThrowableItem, ThrownProjectile) Initializes a new instance of the ThrownProjectileEventArgs class. Declaration public ThrownProjectileEventArgs(Player player, ThrowableItem item, ThrownProjectile projectile) Parameters Type Name Description Player player InventorySystem.Items.ThrowableProjectiles.ThrowableItem item InventorySystem.Items.ThrowableProjectiles.ThrownProjectile projectile Properties | Improve this Doc View Source Player Gets the player who's thrown the grenade. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Projectile Gets the thrown grenade. Declaration public Projectile Projectile { get; } Property Value Type Description Projectile | Improve this Doc View Source Throwable Gets the item being thrown. Declaration public Throwable Throwable { get; } Property Value Type Description Throwable Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.TogglingFlashlightEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.TogglingFlashlightEventArgs.html",
    "title": "Class TogglingFlashlightEventArgs | EXILED Docs",
    "keywords": "Class TogglingFlashlightEventArgs Contains all information before a player toggles the flashlight. Inheritance System.Object TogglingFlashlightEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class TogglingFlashlightEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source TogglingFlashlightEventArgs(ReferenceHub, FlashlightItem, Boolean) Initializes a new instance of the TogglingFlashlightEventArgs class. Declaration public TogglingFlashlightEventArgs(ReferenceHub hub, FlashlightItem flashlight, bool newState) Parameters Type Name Description ReferenceHub hub InventorySystem.Items.Flashlight.FlashlightItem flashlight System.Boolean newState Properties | Improve this Doc View Source Flashlight Gets the Flashlight being toggled. Declaration public Flashlight Flashlight { get; } Property Value Type Description Flashlight | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can toggle the flashlight. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewState Gets or sets a value indicating whether or not the flashlight should be on. Declaration public bool NewState { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's toggling the flashlight. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.TogglingNoClipEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.TogglingNoClipEventArgs.html",
    "title": "Class TogglingNoClipEventArgs | EXILED Docs",
    "keywords": "Class TogglingNoClipEventArgs Contains all information before a player toggles the NoClip mode. Inheritance System.Object TogglingNoClipEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class TogglingNoClipEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source TogglingNoClipEventArgs(Player, Boolean, Boolean) Initializes a new instance of the TogglingNoClipEventArgs class. Declaration public TogglingNoClipEventArgs(Player player, bool newValue, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean newValue System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can toggle the NoClip mode. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsEnabled Gets or sets a value indicating whether or not the NoClip mode will be enabled or not. Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's toggling the NoClip mode. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.TogglingOverwatchEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.TogglingOverwatchEventArgs.html",
    "title": "Class TogglingOverwatchEventArgs | EXILED Docs",
    "keywords": "Class TogglingOverwatchEventArgs Contains all information before a player toggles the overwatch. Inheritance System.Object TogglingOverwatchEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class TogglingOverwatchEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source TogglingOverwatchEventArgs(Player, Byte) Initializes a new instance of the TogglingOverwatchEventArgs class. Declaration public TogglingOverwatchEventArgs(Player player, byte newValue) Parameters Type Name Description Player player System.Byte newValue Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the event is allowed or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsEnabled Gets or sets a value indicating whether overwatch will be enabled or not. Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player that is toggling overwatch. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.TogglingWeaponFlashlightEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.TogglingWeaponFlashlightEventArgs.html",
    "title": "Class TogglingWeaponFlashlightEventArgs | EXILED Docs",
    "keywords": "Class TogglingWeaponFlashlightEventArgs Contains all information before a player toggles the weapon's flashlight. Inheritance System.Object TogglingWeaponFlashlightEventArgs Implements IPlayerEvent IFirearmEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class TogglingWeaponFlashlightEventArgs : IPlayerEvent, IFirearmEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source TogglingWeaponFlashlightEventArgs(Player, Boolean, Boolean) Initializes a new instance of the TogglingWeaponFlashlightEventArgs class. Declaration public TogglingWeaponFlashlightEventArgs(Player player, bool newState, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean newState System.Boolean isAllowed Properties | Improve this Doc View Source Firearm Gets the Firearm being held. Declaration public Firearm Firearm { get; } Property Value Type Description Firearm | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the weapon's flashlight can be toggled. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewState Gets or sets the new weapon's flashlight state. Declaration public bool NewState { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's toggling the weapon's flashlight. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IFirearmEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.TransmittingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.TransmittingEventArgs.html",
    "title": "Class TransmittingEventArgs | EXILED Docs",
    "keywords": "Class TransmittingEventArgs Contains all information after a player presses the transmission key. Inheritance System.Object TransmittingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class TransmittingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source TransmittingEventArgs(Player, VoiceModuleBase) Initializes a new instance of the TransmittingEventArgs class. Declaration public TransmittingEventArgs(Player player, VoiceModuleBase voiceModule) Parameters Type Name Description Player player PlayerRoles.Voice.VoiceModuleBase voiceModule Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can transmit. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTransmitting Gets a value indicating whether or not the player is transmitting. Declaration public bool IsTransmitting { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's transmitting. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source VoiceModule Gets the Player 's PlayerRoles.Voice.VoiceModuleBase . Declaration public VoiceModuleBase VoiceModule { get; } Property Value Type Description PlayerRoles.Voice.VoiceModuleBase Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.TriggeringTeslaEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.TriggeringTeslaEventArgs.html",
    "title": "Class TriggeringTeslaEventArgs | EXILED Docs",
    "keywords": "Class TriggeringTeslaEventArgs Contains all information before triggering a tesla. Inheritance System.Object TriggeringTeslaEventArgs Implements IPlayerEvent ITeslaEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class TriggeringTeslaEventArgs : IPlayerEvent, ITeslaEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source TriggeringTeslaEventArgs(Player, TeslaGate) Initializes a new instance of the TriggeringTeslaEventArgs class. Declaration public TriggeringTeslaEventArgs(Player player, TeslaGate teslaGate) Parameters Type Name Description Player player TeslaGate teslaGate Properties | Improve this Doc View Source DisableTesla Gets or sets a value indicating whether or not the tesla will be deactivated. Declaration public bool DisableTesla { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player will be detected by the tesla. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInHurtingRange Gets or sets a value indicating whether or not the player is in hurting range. Declaration public bool IsInHurtingRange { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsInIdleRange Gets or sets a value indicating whether or not the player will cause the tesla going to be idle. Declaration public bool IsInIdleRange { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsTriggerable Gets or sets a value indicating whether or not the player will cause the tesla going to be activated. Declaration public bool IsTriggerable { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who triggered the tesla. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Tesla Gets the Tesla. Declaration public TeslaGate Tesla { get; } Property Value Type Description TeslaGate Implements IPlayerEvent ITeslaEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.UnloadingWeaponEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.UnloadingWeaponEventArgs.html",
    "title": "Class UnloadingWeaponEventArgs | EXILED Docs",
    "keywords": "Class UnloadingWeaponEventArgs Contains all information before a player's weapon is unloaded. Inheritance System.Object UnloadingWeaponEventArgs Implements IPlayerEvent IFirearmEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class UnloadingWeaponEventArgs : IPlayerEvent, IFirearmEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source UnloadingWeaponEventArgs(Player, Boolean) Initializes a new instance of the UnloadingWeaponEventArgs class. Declaration public UnloadingWeaponEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source Firearm Gets the Firearm being unloaded. Declaration public Firearm Firearm { get; } Property Value Type Description Firearm | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the weapon can be unloaded. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's unloading the weapon. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IFirearmEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.UnlockingGeneratorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.UnlockingGeneratorEventArgs.html",
    "title": "Class UnlockingGeneratorEventArgs | EXILED Docs",
    "keywords": "Class UnlockingGeneratorEventArgs Contains all information before a generator is unlocked. Inheritance System.Object UnlockingGeneratorEventArgs Implements IPlayerEvent IGeneratorEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class UnlockingGeneratorEventArgs : IPlayerEvent, IGeneratorEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source UnlockingGeneratorEventArgs(Player, Scp079Generator, Boolean) Initializes a new instance of the UnlockingGeneratorEventArgs class. Declaration public UnlockingGeneratorEventArgs(Player player, Scp079Generator generator, bool isAllowed = true) Parameters Type Name Description Player player MapGeneration.Distributors.Scp079Generator generator System.Boolean isAllowed Properties | Improve this Doc View Source Generator Gets the generator that is going to be unlocked. Declaration public Generator Generator { get; } Property Value Type Description Generator | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the generator can be unlocked. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's unlocking the generator. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IGeneratorEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.UsedItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.UsedItemEventArgs.html",
    "title": "Class UsedItemEventArgs | EXILED Docs",
    "keywords": "Class UsedItemEventArgs Contains all information after a player used an item. Inheritance System.Object UsedItemEventArgs UsingItemEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class UsedItemEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source UsedItemEventArgs(Player, UsableItem) Initializes a new instance of the UsedItemEventArgs class. Declaration public UsedItemEventArgs(Player player, UsableItem item) Parameters Type Name Description Player player InventorySystem.Items.Usables.UsableItem item Properties | Improve this Doc View Source Item Gets the item that the player used. Declaration public Usable Item { get; } Property Value Type Description Usable | Improve this Doc View Source Player Gets the player who used the item. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.UsingItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.UsingItemEventArgs.html",
    "title": "Class UsingItemEventArgs | EXILED Docs",
    "keywords": "Class UsingItemEventArgs Contains all information before a player uses an item. Inheritance System.Object UsedItemEventArgs UsingItemEventArgs CancellingItemUseEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members UsedItemEventArgs.Item UsedItemEventArgs.Player System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class UsingItemEventArgs : UsedItemEventArgs, IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source UsingItemEventArgs(Player, UsableItem, Single) Initializes a new instance of the UsingItemEventArgs class. Declaration public UsingItemEventArgs(Player player, UsableItem item, float cooldown) Parameters Type Name Description Player player The player who's going to use the item. InventorySystem.Items.Usables.UsableItem item System.Single cooldown Properties | Improve this Doc View Source Cooldown Gets or sets the item cooldown. Declaration public float Cooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can use the item. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.UsingMicroHIDEnergyEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.UsingMicroHIDEnergyEventArgs.html",
    "title": "Class UsingMicroHIDEnergyEventArgs | EXILED Docs",
    "keywords": "Class UsingMicroHIDEnergyEventArgs Contains all information before MicroHID energy is changed. Inheritance System.Object UsingMicroHIDEnergyEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class UsingMicroHIDEnergyEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source UsingMicroHIDEnergyEventArgs(Player, MicroHIDItem, HidState, Single, Boolean) Initializes a new instance of the UsingMicroHIDEnergyEventArgs class. Declaration public UsingMicroHIDEnergyEventArgs(Player player, MicroHIDItem microHIDitem, HidState currentState, float drain, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.MicroHID.MicroHIDItem microHIDitem InventorySystem.Items.MicroHID.HidState currentState System.Single drain System.Boolean isAllowed Properties | Improve this Doc View Source CurrentState Gets the current state of the MicroHID. Declaration public HidState CurrentState { get; } Property Value Type Description InventorySystem.Items.MicroHID.HidState | Improve this Doc View Source Drain Gets or sets the MicroHID energy drain. Declaration public float Drain { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the MicroHID energy can be changed or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MicroHID Gets the MicroHID instance. Declaration public MicroHid MicroHID { get; } Property Value Type Description MicroHid | Improve this Doc View Source Player Gets the player who's using the MicroHID. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.UsingRadioBatteryEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.UsingRadioBatteryEventArgs.html",
    "title": "Class UsingRadioBatteryEventArgs | EXILED Docs",
    "keywords": "Class UsingRadioBatteryEventArgs Contains all information before radio battery charge is changed. Inheritance System.Object UsingRadioBatteryEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class UsingRadioBatteryEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source UsingRadioBatteryEventArgs(RadioItem, Player, Single, Boolean) Initializes a new instance of the UsingRadioBatteryEventArgs class. Declaration public UsingRadioBatteryEventArgs(RadioItem radio, Player player, float drain, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.Radio.RadioItem radio Player player System.Single drain System.Boolean isAllowed Properties | Improve this Doc View Source Drain Gets or sets the radio battery drain per second. Declaration public float Drain { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the radio battery charge can be changed or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's using the radio. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Radio Gets the Radio which is being used. Declaration public Radio Radio { get; } Property Value Type Description Radio Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.VerifiedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.VerifiedEventArgs.html",
    "title": "Class VerifiedEventArgs | EXILED Docs",
    "keywords": "Class VerifiedEventArgs Contains all information after the server verifies a player. Inheritance System.Object VerifiedEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class VerifiedEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source VerifiedEventArgs(Player) Initializes a new instance of the VerifiedEventArgs class. Declaration public VerifiedEventArgs(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source Player Gets the verified player. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Player.VoiceChattingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Player.VoiceChattingEventArgs.html",
    "title": "Class VoiceChattingEventArgs | EXILED Docs",
    "keywords": "Class VoiceChattingEventArgs Contains all information after a player presses the voicechat key. Inheritance System.Object VoiceChattingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Player Assembly : Exiled.Events.dll Syntax public class VoiceChattingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source VoiceChattingEventArgs(Player, VoiceModuleBase, Boolean) Initializes a new instance of the VoiceChattingEventArgs class. Declaration public VoiceChattingEventArgs(Player player, VoiceModuleBase voiceModule, bool isAllowed = true) Parameters Type Name Description Player player PlayerRoles.Voice.VoiceModuleBase voiceModule System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can voicechat. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's voicechatting. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source VoiceModule Gets the Player 's PlayerRoles.Voice.VoiceModuleBase . Declaration public VoiceModuleBase VoiceModule { get; } Property Value Type Description PlayerRoles.Voice.VoiceModuleBase Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp049.ActivatingSenseEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp049.ActivatingSenseEventArgs.html",
    "title": "Class ActivatingSenseEventArgs | EXILED Docs",
    "keywords": "Class ActivatingSenseEventArgs Contains all information before SCP-049 sense is activated. Inheritance System.Object ActivatingSenseEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp049 Assembly : Exiled.Events.dll Syntax public class ActivatingSenseEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ActivatingSenseEventArgs(Player, Player, Boolean) Initializes a new instance of the ActivatingSenseEventArgs class with information before SCP-049 sense is activated. Declaration public ActivatingSenseEventArgs(Player player, Player target, bool isAllowed = true) Parameters Type Name Description Player player Player target System.Boolean isAllowed Properties | Improve this Doc View Source Cooldown Gets or sets the cooldown of the ability. Declaration public float Cooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Duration Gets or sets the duration of the ability. Declaration public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the server will send 049 information on the recall. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the Player who is playing as SCP-049. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Target Gets the Player who the sense ability is affecting. Declaration public Player Target { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp049.ConsumingCorpseEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp049.ConsumingCorpseEventArgs.html",
    "title": "Class ConsumingCorpseEventArgs | EXILED Docs",
    "keywords": "Class ConsumingCorpseEventArgs Contains all information before zombie consumes RagDolls. Inheritance System.Object ConsumingCorpseEventArgs Implements IPlayerEvent IRagdollEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp049 Assembly : Exiled.Events.dll Syntax public class ConsumingCorpseEventArgs : IPlayerEvent, IRagdollEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ConsumingCorpseEventArgs(Player, Ragdoll, ZombieConsumeAbility.ConsumeError, Boolean) Initializes a new instance of the ConsumingCorpseEventArgs class. Declaration public ConsumingCorpseEventArgs(Player player, Ragdoll ragDoll, ZombieConsumeAbility.ConsumeError error, bool isAllowed = true) Parameters Type Name Description Player player Ragdoll ragDoll PlayerRoles.PlayableScps.Scp049.Zombies.ZombieConsumeAbility.ConsumeError error System.Boolean isAllowed Remarks See PlayerRoles.PlayableScps.Scp049.Zombies.ZombieConsumeAbility.ConsumedRagdolls for all RagDolls consumed. Properties | Improve this Doc View Source ErrorCode Gets or sets error code to send back to client. Declaration public ZombieConsumeAbility.ConsumeError ErrorCode { get; set; } Property Value Type Description PlayerRoles.PlayableScps.Scp049.Zombies.ZombieConsumeAbility.ConsumeError | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether 049-2 can consume a corpse. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who is controlling SCP-049-2. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Ragdoll Gets the RagDoll to be consumed. Declaration public Ragdoll Ragdoll { get; } Property Value Type Description Ragdoll Implements IPlayerEvent IRagdollEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp049.FinishingRecallEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp049.FinishingRecallEventArgs.html",
    "title": "Class FinishingRecallEventArgs | EXILED Docs",
    "keywords": "Class FinishingRecallEventArgs Contains all information before SCP-049 finishes recalling a player. Inheritance System.Object FinishingRecallEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp049 Assembly : Exiled.Events.dll Syntax public class FinishingRecallEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source FinishingRecallEventArgs(Player, Player, BasicRagdoll, Boolean) Initializes a new instance of the FinishingRecallEventArgs class. Declaration public FinishingRecallEventArgs(Player target, Player scp049, BasicRagdoll ragdoll, bool isAllowed = true) Parameters Type Name Description Player target Player scp049 BasicRagdoll ragdoll System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can be recalled. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who is controlling SCP-049. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Ragdoll Gets the Ragdoll who's getting recalled. Declaration public Ragdoll Ragdoll { get; } Property Value Type Description Ragdoll | Improve this Doc View Source Target Gets the player who's getting recalled. Declaration public Player Target { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp049.html": {
    "href": "api/Exiled.Events.EventArgs.Scp049.html",
    "title": "Namespace Exiled.Events.EventArgs.Scp049 | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Scp049 Classes ActivatingSenseEventArgs Contains all information before SCP-049 sense is activated. ConsumingCorpseEventArgs Contains all information before zombie consumes RagDolls. FinishingRecallEventArgs Contains all information before SCP-049 finishes recalling a player. SendingCallEventArgs Contains all information before SCP-049 Call is activated. StartingRecallEventArgs Contains all information before SCP-049 begins recalling a player."
  },
  "api/Exiled.Events.EventArgs.Scp049.SendingCallEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp049.SendingCallEventArgs.html",
    "title": "Class SendingCallEventArgs | EXILED Docs",
    "keywords": "Class SendingCallEventArgs Contains all information before SCP-049 Call is activated. Inheritance System.Object SendingCallEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp049 Assembly : Exiled.Events.dll Syntax public class SendingCallEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source SendingCallEventArgs(Player, Single, Boolean) Initializes a new instance of the SendingCallEventArgs class. Declaration public SendingCallEventArgs(Player player, float duration, bool isAllowed = true) Parameters Type Name Description Player player System.Single duration System.Boolean isAllowed Properties | Improve this Doc View Source Duration Gets or sets the duration of the Call Ability. Declaration public float Duration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the server will send 049 information on the call. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who is controlling SCP-049. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp049.StartingRecallEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp049.StartingRecallEventArgs.html",
    "title": "Class StartingRecallEventArgs | EXILED Docs",
    "keywords": "Class StartingRecallEventArgs Contains all information before SCP-049 begins recalling a player. Inheritance System.Object StartingRecallEventArgs Implements IPlayerEvent IRagdollEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp049 Assembly : Exiled.Events.dll Syntax public class StartingRecallEventArgs : IPlayerEvent, IRagdollEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source StartingRecallEventArgs(Player, Player, Ragdoll, Boolean) Initializes a new instance of the StartingRecallEventArgs class. Declaration public StartingRecallEventArgs(Player target, Player scp049, Ragdoll ragdoll, bool isAllowed = true) Parameters Type Name Description Player target Player scp049 Ragdoll ragdoll System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the recall can begin. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who is controlling SCP-049. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Ragdoll Gets the Ragdoll who's getting recalled. Declaration public Ragdoll Ragdoll { get; } Property Value Type Description Ragdoll | Improve this Doc View Source Target Gets the player who's getting recalled. Declaration public Player Target { get; } Property Value Type Description Player Implements IPlayerEvent IRagdollEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.ChangingCameraEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.ChangingCameraEventArgs.html",
    "title": "Class ChangingCameraEventArgs | EXILED Docs",
    "keywords": "Class ChangingCameraEventArgs Contains all information before a SCP-079 changes the current camera. Inheritance System.Object ChangingCameraEventArgs Implements IPlayerEvent ICameraEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class ChangingCameraEventArgs : IPlayerEvent, ICameraEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingCameraEventArgs(Player, Scp079Camera, Single) Initializes a new instance of the ChangingCameraEventArgs class. Declaration public ChangingCameraEventArgs(Player player, Scp079Camera camera, float auxiliaryPowerCost) Parameters Type Name Description Player player PlayerRoles.PlayableScps.Scp079.Cameras.Scp079Camera camera System.Single auxiliaryPowerCost Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power that will be required to switch cameras. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Camera Gets or sets the camera SCP-079 will be moved to. Declaration public Camera Camera { get; set; } Property Value Type Description Camera | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can switch cameras. Defaults to a value describing whether or not SCP-079 has enough auxiliary power to switch. Can be set to true to allow a switch regardless of SCP-079's auxiliary power amount. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who is SCP-079. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent ICameraEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.ChangingSpeakerStatusEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.ChangingSpeakerStatusEventArgs.html",
    "title": "Class ChangingSpeakerStatusEventArgs | EXILED Docs",
    "keywords": "Class ChangingSpeakerStatusEventArgs Contains all information before SCP-079 uses a speaker. Inheritance System.Object ChangingSpeakerStatusEventArgs Implements IPlayerEvent IRoomEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class ChangingSpeakerStatusEventArgs : IPlayerEvent, IRoomEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingSpeakerStatusEventArgs(Player, Boolean) Initializes a new instance of the ChangingSpeakerStatusEventArgs class. Declaration public ChangingSpeakerStatusEventArgs(Player player, bool isAllowed) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether SCP-079 is speaking or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Room Gets the room that the speaker is located in. Declaration public Room Room { get; } Property Value Type Description Room Implements IPlayerEvent IRoomEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.ElevatorTeleportingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.ElevatorTeleportingEventArgs.html",
    "title": "Class ElevatorTeleportingEventArgs | EXILED Docs",
    "keywords": "Class ElevatorTeleportingEventArgs Contains all information before SCP-079 changes rooms via elevator. Inheritance System.Object ElevatorTeleportingEventArgs Implements IPlayerEvent IRoomEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class ElevatorTeleportingEventArgs : IPlayerEvent, IRoomEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ElevatorTeleportingEventArgs(Player, RoomIdentifier, ElevatorDoor, Single) Initializes a new instance of the ElevatorTeleportingEventArgs class. Declaration public ElevatorTeleportingEventArgs(Player player, RoomIdentifier room, ElevatorDoor elevatorDoor, float auxiliaryPowerCost) Parameters Type Name Description Player player MapGeneration.RoomIdentifier room Interactables.Interobjects.ElevatorDoor elevatorDoor System.Single auxiliaryPowerCost Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power required to teleport to an elevator camera. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can teleport. Defaults to a System.Boolean describing whether or not SCP-079 has enough auxiliary power to teleport. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Lift Gets the Lift SCP-079 wants to move. Declaration public Lift Lift { get; } Property Value Type Description Lift | Improve this Doc View Source Player Gets the player who is controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Room Gets Room SCP-079 is in. Declaration public Room Room { get; } Property Value Type Description Room Implements IPlayerEvent IRoomEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.GainingExperienceEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.GainingExperienceEventArgs.html",
    "title": "Class GainingExperienceEventArgs | EXILED Docs",
    "keywords": "Class GainingExperienceEventArgs Contains all information before SCP-079 gains experience. Inheritance System.Object GainingExperienceEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class GainingExperienceEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source GainingExperienceEventArgs(Player, Scp079HudTranslation, Int32, Boolean) Initializes a new instance of the GainingExperienceEventArgs class. Declaration public GainingExperienceEventArgs(Player player, Scp079HudTranslation gainType, int amount, bool isAllowed = true) Parameters Type Name Description Player player PlayerRoles.PlayableScps.Scp079.Scp079HudTranslation gainType System.Int32 amount System.Boolean isAllowed Properties | Improve this Doc View Source Amount Gets or sets the amount of experience to be gained. Declaration public int Amount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source GainType Gets the experience gain type. Declaration public Scp079HudTranslation GainType { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079HudTranslation | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the experience is successfully granted. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.GainingLevelEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.GainingLevelEventArgs.html",
    "title": "Class GainingLevelEventArgs | EXILED Docs",
    "keywords": "Class GainingLevelEventArgs Contains all information before SCP-079 gains a level. Inheritance System.Object GainingLevelEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class GainingLevelEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source GainingLevelEventArgs(Player, Int32, Boolean) Initializes a new instance of the GainingLevelEventArgs class. Declaration public GainingLevelEventArgs(Player player, int newLevel, bool isAllowed = true) Parameters Type Name Description Player player System.Int32 newLevel System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the level is successfully granted. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewLevel Gets or sets SCP-079's new level. Declaration public int NewLevel { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.html",
    "title": "Namespace Exiled.Events.EventArgs.Scp079 | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Scp079 Classes ChangingCameraEventArgs Contains all information before a SCP-079 changes the current camera. ChangingSpeakerStatusEventArgs Contains all information before SCP-079 uses a speaker. ElevatorTeleportingEventArgs Contains all information before SCP-079 changes rooms via elevator. GainingExperienceEventArgs Contains all information before SCP-079 gains experience. GainingLevelEventArgs Contains all information before SCP-079 gains a level. InteractingTeslaEventArgs Contains all information before SCP-079 triggers a tesla gate. LockingDownEventArgs Contains all information before SCP-079 lockdowns a room. PingingEventArgs Contains all information before SCP-079 pings a location. RecontainedEventArgs Contains information after SCP-079 recontainment. RoomBlackoutEventArgs Contains all information before SCP-079 turns off the lights in a room. StartingSpeakerEventArgs Contains all information before SCP-079 uses a speaker. StoppingSpeakerEventArgs Contains all information before SCP-079 finishes using a speaker. TriggeringDoorEventArgs Contains all information before SCP-079 interacts with a door. ZoneBlackoutEventArgs Contains all information before SCP-079 lockdowns a room."
  },
  "api/Exiled.Events.EventArgs.Scp079.InteractingTeslaEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.InteractingTeslaEventArgs.html",
    "title": "Class InteractingTeslaEventArgs | EXILED Docs",
    "keywords": "Class InteractingTeslaEventArgs Contains all information before SCP-079 triggers a tesla gate. Inheritance System.Object InteractingTeslaEventArgs Implements IPlayerEvent ITeslaEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class InteractingTeslaEventArgs : IPlayerEvent, ITeslaEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source InteractingTeslaEventArgs(Player, TeslaGate, Single) Initializes a new instance of the InteractingTeslaEventArgs class. Declaration public InteractingTeslaEventArgs(Player player, TeslaGate teslaGate, float auxiliaryPowerCost) Parameters Type Name Description Player player TeslaGate teslaGate System.Single auxiliaryPowerCost Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power required to interact with a tesla gate through SCP-079. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can interact with the tesla gate. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Tesla Gets the TeslaGate that SCP-079 is triggering. Declaration public TeslaGate Tesla { get; } Property Value Type Description TeslaGate Implements IPlayerEvent ITeslaEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.LockingDownEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.LockingDownEventArgs.html",
    "title": "Class LockingDownEventArgs | EXILED Docs",
    "keywords": "Class LockingDownEventArgs Contains all information before SCP-079 lockdowns a room. Inheritance System.Object LockingDownEventArgs Implements IPlayerEvent IRoomEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class LockingDownEventArgs : IPlayerEvent, IRoomEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source LockingDownEventArgs(Player, RoomIdentifier, Single) Initializes a new instance of the LockingDownEventArgs class. Declaration public LockingDownEventArgs(Player player, RoomIdentifier roomIdentifier, float auxiliaryPowerCost) Parameters Type Name Description Player player MapGeneration.RoomIdentifier roomIdentifier System.Single auxiliaryPowerCost Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power required to lockdown a room. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can lockdown a room. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Room Gets the MapGeneration.RoomIdentifier of the room that will be locked down. Declaration public Room Room { get; } Property Value Type Description Room Implements IPlayerEvent IRoomEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.PingingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.PingingEventArgs.html",
    "title": "Class PingingEventArgs | EXILED Docs",
    "keywords": "Class PingingEventArgs Contains all information before SCP-079 pings a location. Inheritance System.Object PingingEventArgs Implements IPlayerEvent IRoomEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class PingingEventArgs : IPlayerEvent, IRoomEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source PingingEventArgs(ReferenceHub, RelativePosition, Int32, Byte, Vector3, Boolean) Initializes a new instance of the PingingEventArgs class. Declaration public PingingEventArgs(ReferenceHub hub, RelativePosition position, int powerCost, byte proccesorindex, Vector3 syncNormal, bool isAllowed = true) Parameters Type Name Description ReferenceHub hub RelativePositioning.RelativePosition position System.Int32 powerCost System.Byte proccesorindex UnityEngine.Vector3 syncNormal System.Boolean isAllowed Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power required for SCP-079 to ping. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the event is allowed to continue. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets a value indicating the position of the ping. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Room Gets the room where the ping is located in. Declaration public Room Room { get; } Property Value Type Description Room | Improve this Doc View Source SyncNormal Gets a value indicating if the sync matches. Declaration public Vector3 SyncNormal { get; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Type Gets or sets a value indicating the type of ping. Declaration public PingType Type { get; set; } Property Value Type Description PingType Implements IPlayerEvent IRoomEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.RecontainedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.RecontainedEventArgs.html",
    "title": "Class RecontainedEventArgs | EXILED Docs",
    "keywords": "Class RecontainedEventArgs Contains information after SCP-079 recontainment. Inheritance System.Object RecontainedEventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class RecontainedEventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source RecontainedEventArgs(Player) Initializes a new instance of the RecontainedEventArgs class. Declaration public RecontainedEventArgs(Player target) Parameters Type Name Description Player target Properties | Improve this Doc View Source Player Gets the player that previously controlled SCP-079. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.RoomBlackoutEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.RoomBlackoutEventArgs.html",
    "title": "Class RoomBlackoutEventArgs | EXILED Docs",
    "keywords": "Class RoomBlackoutEventArgs Contains all information before SCP-079 turns off the lights in a room. Inheritance System.Object RoomBlackoutEventArgs Implements IPlayerEvent IRoomEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class RoomBlackoutEventArgs : IPlayerEvent, IRoomEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source RoomBlackoutEventArgs(ReferenceHub, RoomIdentifier, Single, Single, Single, Boolean) Initializes a new instance of the RoomBlackoutEventArgs class. Declaration public RoomBlackoutEventArgs(ReferenceHub player, RoomIdentifier roomIdentifier, float auxiliaryPowerCost, float blackoutduration, float cooldown, bool isAllowed) Parameters Type Name Description ReferenceHub player MapGeneration.RoomIdentifier roomIdentifier System.Single auxiliaryPowerCost System.Single blackoutduration System.Single cooldown System.Boolean isAllowed Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power required to black out the room. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single | Improve this Doc View Source BlackoutDuration Gets or sets the duration of the blackout. Declaration public float BlackoutDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Cooldown Gets or sets the blackout cooldown duration. Declaration public double Cooldown { get; set; } Property Value Type Description System.Double | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can black out the room. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Room Gets the room that will be locked down. Declaration public Room Room { get; } Property Value Type Description Room Implements IPlayerEvent IRoomEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.StartingSpeakerEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.StartingSpeakerEventArgs.html",
    "title": "Class StartingSpeakerEventArgs | EXILED Docs",
    "keywords": "Class StartingSpeakerEventArgs Contains all information before SCP-079 uses a speaker. Inheritance System.Object StartingSpeakerEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class StartingSpeakerEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source StartingSpeakerEventArgs(Player, Room, Single, Boolean) Initializes a new instance of the StartingSpeakerEventArgs class. Declaration public StartingSpeakerEventArgs(Player player, Room room, float auxiliaryPowerCost, bool isAllowed = true) Parameters Type Name Description Player player Room room System.Single auxiliaryPowerCost System.Boolean isAllowed Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power required to use a speaker through SCP-079. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can use the speaker. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Room Gets the room that the speaker is located in. Declaration public Room Room { get; } Property Value Type Description Room Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.StoppingSpeakerEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.StoppingSpeakerEventArgs.html",
    "title": "Class StoppingSpeakerEventArgs | EXILED Docs",
    "keywords": "Class StoppingSpeakerEventArgs Contains all information before SCP-079 finishes using a speaker. Inheritance System.Object StoppingSpeakerEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class StoppingSpeakerEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source StoppingSpeakerEventArgs(Player, Room, Boolean) Initializes a new instance of the StoppingSpeakerEventArgs class. Declaration public StoppingSpeakerEventArgs(Player player, Room room, bool isAllowed = true) Parameters Type Name Description Player player Room room System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can stop using the speaker. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Room Gets the room that the speaker is located in. Declaration public Room Room { get; } Property Value Type Description Room Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.TriggeringDoorEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.TriggeringDoorEventArgs.html",
    "title": "Class TriggeringDoorEventArgs | EXILED Docs",
    "keywords": "Class TriggeringDoorEventArgs Contains all information before SCP-079 interacts with a door. Inheritance System.Object InteractingDoorEventArgs TriggeringDoorEventArgs Implements IPlayerEvent IDoorEvent IDeniableEvent IExiledEvent Inherited Members InteractingDoorEventArgs.IsAllowed InteractingDoorEventArgs.Door InteractingDoorEventArgs.Player System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class TriggeringDoorEventArgs : InteractingDoorEventArgs, IPlayerEvent, IDoorEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source TriggeringDoorEventArgs(Player, DoorVariant, Single) Initializes a new instance of the TriggeringDoorEventArgs class. Declaration public TriggeringDoorEventArgs(Player player, DoorVariant door, float auxiliaryPowerCost) Parameters Type Name Description Player player Interactables.Interobjects.DoorUtils.DoorVariant door System.Single auxiliaryPowerCost Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power required to trigger a door through SCP-079. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single Implements IPlayerEvent IDoorEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp079.ZoneBlackoutEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp079.ZoneBlackoutEventArgs.html",
    "title": "Class ZoneBlackoutEventArgs | EXILED Docs",
    "keywords": "Class ZoneBlackoutEventArgs Contains all information before SCP-079 lockdowns a room. Inheritance System.Object ZoneBlackoutEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp079 Assembly : Exiled.Events.dll Syntax public class ZoneBlackoutEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ZoneBlackoutEventArgs(ReferenceHub, FacilityZone, Single, Single, Single, Scp079HudTranslation) Initializes a new instance of the ZoneBlackoutEventArgs class. Declaration public ZoneBlackoutEventArgs(ReferenceHub player, FacilityZone zone, float auxiliaryPowerCost, float blackoutduration, float cooldown, Scp079HudTranslation scp079HudTranslation) Parameters Type Name Description ReferenceHub player MapGeneration.FacilityZone zone System.Single auxiliaryPowerCost System.Single blackoutduration System.Single cooldown PlayerRoles.PlayableScps.Scp079.Scp079HudTranslation scp079HudTranslation Properties | Improve this Doc View Source AuxiliaryPowerCost Gets or sets the amount of auxiliary power required to lockdown a room. Declaration public float AuxiliaryPowerCost { get; set; } Property Value Type Description System.Single | Improve this Doc View Source BlackoutDuration Gets or sets the time of the blackout. Declaration public float BlackoutDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Cooldown Gets or sets the blackout cooldown duration. Declaration public float Cooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-079 can lockdown a room. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-079. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp079HudTranslation Gets the PlayerRoles.PlayableScps.Scp079.Scp079HudTranslation send back to player. Declaration public Scp079HudTranslation Scp079HudTranslation { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp079.Scp079HudTranslation | Improve this Doc View Source Zone Gets the MapGeneration.RoomIdentifier of the room that will be locked down. Declaration public ZoneType Zone { get; } Property Value Type Description ZoneType Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp096.AddingTargetEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp096.AddingTargetEventArgs.html",
    "title": "Class AddingTargetEventArgs | EXILED Docs",
    "keywords": "Class AddingTargetEventArgs Contains all information before adding a target to SCP-096. Inheritance System.Object AddingTargetEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp096 Assembly : Exiled.Events.dll Syntax public class AddingTargetEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source AddingTargetEventArgs(Player, Player, Boolean, Boolean) Initializes a new instance of the AddingTargetEventArgs class. Declaration public AddingTargetEventArgs(Player scp096, Player target, bool isForLook, bool isAllowed = true) Parameters Type Name Description Player scp096 Player target System.Boolean isForLook System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the target is allowed to be added. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLooking Gets a value indicating whether or not the target was being target cause of looking it's face. Declaration public bool IsLooking { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the Player that is controlling SCP-096. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Target Gets the Player being added as a target. Declaration public Player Target { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp096.CalmingDownEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp096.CalmingDownEventArgs.html",
    "title": "Class CalmingDownEventArgs | EXILED Docs",
    "keywords": "Class CalmingDownEventArgs Contains all information before SCP-096 calms down. Inheritance System.Object CalmingDownEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp096 Assembly : Exiled.Events.dll Syntax public class CalmingDownEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source CalmingDownEventArgs(Scp096Role, Player, Boolean, Boolean) Initializes a new instance of the CalmingDownEventArgs class. Declaration public CalmingDownEventArgs(Scp096Role scp096, Player player, bool shouldClearEnragedTimeLeft, bool isAllowed = true) Parameters Type Name Description PlayerRoles.PlayableScps.Scp096.Scp096Role scp096 The Scp096 instance. Player player The player who's controlling SCP-096. System.Boolean shouldClearEnragedTimeLeft System.Boolean isAllowed Indicates whether or not SCP-096 can calm down. Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-096 can be enraged. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-096. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp096 Gets the SCP-096 instance. Declaration public Scp096Role Scp096 { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp096.Scp096Role | Improve this Doc View Source ShouldClearEnragedTimeLeft Gets or sets a value indicating whether SCP-096 enrage time left should be cleared or not. Declaration public bool ShouldClearEnragedTimeLeft { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp096.ChargingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp096.ChargingEventArgs.html",
    "title": "Class ChargingEventArgs | EXILED Docs",
    "keywords": "Class ChargingEventArgs Contains all information before SCP-096 charges. Inheritance System.Object ChargingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp096 Assembly : Exiled.Events.dll Syntax public class ChargingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChargingEventArgs(Scp096Role, Player, Boolean) Initializes a new instance of the ChargingEventArgs class. Declaration public ChargingEventArgs(Scp096Role scp096, Player player, bool isAllowed = true) Parameters Type Name Description PlayerRoles.PlayableScps.Scp096.Scp096Role scp096 Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-096 can charge. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who is controlling SCP-096. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp096 Gets the SCP-096 instance. Declaration public Scp096Role Scp096 { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp096.Scp096Role Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp096.EnragingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp096.EnragingEventArgs.html",
    "title": "Class EnragingEventArgs | EXILED Docs",
    "keywords": "Class EnragingEventArgs Contains all information before SCP-096 gets enraged. Inheritance System.Object EnragingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp096 Assembly : Exiled.Events.dll Syntax public class EnragingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source EnragingEventArgs(Scp096Role, Player, Single, Boolean) Initializes a new instance of the EnragingEventArgs class. Declaration public EnragingEventArgs(Scp096Role scp096, Player player, float initialDuration, bool isAllowed = true) Parameters Type Name Description PlayerRoles.PlayableScps.Scp096.Scp096Role scp096 Player player System.Single initialDuration System.Boolean isAllowed Properties | Improve this Doc View Source InitialDuration Gets or sets the SCP-096 rage initial duration. Declaration public float InitialDuration { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-096 can be enraged. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-096. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp096 Gets the SCP-096 instance. Declaration public Scp096Role Scp096 { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp096.Scp096Role Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp096.html": {
    "href": "api/Exiled.Events.EventArgs.Scp096.html",
    "title": "Namespace Exiled.Events.EventArgs.Scp096 | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Scp096 Classes AddingTargetEventArgs Contains all information before adding a target to SCP-096. CalmingDownEventArgs Contains all information before SCP-096 calms down. ChargingEventArgs Contains all information before SCP-096 charges. EnragingEventArgs Contains all information before SCP-096 gets enraged. StartPryingGateEventArgs Contains all information before SCP-096 begins prying a gate open. TryingNotToCryEventArgs Contains all information before SCP-096 tries not to cry."
  },
  "api/Exiled.Events.EventArgs.Scp096.StartPryingGateEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp096.StartPryingGateEventArgs.html",
    "title": "Class StartPryingGateEventArgs | EXILED Docs",
    "keywords": "Class StartPryingGateEventArgs Contains all information before SCP-096 begins prying a gate open. Inheritance System.Object StartPryingGateEventArgs Implements IPlayerEvent IDeniableEvent IDoorEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp096 Assembly : Exiled.Events.dll Syntax public class StartPryingGateEventArgs : IPlayerEvent, IDeniableEvent, IDoorEvent, IExiledEvent Constructors | Improve this Doc View Source StartPryingGateEventArgs(Scp096Role, Player, PryableDoor, Boolean) Initializes a new instance of the StartPryingGateEventArgs class. Declaration public StartPryingGateEventArgs(Scp096Role scp096, Player player, PryableDoor gate, bool isAllowed = true) Parameters Type Name Description PlayerRoles.PlayableScps.Scp096.Scp096Role scp096 Player player Interactables.Interobjects.PryableDoor gate System.Boolean isAllowed Properties | Improve this Doc View Source Door Gets the Interactables.Interobjects.PryableDoor to be pried open. Declaration public Door Door { get; } Property Value Type Description Door | Improve this Doc View Source IsAllowed Gets or Sets a value indicating whether or not the gate can be pried open by SCP-096. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player that is controlling SCP-096. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp096 Gets the SCP-096 instance. Declaration public Scp096Role Scp096 { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp096.Scp096Role Implements IPlayerEvent IDeniableEvent IDoorEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp096.TryingNotToCryEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp096.TryingNotToCryEventArgs.html",
    "title": "Class TryingNotToCryEventArgs | EXILED Docs",
    "keywords": "Class TryingNotToCryEventArgs Contains all information before SCP-096 tries not to cry. Inheritance System.Object TryingNotToCryEventArgs Implements IPlayerEvent IDoorEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp096 Assembly : Exiled.Events.dll Syntax public class TryingNotToCryEventArgs : IPlayerEvent, IDoorEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source TryingNotToCryEventArgs(Scp096Role, Player, Boolean) Initializes a new instance of the TryingNotToCryEventArgs class. Declaration public TryingNotToCryEventArgs(Scp096Role scp096, Player player, bool isAllowed = true) Parameters Type Name Description PlayerRoles.PlayableScps.Scp096.Scp096Role scp096 Player player System.Boolean isAllowed Properties | Improve this Doc View Source Door Gets the Door to be cried on. the value can be null Declaration public Door Door { get; } Property Value Type Description Door | Improve this Doc View Source GameObject Gets the UnityEngine.GameObject to be cried on. Declaration public GameObject GameObject { get; } Property Value Type Description UnityEngine.GameObject | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-096 can try not to cry. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who is controlling SCP-096. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp096 Gets the SCP-096 instance. Declaration public Scp096Role Scp096 { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp096.Scp096Role Implements IPlayerEvent IDoorEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp106.html": {
    "href": "api/Exiled.Events.EventArgs.Scp106.html",
    "title": "Namespace Exiled.Events.EventArgs.Scp106 | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Scp106 Classes StalkingEventArgs Contains all information before SCP-106 use the stalk ability. TeleportingEventArgs Contains all information before SCP-106 teleports using the hunter atlas."
  },
  "api/Exiled.Events.EventArgs.Scp106.StalkingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp106.StalkingEventArgs.html",
    "title": "Class StalkingEventArgs | EXILED Docs",
    "keywords": "Class StalkingEventArgs Contains all information before SCP-106 use the stalk ability. Inheritance System.Object StalkingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp106 Assembly : Exiled.Events.dll Syntax public class StalkingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source StalkingEventArgs(Player, Scp106StalkAbility, Boolean) Initializes a new instance of the StalkingEventArgs class. Declaration public StalkingEventArgs(Player player, Scp106StalkAbility scp106StalkAbility, bool isAllowed = true) Parameters Type Name Description Player player PlayerRoles.PlayableScps.Scp106.Scp106StalkAbility scp106StalkAbility System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-106 can stalk. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MinimumVigor Gets or sets the required minimum vigor to stalk. Declaration public float MinimumVigor { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Player Gets the player who's controlling SCP-106. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp106StalkAbility Gets the Scp106StalkAbility . Declaration public Scp106StalkAbility Scp106StalkAbility { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp106.Scp106StalkAbility | Improve this Doc View Source Vigor Gets or sets the current vigor when SCP-106 starts to stalk. Declaration public float Vigor { get; set; } Property Value Type Description System.Single Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp106.TeleportingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp106.TeleportingEventArgs.html",
    "title": "Class TeleportingEventArgs | EXILED Docs",
    "keywords": "Class TeleportingEventArgs Contains all information before SCP-106 teleports using the hunter atlas. Inheritance System.Object TeleportingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp106 Assembly : Exiled.Events.dll Syntax public class TeleportingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source TeleportingEventArgs(Player, Vector3, Boolean) Initializes a new instance of the TeleportingEventArgs class. Declaration public TeleportingEventArgs(Player player, Vector3 position, bool isAllowed = true) Parameters Type Name Description Player player UnityEngine.Vector3 position System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-106 can teleport using a portal. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-106. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Position Gets or sets the teleporting position. Declaration public Vector3 Position { get; set; } Property Value Type Description UnityEngine.Vector3 Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp173.BlinkingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp173.BlinkingEventArgs.html",
    "title": "Class BlinkingEventArgs | EXILED Docs",
    "keywords": "Class BlinkingEventArgs Contains all information before a players blink near SCP-173. Inheritance System.Object BlinkingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp173 Assembly : Exiled.Events.dll Syntax public class BlinkingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source BlinkingEventArgs(Player, List<Player>, Vector3) Initializes a new instance of the BlinkingEventArgs class. Declaration public BlinkingEventArgs(Player player, List<Player> targets, Vector3 blinkPos) Parameters Type Name Description Player player System.Collections.Generic.List < Player > targets UnityEngine.Vector3 blinkPos Properties | Improve this Doc View Source BlinkCooldown Gets or sets how long the blink cooldown will last. Declaration public float BlinkCooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source BlinkPosition Gets or sets the location the player is blinking to. Declaration public Vector3 BlinkPosition { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player is allowed to blink. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who controlling SCP-173. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Targets Gets a System.Collections.Generic.IEnumerable<T> of players who have triggered SCP-173. Declaration public List<Player> Targets { get; } Property Value Type Description System.Collections.Generic.List < Player > Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp173.html": {
    "href": "api/Exiled.Events.EventArgs.Scp173.html",
    "title": "Namespace Exiled.Events.EventArgs.Scp173 | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Scp173 Classes BlinkingEventArgs Contains all information before a players blink near SCP-173. PlacingTantrumEventArgs Contains all information before the tantrum is placed. UsingBreakneckSpeedsEventArgs Contains all information before an Scp-173 uses breakneck speeds."
  },
  "api/Exiled.Events.EventArgs.Scp173.PlacingTantrumEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp173.PlacingTantrumEventArgs.html",
    "title": "Class PlacingTantrumEventArgs | EXILED Docs",
    "keywords": "Class PlacingTantrumEventArgs Contains all information before the tantrum is placed. Inheritance System.Object PlacingTantrumEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp173 Assembly : Exiled.Events.dll Syntax public class PlacingTantrumEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source PlacingTantrumEventArgs(Scp173Role, Player, TantrumEnvironmentalHazard, AbilityCooldown, Boolean) Initializes a new instance of the PlacingTantrumEventArgs class. Declaration public PlacingTantrumEventArgs(Scp173Role scp173, Player player, TantrumEnvironmentalHazard tantrumHazard, AbilityCooldown cooldown, bool isAllowed = true) Parameters Type Name Description PlayerRoles.PlayableScps.Scp173.Scp173Role scp173 Player player Hazards.TantrumEnvironmentalHazard tantrumHazard PlayerRoles.PlayableScps.Subroutines.AbilityCooldown cooldown System.Boolean isAllowed Properties | Improve this Doc View Source Cooldown Gets the tantrum PlayerRoles.PlayableScps.Subroutines.AbilityCooldown . Declaration public AbilityCooldown Cooldown { get; } Property Value Type Description PlayerRoles.PlayableScps.Subroutines.AbilityCooldown | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the tantrum can be placed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's placing the tantrum. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp173 Gets the player's PlayerRoles.PlayableScps.Scp173.Scp173Role instance. Declaration public Scp173Role Scp173 { get; } Property Value Type Description PlayerRoles.PlayableScps.Scp173.Scp173Role | Improve this Doc View Source TantrumHazard Gets the Hazards.TantrumEnvironmentalHazard . Declaration public TantrumEnvironmentalHazard TantrumHazard { get; } Property Value Type Description Hazards.TantrumEnvironmentalHazard Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp173.UsingBreakneckSpeedsEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp173.UsingBreakneckSpeedsEventArgs.html",
    "title": "Class UsingBreakneckSpeedsEventArgs | EXILED Docs",
    "keywords": "Class UsingBreakneckSpeedsEventArgs Contains all information before an Scp-173 uses breakneck speeds. Inheritance System.Object UsingBreakneckSpeedsEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp173 Assembly : Exiled.Events.dll Syntax public class UsingBreakneckSpeedsEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source UsingBreakneckSpeedsEventArgs(Player, Boolean) Initializes a new instance of the UsingBreakneckSpeedsEventArgs class. Declaration public UsingBreakneckSpeedsEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can use breakneck speeds. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's using breakneck speeds. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp244.DamagingScp244EventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp244.DamagingScp244EventArgs.html",
    "title": "Class DamagingScp244EventArgs | EXILED Docs",
    "keywords": "Class DamagingScp244EventArgs Contains all information before damage is dealt to a InventorySystem.Items.Usables.Scp244.Scp244DeployablePickup . Inheritance System.Object DamagingScp244EventArgs Implements IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp244 Assembly : Exiled.Events.dll Syntax public class DamagingScp244EventArgs : IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source DamagingScp244EventArgs(Scp244DeployablePickup, Single, DamageHandlerBase) Initializes a new instance of the DamagingScp244EventArgs class. Declaration public DamagingScp244EventArgs(Scp244DeployablePickup scp244, float damage, DamageHandlerBase handler) Parameters Type Name Description InventorySystem.Items.Usables.Scp244.Scp244DeployablePickup scp244 System.Single damage The damage being dealt. PlayerStatsSystem.DamageHandlerBase handler Properties | Improve this Doc View Source Handler Gets the Damage handler for this event. Declaration public DamageHandler Handler { get; } Property Value Type Description DamageHandler | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the Scp244Pickup can be broken. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pickup Gets the Scp244Pickup object that is damaged. Declaration public Scp244Pickup Pickup { get; } Property Value Type Description Scp244Pickup Implements IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp244.html": {
    "href": "api/Exiled.Events.EventArgs.Scp244.html",
    "title": "Namespace Exiled.Events.EventArgs.Scp244 | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Scp244 Classes DamagingScp244EventArgs Contains all information before damage is dealt to a InventorySystem.Items.Usables.Scp244.Scp244DeployablePickup . OpeningScp244EventArgs Contains all information before a player picks up an SCP-244. UsingScp244EventArgs Contains all information before radio battery charge is changed."
  },
  "api/Exiled.Events.EventArgs.Scp244.OpeningScp244EventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp244.OpeningScp244EventArgs.html",
    "title": "Class OpeningScp244EventArgs | EXILED Docs",
    "keywords": "Class OpeningScp244EventArgs Contains all information before a player picks up an SCP-244. Inheritance System.Object OpeningScp244EventArgs Implements IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp244 Assembly : Exiled.Events.dll Syntax public class OpeningScp244EventArgs : IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source OpeningScp244EventArgs(Scp244DeployablePickup) Initializes a new instance of the OpeningScp244EventArgs class. Declaration public OpeningScp244EventArgs(Scp244DeployablePickup pickup) Parameters Type Name Description InventorySystem.Items.Usables.Scp244.Scp244DeployablePickup pickup Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can interact with SCP-330. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pickup Gets a value representing the Scp244Pickup being picked up. Declaration public Scp244Pickup Pickup { get; } Property Value Type Description Scp244Pickup Implements IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp244.UsingScp244EventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp244.UsingScp244EventArgs.html",
    "title": "Class UsingScp244EventArgs | EXILED Docs",
    "keywords": "Class UsingScp244EventArgs Contains all information before radio battery charge is changed. Inheritance System.Object UsingScp244EventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp244 Assembly : Exiled.Events.dll Syntax public class UsingScp244EventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source UsingScp244EventArgs(Scp244Item, Player, Boolean) Initializes a new instance of the UsingScp244EventArgs class. Declaration public UsingScp244EventArgs(Scp244Item scp244, Player player, bool isAllowed = true) Parameters Type Name Description InventorySystem.Items.Usables.Scp244.Scp244Item scp244 Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the radio battery charge can be changed or not. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's using the radio. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp244 Gets the Scp244 instance. Declaration public Scp244 Scp244 { get; } Property Value Type Description Scp244 Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp330.DroppingScp330EventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp330.DroppingScp330EventArgs.html",
    "title": "Class DroppingScp330EventArgs | EXILED Docs",
    "keywords": "Class DroppingScp330EventArgs Contains all information before a player drop a candy of SCP-330. Inheritance System.Object DroppingScp330EventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp330 Assembly : Exiled.Events.dll Syntax public class DroppingScp330EventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source DroppingScp330EventArgs(Player, Scp330Bag, CandyKindID) Initializes a new instance of the DroppingScp330EventArgs class. Declaration public DroppingScp330EventArgs(Player player, Scp330Bag scp330, CandyKindID candy) Parameters Type Name Description Player player InventorySystem.Items.Usables.Scp330.Scp330Bag scp330 InventorySystem.Items.Usables.Scp330.CandyKindID candy Properties | Improve this Doc View Source Candy Gets or sets a value indicating whether or not the type of candy drop. Declaration public CandyKindID Candy { get; set; } Property Value Type Description InventorySystem.Items.Usables.Scp330.CandyKindID | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can interact with SCP-330. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's interacting with SCP-330. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp330 Gets or sets a value representing the Item being picked up. Declaration public Scp330 Scp330 { get; set; } Property Value Type Description Scp330 Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp330.EatenScp330EventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp330.EatenScp330EventArgs.html",
    "title": "Class EatenScp330EventArgs | EXILED Docs",
    "keywords": "Class EatenScp330EventArgs Contains all information after a player has eaten SCP-330. Inheritance System.Object EatenScp330EventArgs Implements IPlayerEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp330 Assembly : Exiled.Events.dll Syntax public class EatenScp330EventArgs : IPlayerEvent, IExiledEvent Constructors | Improve this Doc View Source EatenScp330EventArgs(Player, ICandy) Initializes a new instance of the EatenScp330EventArgs class. Declaration public EatenScp330EventArgs(Player player, ICandy candy) Parameters Type Name Description Player player . InventorySystem.Items.Usables.Scp330.ICandy candy . Properties | Improve this Doc View Source Candy Gets the InventorySystem.Items.Usables.Scp330.ICandy that was eaten by the player. Declaration public ICandy Candy { get; } Property Value Type Description InventorySystem.Items.Usables.Scp330.ICandy | Improve this Doc View Source Player Gets the player who's eaten SCP-330. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp330.EatingScp330EventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp330.EatingScp330EventArgs.html",
    "title": "Class EatingScp330EventArgs | EXILED Docs",
    "keywords": "Class EatingScp330EventArgs Contains all information before a player eats SCP-330. Inheritance System.Object EatingScp330EventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp330 Assembly : Exiled.Events.dll Syntax public class EatingScp330EventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source EatingScp330EventArgs(Player, ICandy, Boolean) Initializes a new instance of the EatingScp330EventArgs class. Declaration public EatingScp330EventArgs(Player player, ICandy candy, bool isAllowed = true) Parameters Type Name Description Player player Player . InventorySystem.Items.Usables.Scp330.ICandy candy InventorySystem.Items.Usables.Scp330.ICandy . System.Boolean isAllowed IsAllowed . Properties | Improve this Doc View Source Candy Gets the InventorySystem.Items.Usables.Scp330.ICandy that is being eaten by the player. Declaration public ICandy Candy { get; } Property Value Type Description InventorySystem.Items.Usables.Scp330.ICandy | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the player can eat SCP-330. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's eating SCP-330. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp330.html": {
    "href": "api/Exiled.Events.EventArgs.Scp330.html",
    "title": "Namespace Exiled.Events.EventArgs.Scp330 | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Scp330 Classes DroppingScp330EventArgs Contains all information before a player drop a candy of SCP-330. EatenScp330EventArgs Contains all information after a player has eaten SCP-330. EatingScp330EventArgs Contains all information before a player eats SCP-330. InteractingScp330EventArgs Contains all information before a player interacts with SCP-330."
  },
  "api/Exiled.Events.EventArgs.Scp330.InteractingScp330EventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp330.InteractingScp330EventArgs.html",
    "title": "Class InteractingScp330EventArgs | EXILED Docs",
    "keywords": "Class InteractingScp330EventArgs Contains all information before a player interacts with SCP-330. Inheritance System.Object InteractingScp330EventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp330 Assembly : Exiled.Events.dll Syntax public class InteractingScp330EventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source InteractingScp330EventArgs(Player, Int32) Initializes a new instance of the InteractingScp330EventArgs class. Declaration public InteractingScp330EventArgs(Player player, int usage) Parameters Type Name Description Player player System.Int32 usage Properties | Improve this Doc View Source Candy Gets or sets a value indicating the type of candy that will be received from this interaction. Declaration public CandyKindID Candy { get; set; } Property Value Type Description InventorySystem.Items.Usables.Scp330.CandyKindID | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the player is allowed to interact with SCP-330. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the Player triggering the event. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source ShouldSever Gets or sets a value indicating whether the player's hands should get severed. Declaration public bool ShouldSever { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source UsageCount Gets a value indicating how many times this player has interacted with SCP-330. Declaration public int UsageCount { get; } Property Value Type Description System.Int32 Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp914.ActivatingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp914.ActivatingEventArgs.html",
    "title": "Class ActivatingEventArgs | EXILED Docs",
    "keywords": "Class ActivatingEventArgs Contains all information before a player activates SCP-914. Inheritance System.Object ActivatingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp914 Assembly : Exiled.Events.dll Syntax public class ActivatingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ActivatingEventArgs(Player, Boolean) Initializes a new instance of the ActivatingEventArgs class. Declaration public ActivatingEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-914 can be activated. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's activating SCP-914. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp914.ChangingKnobSettingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp914.ChangingKnobSettingEventArgs.html",
    "title": "Class ChangingKnobSettingEventArgs | EXILED Docs",
    "keywords": "Class ChangingKnobSettingEventArgs Contains all information before a player changes the SCP-914 knob setting. Inheritance System.Object ChangingKnobSettingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp914 Assembly : Exiled.Events.dll Syntax public class ChangingKnobSettingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingKnobSettingEventArgs(Player, Scp914KnobSetting, Boolean) Initializes a new instance of the ChangingKnobSettingEventArgs class. Declaration public ChangingKnobSettingEventArgs(Player player, Scp914KnobSetting knobSetting, bool isAllowed = true) Parameters Type Name Description Player player Scp914.Scp914KnobSetting knobSetting System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-914's knob setting can be changed. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KnobSetting Gets or sets the SCP-914 knob setting. Declaration public Scp914KnobSetting KnobSetting { get; set; } Property Value Type Description Scp914.Scp914KnobSetting | Improve this Doc View Source Player Gets the player who's changing the SCP-914 knob setting. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp914.html": {
    "href": "api/Exiled.Events.EventArgs.Scp914.html",
    "title": "Namespace Exiled.Events.EventArgs.Scp914 | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Scp914 Classes ActivatingEventArgs Contains all information before a player activates SCP-914. ChangingKnobSettingEventArgs Contains all information before a player changes the SCP-914 knob setting. UpgradingInventoryItemEventArgs Contains all information before SCP-914 upgrades an item. UpgradingPickupEventArgs Contains all information before SCP-914 upgrades an item. UpgradingPlayerEventArgs Contains all information before SCP-914 upgrades a player."
  },
  "api/Exiled.Events.EventArgs.Scp914.UpgradingInventoryItemEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp914.UpgradingInventoryItemEventArgs.html",
    "title": "Class UpgradingInventoryItemEventArgs | EXILED Docs",
    "keywords": "Class UpgradingInventoryItemEventArgs Contains all information before SCP-914 upgrades an item. Inheritance System.Object UpgradingInventoryItemEventArgs UpgradingItemEventArgs Implements IPlayerEvent IItemEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp914 Assembly : Exiled.Events.dll Syntax public class UpgradingInventoryItemEventArgs : IPlayerEvent, IItemEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source UpgradingInventoryItemEventArgs(Player, ItemBase, Scp914KnobSetting, Boolean) Initializes a new instance of the UpgradingInventoryItemEventArgs class. Declaration public UpgradingInventoryItemEventArgs(Player player, ItemBase item, Scp914KnobSetting knobSetting, bool isAllowed = true) Parameters Type Name Description Player player InventorySystem.Items.ItemBase item Scp914.Scp914KnobSetting knobSetting System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the upgrade is successful. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Gets a list of items to be upgraded inside SCP-914. Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source KnobSetting Gets or sets SCP-914 working knob setting. Declaration public Scp914KnobSetting KnobSetting { get; set; } Property Value Type Description Scp914.Scp914KnobSetting | Improve this Doc View Source Player Gets the Player who owns the item to be upgraded. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Scp914 Gets the Scp914.Scp914Controller instance. Declaration public Scp914Controller Scp914 { get; } Property Value Type Description Scp914.Scp914Controller Implements IPlayerEvent IItemEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp914.UpgradingPickupEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp914.UpgradingPickupEventArgs.html",
    "title": "Class UpgradingPickupEventArgs | EXILED Docs",
    "keywords": "Class UpgradingPickupEventArgs Contains all information before SCP-914 upgrades an item. Inheritance System.Object UpgradingPickupEventArgs UpgradingEventArgs Implements IPickupEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp914 Assembly : Exiled.Events.dll Syntax public class UpgradingPickupEventArgs : IPickupEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source UpgradingPickupEventArgs(ItemPickupBase, Vector3, Scp914KnobSetting) Initializes a new instance of the UpgradingPickupEventArgs class. Declaration public UpgradingPickupEventArgs(ItemPickupBase item, Vector3 newPos, Scp914KnobSetting knobSetting) Parameters Type Name Description InventorySystem.Items.Pickups.ItemPickupBase item UnityEngine.Vector3 newPos Scp914.Scp914KnobSetting knobSetting Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the upgrade is successful. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KnobSetting Gets or sets SCP-914 working knob setting. Declaration public Scp914KnobSetting KnobSetting { get; set; } Property Value Type Description Scp914.Scp914KnobSetting | Improve this Doc View Source OutputPosition Gets or sets the position the item will be output to. Declaration public Vector3 OutputPosition { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Pickup Gets a list of items to be upgraded inside SCP-914. Declaration public Pickup Pickup { get; } Property Value Type Description Pickup | Improve this Doc View Source Scp914 Gets the Scp914.Scp914Controller instance. Declaration public Scp914Controller Scp914 { get; } Property Value Type Description Scp914.Scp914Controller Implements IPickupEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp914.UpgradingPlayerEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp914.UpgradingPlayerEventArgs.html",
    "title": "Class UpgradingPlayerEventArgs | EXILED Docs",
    "keywords": "Class UpgradingPlayerEventArgs Contains all information before SCP-914 upgrades a player. Inheritance System.Object UpgradingPlayerEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp914 Assembly : Exiled.Events.dll Syntax public class UpgradingPlayerEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source UpgradingPlayerEventArgs(Player, Boolean, Boolean, Scp914KnobSetting, Vector3) Initializes a new instance of the UpgradingPlayerEventArgs class. Declaration public UpgradingPlayerEventArgs(Player player, bool upgradeItems, bool heldOnly, Scp914KnobSetting setting, Vector3 moveVector) Parameters Type Name Description Player player The Player being upgraded. System.Boolean upgradeItems System.Boolean heldOnly Scp914.Scp914KnobSetting setting The Scp914.Scp914KnobSetting being used. UnityEngine.Vector3 moveVector Properties | Improve this Doc View Source HeldOnly Gets or sets a value indicating whether or not only held items are upgraded. Declaration public bool HeldOnly { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the event can continue. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source KnobSetting Gets or sets the Scp914.Scp914KnobSetting being used. Declaration public Scp914KnobSetting KnobSetting { get; set; } Property Value Type Description Scp914.Scp914KnobSetting | Improve this Doc View Source OutputPosition Gets or sets the location the player will be teleported to. Declaration public Vector3 OutputPosition { get; set; } Property Value Type Description UnityEngine.Vector3 | Improve this Doc View Source Player Gets the player being upgraded. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source UpgradeItems Gets or sets a value indicating whether or not items will be upgraded. Declaration public bool UpgradeItems { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp939.ChangingFocusEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp939.ChangingFocusEventArgs.html",
    "title": "Class ChangingFocusEventArgs | EXILED Docs",
    "keywords": "Class ChangingFocusEventArgs Contains all information before SCP-939 changes its target focus. Inheritance System.Object ChangingFocusEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp939 Assembly : Exiled.Events.dll Syntax public class ChangingFocusEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingFocusEventArgs(ReferenceHub, Boolean, Boolean) Initializes a new instance of the ChangingFocusEventArgs class. Declaration public ChangingFocusEventArgs(ReferenceHub player, bool state, bool isAllowed = true) Parameters Type Name Description ReferenceHub player System.Boolean state The state of the focus. System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-939 can focus. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-939. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source State Gets a value indicating whether or not SCP-939 is currently focusing or un-focusing. Declaration public bool State { get; } Property Value Type Description System.Boolean Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp939.html": {
    "href": "api/Exiled.Events.EventArgs.Scp939.html",
    "title": "Namespace Exiled.Events.EventArgs.Scp939 | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Scp939 Classes ChangingFocusEventArgs Contains all information before SCP-939 changes its target focus. LungingEventArgs Contains all information before SCP-939 uses its lunge ability. PlacingAmnesticCloudEventArgs Contains all information before SCP-939 uses its amnestic cloud ability. PlayingSoundEventArgs Contains all information before SCP-939 plays a sound effect. PlayingVoiceEventArgs Contains all information before SCP-939 plays a stolen player's voice. SavingVoiceEventArgs Contains all information before SCP-939 plays a stolen player's voice."
  },
  "api/Exiled.Events.EventArgs.Scp939.LungingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp939.LungingEventArgs.html",
    "title": "Class LungingEventArgs | EXILED Docs",
    "keywords": "Class LungingEventArgs Contains all information before SCP-939 uses its lunge ability. Inheritance System.Object LungingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp939 Assembly : Exiled.Events.dll Syntax public class LungingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source LungingEventArgs(ReferenceHub, Boolean) Initializes a new instance of the LungingEventArgs class. Declaration public LungingEventArgs(ReferenceHub player, bool isAllowed = true) Parameters Type Name Description ReferenceHub player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-939 can lunge. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-939. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp939.PlacingAmnesticCloudEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp939.PlacingAmnesticCloudEventArgs.html",
    "title": "Class PlacingAmnesticCloudEventArgs | EXILED Docs",
    "keywords": "Class PlacingAmnesticCloudEventArgs Contains all information before SCP-939 uses its amnestic cloud ability. Inheritance System.Object PlacingAmnesticCloudEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp939 Assembly : Exiled.Events.dll Syntax public class PlacingAmnesticCloudEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source PlacingAmnesticCloudEventArgs(ReferenceHub, Boolean, Boolean, Single, Boolean) Initializes a new instance of the PlacingAmnesticCloudEventArgs class. Declaration public PlacingAmnesticCloudEventArgs(ReferenceHub player, bool state, bool isReady, float cooldown, bool isAllowed = true) Parameters Type Name Description ReferenceHub player System.Boolean state Whether or not SCP-939 is attempting to place an amnestic cloud. System.Boolean isReady Whether or not the cooldown is ready. System.Single cooldown SCP-939's amnestic cloud cooldown. System.Boolean isAllowed Properties | Improve this Doc View Source Cooldown Gets or sets a value indicating SCP-939's amnestic cloud cooldown. Declaration public float Cooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-939 can place an amnestic cloud. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsReady Gets or sets a value indicating whether or not SCP-939's amnestic cloud cooldown is ready. Declaration public bool IsReady { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-939. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source State Gets a value indicating whether or not SCP-939 is ready to place its amnestic cloud. Declaration public bool State { get; } Property Value Type Description System.Boolean Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp939.PlayingSoundEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp939.PlayingSoundEventArgs.html",
    "title": "Class PlayingSoundEventArgs | EXILED Docs",
    "keywords": "Class PlayingSoundEventArgs Contains all information before SCP-939 plays a sound effect. Inheritance System.Object PlayingSoundEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp939 Assembly : Exiled.Events.dll Syntax public class PlayingSoundEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source PlayingSoundEventArgs(ReferenceHub, EnvMimicryOption, Boolean, Single, Boolean) Initializes a new instance of the PlayingSoundEventArgs class. Declaration public PlayingSoundEventArgs(ReferenceHub player, EnvMimicryOption sound, bool isReady, float cooldown, bool isAllowed = true) Parameters Type Name Description ReferenceHub player EnvMimicryOption sound The sound that is being played. System.Boolean isReady Whether or not SCP-939's environmental mimicry cooldown is ready. System.Single cooldown The cooldown of the environmental mimicry. System.Boolean isAllowed Properties | Improve this Doc View Source Cooldown Gets or sets a value indicating SCP-939's environmental mimicry cooldown. Declaration public float Cooldown { get; set; } Property Value Type Description System.Single | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-939 can play the sound. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean Remarks This will default to false if IsReady is false . In this case, setting it to true will override the cooldown. | Improve this Doc View Source IsReady Gets a value indicating whether or not SCP-939's environmental mimicry cooldown is ready. Declaration public bool IsReady { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-939. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Sound Gets the sound being played. Declaration public EnvMimicryOption Sound { get; } Property Value Type Description EnvMimicryOption Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp939.PlayingVoiceEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp939.PlayingVoiceEventArgs.html",
    "title": "Class PlayingVoiceEventArgs | EXILED Docs",
    "keywords": "Class PlayingVoiceEventArgs Contains all information before SCP-939 plays a stolen player's voice. Inheritance System.Object PlayingVoiceEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp939 Assembly : Exiled.Events.dll Syntax public class PlayingVoiceEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source PlayingVoiceEventArgs(ReferenceHub, ReferenceHub) Initializes a new instance of the PlayingVoiceEventArgs class. Declaration public PlayingVoiceEventArgs(ReferenceHub player, ReferenceHub stolen) Parameters Type Name Description ReferenceHub player ReferenceHub stolen The player who's voice was stolen. Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-939 can play the stolen voice. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-939. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Stolen Gets the players who's voice was stolen. Declaration public Player Stolen { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Scp939.SavingVoiceEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Scp939.SavingVoiceEventArgs.html",
    "title": "Class SavingVoiceEventArgs | EXILED Docs",
    "keywords": "Class SavingVoiceEventArgs Contains all information before SCP-939 plays a stolen player's voice. Inheritance System.Object SavingVoiceEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Scp939 Assembly : Exiled.Events.dll Syntax public class SavingVoiceEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source SavingVoiceEventArgs(ReferenceHub, ReferenceHub, Boolean) Initializes a new instance of the SavingVoiceEventArgs class. Declaration public SavingVoiceEventArgs(ReferenceHub player, ReferenceHub stolen, bool isAllowed = true) Parameters Type Name Description ReferenceHub player ReferenceHub stolen The player who's voice was stolen. System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not SCP-939 can play the stolen voice. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's controlling SCP-939. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Stolen Gets the players who's voice was stolen. Declaration public Player Stolen { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Server.AddingUnitNameEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Server.AddingUnitNameEventArgs.html",
    "title": "Class AddingUnitNameEventArgs | EXILED Docs",
    "keywords": "Class AddingUnitNameEventArgs Contains all information before adding a new unit name. Inheritance System.Object AddingUnitNameEventArgs Implements IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Server Assembly : Exiled.Events.dll Syntax public class AddingUnitNameEventArgs : IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source AddingUnitNameEventArgs(UnitNamingRule, Boolean) Initializes a new instance of the AddingUnitNameEventArgs class. Declaration public AddingUnitNameEventArgs(UnitNamingRule unitNamingRule, bool isAllowed = true) Parameters Type Name Description Respawning.NamingRules.UnitNamingRule unitNamingRule The generated unit name. System.Boolean isAllowed The value indicating whether or not the unit name can be added. Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the unit name can be added. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source UnitNamingRule Gets the generated UnitNamingRule . Declaration public UnitNamingRule UnitNamingRule { get; } Property Value Type Description Respawning.NamingRules.UnitNamingRule Implements IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Server.EndingRoundEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Server.EndingRoundEventArgs.html",
    "title": "Class EndingRoundEventArgs | EXILED Docs",
    "keywords": "Class EndingRoundEventArgs Contains all information before ending a round. Inheritance System.Object EndingRoundEventArgs Implements IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Server Assembly : Exiled.Events.dll Syntax public class EndingRoundEventArgs : IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source EndingRoundEventArgs(RoundSummary.LeadingTeam, RoundSummary.SumInfo_ClassList, Boolean) Initializes a new instance of the EndingRoundEventArgs class. Declaration public EndingRoundEventArgs(RoundSummary.LeadingTeam leadingTeam, RoundSummary.SumInfo_ClassList classList, bool isAllowed) Parameters Type Name Description RoundSummary.LeadingTeam leadingTeam RoundSummary.SumInfo_ClassList classList System.Boolean isAllowed Properties | Improve this Doc View Source ClassList Gets or sets the round summary class list. Declaration public RoundSummary.SumInfo_ClassList ClassList { get; set; } Property Value Type Description RoundSummary.SumInfo_ClassList | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether the event can be executed or not. Declaration [Obsolete(\"Use IsRoundEnded instead\", true)] public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRoundEnded Gets or sets a value indicating whether the round is going to finish or not. Declaration public bool IsRoundEnded { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LeadingTeam Gets or sets the leading team. Declaration public LeadingTeam LeadingTeam { get; set; } Property Value Type Description LeadingTeam Implements IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Server.html": {
    "href": "api/Exiled.Events.EventArgs.Server.html",
    "title": "Namespace Exiled.Events.EventArgs.Server | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Server Classes AddingUnitNameEventArgs Contains all information before adding a new unit name. EndingRoundEventArgs Contains all information before ending a round. ReportingCheaterEventArgs Contains all information before reporting a cheater. RespawningTeamEventArgs Contains all information before spawning a wave of Respawning.SpawnableTeamType.NineTailedFox or Respawning.SpawnableTeamType.ChaosInsurgency . RoundEndedEventArgs Contains all information after the end of a round."
  },
  "api/Exiled.Events.EventArgs.Server.ReportingCheaterEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Server.ReportingCheaterEventArgs.html",
    "title": "Class ReportingCheaterEventArgs | EXILED Docs",
    "keywords": "Class ReportingCheaterEventArgs Contains all information before reporting a cheater. Inheritance System.Object ReportingCheaterEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Server Assembly : Exiled.Events.dll Syntax public class ReportingCheaterEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ReportingCheaterEventArgs(Player, Player, Int32, String, Boolean) Initializes a new instance of the ReportingCheaterEventArgs class. Declaration public ReportingCheaterEventArgs(Player issuer, Player target, int serverPort, string reason, bool isAllowed = true) Parameters Type Name Description Player issuer Player target System.Int32 serverPort System.String reason System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the report will be sent. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the issuing player. Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source Reason Gets or sets the report reason. Declaration public string Reason { get; set; } Property Value Type Description System.String | Improve this Doc View Source ServerPort Gets the server id. Declaration public int ServerPort { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Target Gets the targeted player. Declaration public Player Target { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Server.RespawningTeamEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Server.RespawningTeamEventArgs.html",
    "title": "Class RespawningTeamEventArgs | EXILED Docs",
    "keywords": "Class RespawningTeamEventArgs Contains all information before spawning a wave of Respawning.SpawnableTeamType.NineTailedFox or Respawning.SpawnableTeamType.ChaosInsurgency . Inheritance System.Object RespawningTeamEventArgs Implements IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Server Assembly : Exiled.Events.dll Syntax public class RespawningTeamEventArgs : IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source RespawningTeamEventArgs(List<Player>, Int32, SpawnableTeamType, Boolean) Initializes a new instance of the RespawningTeamEventArgs class. Declaration public RespawningTeamEventArgs(List<Player> players, int maxRespawn, SpawnableTeamType nextKnownTeam, bool isAllowed = true) Parameters Type Name Description System.Collections.Generic.List < Player > players System.Int32 maxRespawn Respawning.SpawnableTeamType nextKnownTeam System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the spawn can occur. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MaximumRespawnAmount Gets or sets the maximum amount of respawnable players. Declaration public int MaximumRespawnAmount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source NextKnownTeam Gets or sets a value indicating what the next respawnable team is. Declaration public SpawnableTeamType NextKnownTeam { get; set; } Property Value Type Description Respawning.SpawnableTeamType | Improve this Doc View Source Players Gets the list of players that are going to be respawned. Declaration public List<Player> Players { get; } Property Value Type Description System.Collections.Generic.List < Player > | Improve this Doc View Source SpawnableTeam Gets the current spawnable team. Declaration public SpawnableTeamHandlerBase SpawnableTeam { get; } Property Value Type Description Respawning.SpawnableTeamHandlerBase Implements IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Server.RoundEndedEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Server.RoundEndedEventArgs.html",
    "title": "Class RoundEndedEventArgs | EXILED Docs",
    "keywords": "Class RoundEndedEventArgs Contains all information after the end of a round. Inheritance System.Object RoundEndedEventArgs Implements IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Server Assembly : Exiled.Events.dll Syntax public class RoundEndedEventArgs : IExiledEvent Constructors | Improve this Doc View Source RoundEndedEventArgs(LeadingTeam, RoundSummary.SumInfo_ClassList, Int32) Initializes a new instance of the RoundEndedEventArgs class. Declaration public RoundEndedEventArgs(LeadingTeam leadingTeam, RoundSummary.SumInfo_ClassList classList, int timeToRestart) Parameters Type Name Description LeadingTeam leadingTeam RoundSummary.SumInfo_ClassList classList System.Int32 timeToRestart Properties | Improve this Doc View Source ClassList Gets or sets the round summary class list. Declaration public RoundSummary.SumInfo_ClassList ClassList { get; set; } Property Value Type Description RoundSummary.SumInfo_ClassList | Improve this Doc View Source LeadingTeam Gets the leading team. Declaration public LeadingTeam LeadingTeam { get; } Property Value Type Description LeadingTeam | Improve this Doc View Source TimeToRestart Gets or sets the time to restart the next round. Declaration public int TimeToRestart { get; set; } Property Value Type Description System.Int32 Implements IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Warhead.ChangingLeverStatusEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Warhead.ChangingLeverStatusEventArgs.html",
    "title": "Class ChangingLeverStatusEventArgs | EXILED Docs",
    "keywords": "Class ChangingLeverStatusEventArgs Contains all information before a player changes the warhead lever status. Inheritance System.Object ChangingLeverStatusEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Warhead Assembly : Exiled.Events.dll Syntax public class ChangingLeverStatusEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source ChangingLeverStatusEventArgs(Player, Boolean, Boolean) Initializes a new instance of the ChangingLeverStatusEventArgs class. Declaration public ChangingLeverStatusEventArgs(Player player, bool curState, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean curState System.Boolean isAllowed Properties | Improve this Doc View Source CurrentState Gets a value indicating whether the lever is enabled. Declaration public bool CurrentState { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the lever status will change. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's changing the warhead status. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Warhead.DetonatingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Warhead.DetonatingEventArgs.html",
    "title": "Class DetonatingEventArgs | EXILED Docs",
    "keywords": "Class DetonatingEventArgs Contains all information before detonating the warhead. Inheritance System.Object DetonatingEventArgs Implements IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Warhead Assembly : Exiled.Events.dll Syntax public class DetonatingEventArgs : IDeniableEvent, IExiledEvent Properties | Improve this Doc View Source IsAllowed Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean Implements IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Warhead.html": {
    "href": "api/Exiled.Events.EventArgs.Warhead.html",
    "title": "Namespace Exiled.Events.EventArgs.Warhead | EXILED Docs",
    "keywords": "Namespace Exiled.Events.EventArgs.Warhead Classes ChangingLeverStatusEventArgs Contains all information before a player changes the warhead lever status. DetonatingEventArgs Contains all information before detonating the warhead. StartingEventArgs Contains all information before starting the warhead. StoppingEventArgs Contains all information before stopping the warhead."
  },
  "api/Exiled.Events.EventArgs.Warhead.StartingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Warhead.StartingEventArgs.html",
    "title": "Class StartingEventArgs | EXILED Docs",
    "keywords": "Class StartingEventArgs Contains all information before starting the warhead. Inheritance System.Object StoppingEventArgs StartingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members StoppingEventArgs.IsAllowed StoppingEventArgs.Player System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Warhead Assembly : Exiled.Events.dll Syntax public class StartingEventArgs : StoppingEventArgs, IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source StartingEventArgs(Player, Boolean) Initializes a new instance of the StartingEventArgs class. Declaration public StartingEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player The player who's going to start the warhead. System.Boolean isAllowed Indicating whether the event can be executed or not. Properties | Improve this Doc View Source IsAuto Gets a value indicating whether or not the nuke was set off automatically. Declaration public bool IsAuto { get; } Property Value Type Description System.Boolean Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.EventArgs.Warhead.StoppingEventArgs.html": {
    "href": "api/Exiled.Events.EventArgs.Warhead.StoppingEventArgs.html",
    "title": "Class StoppingEventArgs | EXILED Docs",
    "keywords": "Class StoppingEventArgs Contains all information before stopping the warhead. Inheritance System.Object StoppingEventArgs StartingEventArgs Implements IPlayerEvent IDeniableEvent IExiledEvent Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.EventArgs.Warhead Assembly : Exiled.Events.dll Syntax public class StoppingEventArgs : IPlayerEvent, IDeniableEvent, IExiledEvent Constructors | Improve this Doc View Source StoppingEventArgs(Player, Boolean) Initializes a new instance of the StoppingEventArgs class. Declaration public StoppingEventArgs(Player player, bool isAllowed = true) Parameters Type Name Description Player player System.Boolean isAllowed Properties | Improve this Doc View Source IsAllowed Gets or sets a value indicating whether or not the warhead can be stopped. Declaration public bool IsAllowed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Gets the player who's going to stop the warhead. Declaration public Player Player { get; } Property Value Type Description Player Implements IPlayerEvent IDeniableEvent IExiledEvent Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Events.CustomEventHandler.html": {
    "href": "api/Exiled.Events.Events.CustomEventHandler.html",
    "title": "Delegate Events.CustomEventHandler | EXILED Docs",
    "keywords": "Delegate Events.CustomEventHandler The custom System.EventHandler delegate, with empty parameters. Namespace : Exiled.Events Assembly : Exiled.Events.dll Syntax public delegate void CustomEventHandler(); Extension Methods Event.InvokeSafely(Events.CustomEventHandler) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Events.CustomEventHandler-1.html": {
    "href": "api/Exiled.Events.Events.CustomEventHandler-1.html",
    "title": "Delegate Events.CustomEventHandler<TInterface> | EXILED Docs",
    "keywords": "Delegate Events.CustomEventHandler<TInterface> The custom System.EventHandler delegate. Namespace : Exiled.Events Assembly : Exiled.Events.dll Syntax public delegate void CustomEventHandler<TInterface>(TInterface ev) where TInterface : IExiledEvent; Parameters Type Name Description TInterface ev The System.EventHandler`1 instance. Type Parameters Name Description TInterface The System.EventHandler`1 type. Extension Methods Event.InvokeSafely<T>(Events.CustomEventHandler<T>, T) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Events.html": {
    "href": "api/Exiled.Events.Events.html",
    "title": "Class Events | EXILED Docs",
    "keywords": "Class Events Patch and unpatch events into the game. Inheritance System.Object Plugin < Config > Events Implements IPlugin < Config > System.IComparable < IPlugin < IConfig >> Inherited Members Plugin<Config>.Assembly Plugin<Config>.Name Plugin<Config>.Prefix Plugin<Config>.Author Plugin<Config>.Version Plugin<Config>.RequiredExiledVersion Plugin<Config>.IgnoreRequiredVersionCheck Plugin<Config>.Commands Plugin<Config>.Config Plugin<Config>.InternalTranslation Plugin<Config>.ConfigPath Plugin<Config>.TranslationPath Plugin<Config>.OnReloaded() Plugin<Config>.OnRegisteringCommands() Plugin<Config>.OnUnregisteringCommands() Plugin<Config>.CompareTo(IPlugin<IConfig>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events Assembly : Exiled.Events.dll Syntax public sealed class Events : Plugin<Config>, IPlugin<Config>, IComparable<IPlugin<IConfig>> Properties | Improve this Doc View Source DisabledPatchesHashSet Gets a set of types and methods for which EXILED patches should not be run. Declaration public static HashSet<MethodBase> DisabledPatchesHashSet { get; } Property Value Type Description System.Collections.Generic.HashSet < System.Reflection.MethodBase > | Improve this Doc View Source Harmony Gets the instance. Declaration public Harmony Harmony { get; } Property Value Type Description Harmony | Improve this Doc View Source Instance Gets the plugin instance. Declaration public static Events Instance { get; } Property Value Type Description Events | Improve this Doc View Source Priority Declaration public override PluginPriority Priority { get; } Property Value Type Description PluginPriority Overrides Exiled.API.Features.Plugin<Exiled.Events.Config>.Priority Methods | Improve this Doc View Source OnDisabled() Declaration public override void OnDisabled() Overrides Exiled.API.Features.Plugin<Exiled.Events.Config>.OnDisabled() | Improve this Doc View Source OnEnabled() Declaration public override void OnEnabled() Overrides Exiled.API.Features.Plugin<Exiled.Events.Config>.OnEnabled() | Improve this Doc View Source Patch() Patches all events. Declaration public void Patch() | Improve this Doc View Source ReloadDisabledPatches() Checks the DisabledPatchesHashSet list and un-patches any methods that have been defined there. Once un-patching has been done, they can be patched by plugins, but will not be re-patchable by Exiled until a server reboot. Declaration public void ReloadDisabledPatches() | Improve this Doc View Source Unpatch() Unpatches all events. Declaration public void Unpatch() Implements IPlugin<TConfig> System.IComparable<T> Extension Methods ConfigManager.LoadConfig(IPlugin<IConfig>, Dictionary<String, Object>) ConfigManager.LoadDefaultConfig(IPlugin<IConfig>, Dictionary<String, Object>) ConfigManager.LoadSeparatedConfig(IPlugin<IConfig>) PathExtensions.GetPath(IPlugin<IConfig>) TranslationManager.LoadTranslation(IPlugin<IConfig>, Dictionary<String, Object>) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Extensions.Event.html": {
    "href": "api/Exiled.Events.Extensions.Event.html",
    "title": "Class Event | EXILED Docs",
    "keywords": "Class Event A set of tools to execute events safely and without breaking other plugins. Inheritance System.Object Event Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Extensions Assembly : Exiled.Events.dll Syntax public static class Event Methods | Improve this Doc View Source InvokeSafely(Events.CustomEventHandler) Executes all Events.CustomEventHandler listeners safely. Declaration public static void InvokeSafely(this Events.CustomEventHandler ev) Parameters Type Name Description Events.CustomEventHandler ev Source event. Exceptions Type Condition System.ArgumentNullException Event is null . | Improve this Doc View Source InvokeSafely<T>(Events.CustomEventHandler<T>, T) Executes all Events.CustomEventHandler<TInterface> listeners safely. Declaration public static bool InvokeSafely<T>(this Events.CustomEventHandler<T> ev, T arg) where T : IExiledEvent Parameters Type Name Description Events.CustomEventHandler <T> ev Source event. T arg Event arg. Returns Type Description System.Boolean Returns a value indicating whether the game code after the event is allowed to be executed or not. Type Parameters Name Description T Event arg type. Exceptions Type Condition System.ArgumentNullException Event or its arg is null ."
  },
  "api/Exiled.Events.Extensions.html": {
    "href": "api/Exiled.Events.Extensions.html",
    "title": "Namespace Exiled.Events.Extensions | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Extensions Classes Event A set of tools to execute events safely and without breaking other plugins."
  },
  "api/Exiled.Events.Handlers.Cassie.html": {
    "href": "api/Exiled.Events.Handlers.Cassie.html",
    "title": "Class Cassie | EXILED Docs",
    "keywords": "Class Cassie Cassie related events. Inheritance System.Object Cassie Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Cassie Methods | Improve this Doc View Source OnSendingCassieMessage(SendingCassieMessageEventArgs) Called before sending a cassie message. Declaration public static void OnSendingCassieMessage(SendingCassieMessageEventArgs ev) Parameters Type Name Description SendingCassieMessageEventArgs ev The SendingCassieMessageEventArgs instance. Events | Improve this Doc View Source SendingCassieMessage Invoked before sending a cassie message. Declaration public static event Events.CustomEventHandler<SendingCassieMessageEventArgs> SendingCassieMessage Event Type Type Description Events.CustomEventHandler < SendingCassieMessageEventArgs >"
  },
  "api/Exiled.Events.Handlers.html": {
    "href": "api/Exiled.Events.Handlers.html",
    "title": "Namespace Exiled.Events.Handlers | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Handlers Classes Cassie Cassie related events. Item Item related events. Map Map related events. Player Player related events. Scp049 SCP-049 related events. Scp079 SCP-079 related events. Scp096 SCP-096 related events. Scp106 SCP-106 related events. Scp173 SCP-173 related events. Scp244 Scp244 related events. Scp330 Scp330 related events. Scp914 Handles SCP-914 related events. Scp939 Handles SCP-939 related events. Server Server related events. Warhead Handles warhead related events."
  },
  "api/Exiled.Events.Handlers.Item.html": {
    "href": "api/Exiled.Events.Handlers.Item.html",
    "title": "Class Item | EXILED Docs",
    "keywords": "Class Item Item related events. Inheritance System.Object Item Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Item Methods | Improve this Doc View Source OnChangingAmmo(ChangingAmmoEventArgs) Called before the ammo of an firearm is changed. Declaration public static void OnChangingAmmo(ChangingAmmoEventArgs ev) Parameters Type Name Description ChangingAmmoEventArgs ev The ChangingAmmoEventArgs instance. | Improve this Doc View Source OnChangingAttachments(ChangingAttachmentsEventArgs) Called before item attachments are changed. Declaration public static void OnChangingAttachments(ChangingAttachmentsEventArgs ev) Parameters Type Name Description ChangingAttachmentsEventArgs ev The ChangingAttachmentsEventArgs instance. | Improve this Doc View Source OnChargingJailbird(ChargingJailbirdEventArgs) Called before a Jailbird is charged. Declaration public static void OnChargingJailbird(ChargingJailbirdEventArgs ev) Parameters Type Name Description ChargingJailbirdEventArgs ev The ChargingJailbirdEventArgs instance. | Improve this Doc View Source OnKeycardInteracting(KeycardInteractingEventArgs) Called before keycard interacts with a door. Declaration public static void OnKeycardInteracting(KeycardInteractingEventArgs ev) Parameters Type Name Description KeycardInteractingEventArgs ev The KeycardInteractingEventArgs instance. | Improve this Doc View Source OnReceivingPreference(ReceivingPreferenceEventArgs) Called before receiving a preference. Declaration public static void OnReceivingPreference(ReceivingPreferenceEventArgs ev) Parameters Type Name Description ReceivingPreferenceEventArgs ev The ReceivingPreferenceEventArgs instance. | Improve this Doc View Source OnSwinging(SwingingEventArgs) Called before a melee item is swung. Declaration public static void OnSwinging(SwingingEventArgs ev) Parameters Type Name Description SwingingEventArgs ev The SwingingEventArgs instance. Events | Improve this Doc View Source ChangingAmmo Invoked before the ammo of an firearm are changed. Declaration public static event Events.CustomEventHandler<ChangingAmmoEventArgs> ChangingAmmo Event Type Type Description Events.CustomEventHandler < ChangingAmmoEventArgs > | Improve this Doc View Source ChangingAttachments Invoked before item attachments are changed. Declaration public static event Events.CustomEventHandler<ChangingAttachmentsEventArgs> ChangingAttachments Event Type Type Description Events.CustomEventHandler < ChangingAttachmentsEventArgs > | Improve this Doc View Source ChargingJailbird Invoked before a Jailbird is charged. Declaration public static event Events.CustomEventHandler<ChargingJailbirdEventArgs> ChargingJailbird Event Type Type Description Events.CustomEventHandler < ChargingJailbirdEventArgs > | Improve this Doc View Source KeycardInteracting Invoked before a keycard interacts with a door. Declaration public static event Events.CustomEventHandler<KeycardInteractingEventArgs> KeycardInteracting Event Type Type Description Events.CustomEventHandler < KeycardInteractingEventArgs > | Improve this Doc View Source ReceivingPreference Invoked before receiving a preference. Declaration public static event Events.CustomEventHandler<ReceivingPreferenceEventArgs> ReceivingPreference Event Type Type Description Events.CustomEventHandler < ReceivingPreferenceEventArgs > | Improve this Doc View Source Swinging Invoked before a melee item is swung. Declaration public static event Events.CustomEventHandler<SwingingEventArgs> Swinging Event Type Type Description Events.CustomEventHandler < SwingingEventArgs >"
  },
  "api/Exiled.Events.Handlers.Map.html": {
    "href": "api/Exiled.Events.Handlers.Map.html",
    "title": "Class Map | EXILED Docs",
    "keywords": "Class Map Map related events. Inheritance System.Object Map Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Map Methods | Improve this Doc View Source OnAnnouncingDecontamination(AnnouncingDecontaminationEventArgs) Called before announcing the light containment zone decontamination. Declaration public static void OnAnnouncingDecontamination(AnnouncingDecontaminationEventArgs ev) Parameters Type Name Description AnnouncingDecontaminationEventArgs ev The AnnouncingDecontaminationEventArgs instance. | Improve this Doc View Source OnAnnouncingNtfEntrance(AnnouncingNtfEntranceEventArgs) Called before announcing the NTF entrance. Declaration public static void OnAnnouncingNtfEntrance(AnnouncingNtfEntranceEventArgs ev) Parameters Type Name Description AnnouncingNtfEntranceEventArgs ev The AnnouncingNtfEntranceEventArgs instance. | Improve this Doc View Source OnAnnouncingScpTermination(AnnouncingScpTerminationEventArgs) Called before announcing an SCP termination. Declaration public static void OnAnnouncingScpTermination(AnnouncingScpTerminationEventArgs ev) Parameters Type Name Description AnnouncingScpTerminationEventArgs ev The AnnouncingScpTerminationEventArgs instance. | Improve this Doc View Source OnChangedIntoGrenade(ChangedIntoGrenadeEventArgs) Called after the server changes a Pickup into a live Grenade when hit by an explosion. Declaration public static void OnChangedIntoGrenade(ChangedIntoGrenadeEventArgs ev) Parameters Type Name Description ChangedIntoGrenadeEventArgs ev The ChangingIntoGrenadeEventArgs instance. | Improve this Doc View Source OnChangingIntoGrenade(ChangingIntoGrenadeEventArgs) Called before the server changes a Pickup into a live Grenade when hit by an explosion. Declaration public static void OnChangingIntoGrenade(ChangingIntoGrenadeEventArgs ev) Parameters Type Name Description ChangingIntoGrenadeEventArgs ev The ChangingIntoGrenadeEventArgs instance. | Improve this Doc View Source OnDecontaminating(DecontaminatingEventArgs) Called before decontaminating the light containment zone. Declaration public static void OnDecontaminating(DecontaminatingEventArgs ev) Parameters Type Name Description DecontaminatingEventArgs ev The DecontaminatingEventArgs instance. | Improve this Doc View Source OnExplodingGrenade(ExplodingGrenadeEventArgs) Called before a grenade explodes. Declaration public static void OnExplodingGrenade(ExplodingGrenadeEventArgs ev) Parameters Type Name Description ExplodingGrenadeEventArgs ev The ExplodingGrenadeEventArgs instance. | Improve this Doc View Source OnGenerated() Called after the map is generated. Declaration public static void OnGenerated() | Improve this Doc View Source OnGeneratorActivated(GeneratorActivatedEventArgs) Called after a MapGeneration.Distributors.Scp079Generator has been activated. Declaration public static void OnGeneratorActivated(GeneratorActivatedEventArgs ev) Parameters Type Name Description GeneratorActivatedEventArgs ev The GeneratorActivatedEventArgs instance. | Improve this Doc View Source OnPlacingBlood(PlacingBloodEventArgs) Called before placing bloods. Declaration public static void OnPlacingBlood(PlacingBloodEventArgs ev) Parameters Type Name Description PlacingBloodEventArgs ev The PlacingBulletHole instance. | Improve this Doc View Source OnPlacingBulletHole(PlacingBulletHole) Called before placing a decal. Declaration public static void OnPlacingBulletHole(PlacingBulletHole ev) Parameters Type Name Description PlacingBulletHole ev The PlacingBulletHole instance. | Improve this Doc View Source OnSpawningItem(SpawningItemEventArgs) Called before an item is spawned. Declaration public static void OnSpawningItem(SpawningItemEventArgs ev) Parameters Type Name Description SpawningItemEventArgs ev The SpawningItemEventArgs instance. | Improve this Doc View Source OnTurningOffLights(TurningOffLightsEventArgs) Called before turning off lights. Declaration public static void OnTurningOffLights(TurningOffLightsEventArgs ev) Parameters Type Name Description TurningOffLightsEventArgs ev The TurningOffLightsEventArgs instance. Events | Improve this Doc View Source AnnouncingDecontamination Invoked before announcing the light containment zone decontamination. Declaration public static event Events.CustomEventHandler<AnnouncingDecontaminationEventArgs> AnnouncingDecontamination Event Type Type Description Events.CustomEventHandler < AnnouncingDecontaminationEventArgs > | Improve this Doc View Source AnnouncingNtfEntrance Invoked before announcing the NTF entrance. Declaration public static event Events.CustomEventHandler<AnnouncingNtfEntranceEventArgs> AnnouncingNtfEntrance Event Type Type Description Events.CustomEventHandler < AnnouncingNtfEntranceEventArgs > | Improve this Doc View Source AnnouncingScpTermination Invoked before announcing an SCP termination. Declaration public static event Events.CustomEventHandler<AnnouncingScpTerminationEventArgs> AnnouncingScpTermination Event Type Type Description Events.CustomEventHandler < AnnouncingScpTerminationEventArgs > | Improve this Doc View Source ChangedIntoGrenade Invoked after the server changes a pickup into a grenade, when triggered by an explosion. Declaration public static event Events.CustomEventHandler<ChangedIntoGrenadeEventArgs> ChangedIntoGrenade Event Type Type Description Events.CustomEventHandler < ChangedIntoGrenadeEventArgs > | Improve this Doc View Source ChangingIntoGrenade Invoked before the server changes a pickup into a grenade, when triggered by an explosion. Declaration public static event Events.CustomEventHandler<ChangingIntoGrenadeEventArgs> ChangingIntoGrenade Event Type Type Description Events.CustomEventHandler < ChangingIntoGrenadeEventArgs > | Improve this Doc View Source Decontaminating Invoked before decontaminating the light containment zone. Declaration public static event Events.CustomEventHandler<DecontaminatingEventArgs> Decontaminating Event Type Type Description Events.CustomEventHandler < DecontaminatingEventArgs > | Improve this Doc View Source ExplodingGrenade Invoked before a grenade explodes. Declaration public static event Events.CustomEventHandler<ExplodingGrenadeEventArgs> ExplodingGrenade Event Type Type Description Events.CustomEventHandler < ExplodingGrenadeEventArgs > | Improve this Doc View Source Generated Invoked after the map is generated. Declaration public static event Events.CustomEventHandler Generated Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source GeneratorActivated Invoked after a MapGeneration.Distributors.Scp079Generator has been activated. Declaration public static event Events.CustomEventHandler<GeneratorActivatedEventArgs> GeneratorActivated Event Type Type Description Events.CustomEventHandler < GeneratorActivatedEventArgs > | Improve this Doc View Source PlacingBlood Invoked before placing bloods. Declaration public static event Events.CustomEventHandler<PlacingBloodEventArgs> PlacingBlood Event Type Type Description Events.CustomEventHandler < PlacingBloodEventArgs > | Improve this Doc View Source PlacingBulletHole Invoked before placing decals. Declaration public static event Events.CustomEventHandler<PlacingBulletHole> PlacingBulletHole Event Type Type Description Events.CustomEventHandler < PlacingBulletHole > | Improve this Doc View Source SpawningItem Invoked before an item is spawned. Declaration public static event Events.CustomEventHandler<SpawningItemEventArgs> SpawningItem Event Type Type Description Events.CustomEventHandler < SpawningItemEventArgs > | Improve this Doc View Source TurningOffLights Invoked before turning off lights. Declaration public static event Events.CustomEventHandler<TurningOffLightsEventArgs> TurningOffLights Event Type Type Description Events.CustomEventHandler < TurningOffLightsEventArgs >"
  },
  "api/Exiled.Events.Handlers.Player.html": {
    "href": "api/Exiled.Events.Handlers.Player.html",
    "title": "Class Player | EXILED Docs",
    "keywords": "Class Player Player related events. Inheritance System.Object Player Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public class Player Methods | Improve this Doc View Source OnActivatingGenerator(ActivatingGeneratorEventArgs) Called before a Player turns on the generator by switching lever. Declaration public static void OnActivatingGenerator(ActivatingGeneratorEventArgs ev) Parameters Type Name Description ActivatingGeneratorEventArgs ev The ActivatingGeneratorEventArgs instance. | Improve this Doc View Source OnActivatingWarheadPanel(ActivatingWarheadPanelEventArgs) Called before activating the warhead panel. Declaration public static void OnActivatingWarheadPanel(ActivatingWarheadPanelEventArgs ev) Parameters Type Name Description ActivatingWarheadPanelEventArgs ev The ActivatingWarheadPanelEventArgs instance. | Improve this Doc View Source OnActivatingWorkstation(ActivatingWorkstationEventArgs) Called before activating a workstation. Declaration public static void OnActivatingWorkstation(ActivatingWorkstationEventArgs ev) Parameters Type Name Description ActivatingWorkstationEventArgs ev The ActivatingWorkstation instance. | Improve this Doc View Source OnAimingDownSight(AimingDownSightEventArgs) Called before a Player triggers an aim action. Declaration public static void OnAimingDownSight(AimingDownSightEventArgs ev) Parameters Type Name Description AimingDownSightEventArgs ev The AimingDownSightEventArgs instance. | Improve this Doc View Source OnBanned(BannedEventArgs) Called after a player has been banned from the server. Declaration public static void OnBanned(BannedEventArgs ev) Parameters Type Name Description BannedEventArgs ev The BannedEventArgs instance. | Improve this Doc View Source OnBanning(BanningEventArgs) Called before banning a Player from the server. Declaration public static void OnBanning(BanningEventArgs ev) Parameters Type Name Description BanningEventArgs ev The BanningEventArgs instance. | Improve this Doc View Source OnCancellingItemUse(CancellingItemUseEventArgs) Called after a Player has stopped the use of a medical item. Declaration public static void OnCancellingItemUse(CancellingItemUseEventArgs ev) Parameters Type Name Description CancellingItemUseEventArgs ev The CancellingItemUseEventArgs instance. | Improve this Doc View Source OnChangedItem(ChangedItemEventArgs) Called after a Player held item changes. Declaration public static void OnChangedItem(ChangedItemEventArgs ev) Parameters Type Name Description ChangedItemEventArgs ev The ChangedItemEventArgs instance. | Improve this Doc View Source OnChangingGroup(ChangingGroupEventArgs) Called before changing a Player group. Declaration public static void OnChangingGroup(ChangingGroupEventArgs ev) Parameters Type Name Description ChangingGroupEventArgs ev The ChangingGroupEventArgs instance. | Improve this Doc View Source OnChangingItem(ChangingItemEventArgs) Called before a Player held item changes. Declaration public static void OnChangingItem(ChangingItemEventArgs ev) Parameters Type Name Description ChangingItemEventArgs ev The ChangingItemEventArgs instance. | Improve this Doc View Source OnChangingMicroHIDState(ChangingMicroHIDStateEventArgs) Called before a Player MicroHID state is changed. Declaration public static void OnChangingMicroHIDState(ChangingMicroHIDStateEventArgs ev) Parameters Type Name Description ChangingMicroHIDStateEventArgs ev The ChangingMicroHIDStateEventArgs instance. | Improve this Doc View Source OnChangingMoveState(ChangingMoveStateEventArgs) Called before a Player changes move state. Declaration public static void OnChangingMoveState(ChangingMoveStateEventArgs ev) Parameters Type Name Description ChangingMoveStateEventArgs ev The ChangingMoveStateEventArgs instance. | Improve this Doc View Source OnChangingRadioPreset(ChangingRadioPresetEventArgs) Called before a user's radio preset is changed. Declaration public static void OnChangingRadioPreset(ChangingRadioPresetEventArgs ev) Parameters Type Name Description ChangingRadioPresetEventArgs ev The ChangingRadioPresetEventArgs instance. | Improve this Doc View Source OnChangingRole(ChangingRoleEventArgs) Called before changing a Player role. Declaration public static void OnChangingRole(ChangingRoleEventArgs ev) Parameters Type Name Description ChangingRoleEventArgs ev The ChangingRoleEventArgs instance. Remarks If IsAllowed is set to false when Escape is true , tickets will still be given to the escapee's team even though they will 'fail' to escape. Use Escaping to block escapes instead. | Improve this Doc View Source OnChangingSpectatedPlayer(ChangingSpectatedPlayerEventArgs) Called after a Player changes spectated player. Declaration public static void OnChangingSpectatedPlayer(ChangingSpectatedPlayerEventArgs ev) Parameters Type Name Description ChangingSpectatedPlayerEventArgs ev The ChangingSpectatedPlayerEventArgs instance. | Improve this Doc View Source OnClosingGenerator(ClosingGeneratorEventArgs) Called before a Player closes a generator. Declaration public static void OnClosingGenerator(ClosingGeneratorEventArgs ev) Parameters Type Name Description ClosingGeneratorEventArgs ev The ClosingGeneratorEventArgs instance. | Improve this Doc View Source OnDamagingShootingTarget(DamagingShootingTargetEventArgs) Called before a Player damages a shooting target. Declaration public static void OnDamagingShootingTarget(DamagingShootingTargetEventArgs ev) Parameters Type Name Description DamagingShootingTargetEventArgs ev The DamagingShootingTargetEventArgs instance. | Improve this Doc View Source OnDeactivatingWorkstation(DeactivatingWorkstationEventArgs) Called before deactivating a workstation. Declaration public static void OnDeactivatingWorkstation(DeactivatingWorkstationEventArgs ev) Parameters Type Name Description DeactivatingWorkstationEventArgs ev The DeactivatingWorkstationEventArgs instance. | Improve this Doc View Source OnDestroying(DestroyingEventArgs) Called before destroying a Player . Declaration public static void OnDestroying(DestroyingEventArgs ev) Parameters Type Name Description DestroyingEventArgs ev The DestroyingEventArgs instance. | Improve this Doc View Source OnDied(DiedEventArgs) Called after a Player died. Declaration public static void OnDied(DiedEventArgs ev) Parameters Type Name Description DiedEventArgs ev The DiedEventArgs instance. | Improve this Doc View Source OnDroppingAmmo(DroppingAmmoEventArgs) Called before dropping ammo. Declaration public static void OnDroppingAmmo(DroppingAmmoEventArgs ev) Parameters Type Name Description DroppingAmmoEventArgs ev The DroppingAmmoEventArgs instance. | Improve this Doc View Source OnDroppingItem(DroppingItemEventArgs) Called before dropping an item. Declaration public static void OnDroppingItem(DroppingItemEventArgs ev) Parameters Type Name Description DroppingItemEventArgs ev The DroppingItemEventArgs instance. | Improve this Doc View Source OnDroppingNothing(DroppingNothingEventArgs) Called before dropping a null item. Declaration public static void OnDroppingNothing(DroppingNothingEventArgs ev) Parameters Type Name Description DroppingNothingEventArgs ev The DroppingNothingEventArgs instance. | Improve this Doc View Source OnDryfiringWeapon(DryfiringWeaponEventArgs) Called before a Player dryfires a weapon. Declaration public static void OnDryfiringWeapon(DryfiringWeaponEventArgs ev) Parameters Type Name Description DryfiringWeaponEventArgs ev The DryfiringWeaponEventArgs instance. | Improve this Doc View Source OnDying(DyingEventArgs) Called before a Player dies. Declaration public static void OnDying(DyingEventArgs ev) Parameters Type Name Description DyingEventArgs ev The DyingEventArgs instance. | Improve this Doc View Source OnEnteringEnvironmentalHazard(EnteringEnvironmentalHazardEventArgs) Called before a Player enters in an environmental hazard. Declaration public static void OnEnteringEnvironmentalHazard(EnteringEnvironmentalHazardEventArgs ev) Parameters Type Name Description EnteringEnvironmentalHazardEventArgs ev The EnteringEnvironmentalHazardEventArgs instance. | Improve this Doc View Source OnEnteringKillerCollision(EnteringKillerCollisionEventArgs) Called before a Player enters killer collision. Declaration public static void OnEnteringKillerCollision(EnteringKillerCollisionEventArgs ev) Parameters Type Name Description EnteringKillerCollisionEventArgs ev The EnteringKillerCollisionEventArgs instance. | Improve this Doc View Source OnEnteringPocketDimension(EnteringPocketDimensionEventArgs) Called before a Player enters the pocket dimension. Declaration public static void OnEnteringPocketDimension(EnteringPocketDimensionEventArgs ev) Parameters Type Name Description EnteringPocketDimensionEventArgs ev The EnteringPocketDimensionEventArgs instance. | Improve this Doc View Source OnEscaping(EscapingEventArgs) Called before a Player escapes. Declaration public static void OnEscaping(EscapingEventArgs ev) Parameters Type Name Description EscapingEventArgs ev The EscapingEventArgs instance. | Improve this Doc View Source OnEscapingPocketDimension(EscapingPocketDimensionEventArgs) Called before a Player escapes the pocket dimension. Declaration public static void OnEscapingPocketDimension(EscapingPocketDimensionEventArgs ev) Parameters Type Name Description EscapingPocketDimensionEventArgs ev The EscapingPocketDimensionEventArgs instance. | Improve this Doc View Source OnExitingEnvironmentalHazard(ExitingEnvironmentalHazardEventArgs) Called before a Player exits from an environmental hazard. Declaration public static void OnExitingEnvironmentalHazard(ExitingEnvironmentalHazardEventArgs ev) Parameters Type Name Description ExitingEnvironmentalHazardEventArgs ev The ExitingEnvironmentalHazardEventArgs instance. | Improve this Doc View Source OnFailingEscapePocketDimension(FailingEscapePocketDimensionEventArgs) Called before a Player fails to escape the pocket dimension. Declaration public static void OnFailingEscapePocketDimension(FailingEscapePocketDimensionEventArgs ev) Parameters Type Name Description FailingEscapePocketDimensionEventArgs ev The FailingEscapePocketDimensionEventArgs instance. | Improve this Doc View Source OnFlippingCoin(FlippingCoinEventArgs) Called before a Player flips a coin. Declaration public static void OnFlippingCoin(FlippingCoinEventArgs ev) Parameters Type Name Description FlippingCoinEventArgs ev The FlippingCoinEventArgs instance. | Improve this Doc View Source OnHandcuffing(HandcuffingEventArgs) Called before handcuffing a Player . Declaration public static void OnHandcuffing(HandcuffingEventArgs ev) Parameters Type Name Description HandcuffingEventArgs ev The HandcuffingEventArgs instance. | Improve this Doc View Source OnHurting(HurtingEventArgs) Called before hurting a player. Declaration public static void OnHurting(HurtingEventArgs ev) Parameters Type Name Description HurtingEventArgs ev The HurtingEventArgs instance. | Improve this Doc View Source OnInteracted(InteractedEventArgs) Called after a Player interacted with something. Declaration public static void OnInteracted(InteractedEventArgs ev) Parameters Type Name Description InteractedEventArgs ev The InteractedEventArgs instance. | Improve this Doc View Source OnInteractingDoor(InteractingDoorEventArgs) Called before a Player interacts with a door. Declaration public static void OnInteractingDoor(InteractingDoorEventArgs ev) Parameters Type Name Description InteractingDoorEventArgs ev The InteractingDoorEventArgs instance. | Improve this Doc View Source OnInteractingElevator(InteractingElevatorEventArgs) Called before a Player interacts with an elevator. Declaration public static void OnInteractingElevator(InteractingElevatorEventArgs ev) Parameters Type Name Description InteractingElevatorEventArgs ev The InteractingElevatorEventArgs instance. | Improve this Doc View Source OnInteractingLocker(InteractingLockerEventArgs) Called before a Player interacts with a locker. Declaration public static void OnInteractingLocker(InteractingLockerEventArgs ev) Parameters Type Name Description InteractingLockerEventArgs ev The InteractingLockerEventArgs instance. | Improve this Doc View Source OnInteractingShootingTarget(InteractingShootingTargetEventArgs) Called before a Player interacts with a shooting target. Declaration public static void OnInteractingShootingTarget(InteractingShootingTargetEventArgs ev) Parameters Type Name Description InteractingShootingTargetEventArgs ev The InteractingShootingTargetEventArgs instance. | Improve this Doc View Source OnIntercomSpeaking(IntercomSpeakingEventArgs) Called before a Player begins speaking to the intercom. Declaration public static void OnIntercomSpeaking(IntercomSpeakingEventArgs ev) Parameters Type Name Description IntercomSpeakingEventArgs ev The IntercomSpeakingEventArgs instance. | Improve this Doc View Source OnIssuingMute(IssuingMuteEventArgs) Called before muting a user. Declaration public static void OnIssuingMute(IssuingMuteEventArgs ev) Parameters Type Name Description IssuingMuteEventArgs ev The IssuingMuteEventArgs instance. | Improve this Doc View Source OnItemAdded(ReferenceHub, ItemBase, ItemPickupBase) Called after a Player has an item added to their inventory. Declaration public static void OnItemAdded(ReferenceHub referenceHub, ItemBase itemBase, ItemPickupBase pickupBase) Parameters Type Name Description ReferenceHub referenceHub The ReferenceHub the item was added to. InventorySystem.Items.ItemBase itemBase The added InventorySystem.Items.ItemBase . InventorySystem.Items.Pickups.ItemPickupBase pickupBase The InventorySystem.Items.Pickups.ItemPickupBase the InventorySystem.Items.ItemBase originated from, or null if the item was not picked up. | Improve this Doc View Source OnJoined(JoinedEventArgs) Called after a Player has joined the server. Declaration public static void OnJoined(JoinedEventArgs ev) Parameters Type Name Description JoinedEventArgs ev The JoinedEventArgs instance. | Improve this Doc View Source OnJumping(JumpingEventArgs) Called before a Player jumps. Declaration public static void OnJumping(JumpingEventArgs ev) Parameters Type Name Description JumpingEventArgs ev The JumpingEventArgs instance. | Improve this Doc View Source OnKicked(KickedEventArgs) Called after a Player has been kicked from the server. Declaration public static void OnKicked(KickedEventArgs ev) Parameters Type Name Description KickedEventArgs ev The KickedEventArgs instance. | Improve this Doc View Source OnKicking(KickingEventArgs) Called before kicking a Player from the server. Declaration public static void OnKicking(KickingEventArgs ev) Parameters Type Name Description KickingEventArgs ev The KickingEventArgs instance. | Improve this Doc View Source OnKillPlayer(KillingPlayerEventArgs) Called before KillPlayer is called. Declaration public static void OnKillPlayer(KillingPlayerEventArgs ev) Parameters Type Name Description KillingPlayerEventArgs ev The KillingPlayerEventArgs event handler. | Improve this Doc View Source OnLanding(LandingEventArgs) Called after a Player lands. Declaration public static void OnLanding(LandingEventArgs ev) Parameters Type Name Description LandingEventArgs ev The LandingEventArgs instance. | Improve this Doc View Source OnLeft(LeftEventArgs) Called after a Player has left the server. Declaration public static void OnLeft(LeftEventArgs ev) Parameters Type Name Description LeftEventArgs ev The LeftEventArgs instance. | Improve this Doc View Source OnMakingNoise(AnimatedCharacterModel, Single) Called before a Player makes noise. Declaration public static void OnMakingNoise(AnimatedCharacterModel animatedCharacterModel, float distance) Parameters Type Name Description PlayerRoles.FirstPersonControl.Thirdperson.AnimatedCharacterModel animatedCharacterModel The PlayerRoles.FirstPersonControl.Thirdperson.AnimatedCharacterModel instance. System.Single distance The footsteps distance. | Improve this Doc View Source OnOpeningGenerator(OpeningGeneratorEventArgs) Called before a Player opens a generator. Declaration public static void OnOpeningGenerator(OpeningGeneratorEventArgs ev) Parameters Type Name Description OpeningGeneratorEventArgs ev The OpeningGeneratorEventArgs instance. | Improve this Doc View Source OnPickingUpItem(PickingUpItemEventArgs) Called before a Player picks up an item. Declaration public static void OnPickingUpItem(PickingUpItemEventArgs ev) Parameters Type Name Description PickingUpItemEventArgs ev The PickingUpItemEventArgs instance. | Improve this Doc View Source OnPlayerDamageWindow(DamagingWindowEventArgs) Called before a Player damage a window. Declaration public static void OnPlayerDamageWindow(DamagingWindowEventArgs ev) Parameters Type Name Description DamagingWindowEventArgs ev The DamagingWindowEventArgs instance. | Improve this Doc View Source OnPreAuthenticating(String, String, Int64, CentralAuthPreauthFlags, String, Byte[], ConnectionRequest, Int32) Called before pre-authenticating a Player . Declaration [PluginEvent(ServerEventType.PlayerPreauth)] public PreauthCancellationData OnPreAuthenticating(string userId, string ipAddress, long expiration, CentralAuthPreauthFlags flags, string country, byte[] signature, ConnectionRequest request, int readerStartPosition) Parameters Type Name Description System.String userId System.String ipAddress System.Int64 expiration CentralAuthPreauthFlags flags System.String country System.Byte [] signature LiteNetLib.ConnectionRequest request System.Int32 readerStartPosition Returns Type Description PluginAPI.Events.PreauthCancellationData Returns the PluginAPI.Events.PreauthCancellationData instance. | Improve this Doc View Source OnProcessingHotkey(ProcessingHotkeyEventArgs) Called before processing a hotkey. Declaration public static void OnProcessingHotkey(ProcessingHotkeyEventArgs ev) Parameters Type Name Description ProcessingHotkeyEventArgs ev The ProcessingHotkeyEventArgs instance. | Improve this Doc View Source OnReceivingEffect(ReceivingEffectEventArgs) Called before a Player receives a status effect. Declaration public static void OnReceivingEffect(ReceivingEffectEventArgs ev) Parameters Type Name Description ReceivingEffectEventArgs ev The ReceivingEffectEventArgs instance. | Improve this Doc View Source OnReloadingWeapon(ReloadingWeaponEventArgs) Called before a Player reloads a weapon. Declaration public static void OnReloadingWeapon(ReloadingWeaponEventArgs ev) Parameters Type Name Description ReloadingWeaponEventArgs ev The ReloadingWeaponEventArgs instance. | Improve this Doc View Source OnRemovingHandcuffs(RemovingHandcuffsEventArgs) Called before freeing a handcuffed Player . Declaration public static void OnRemovingHandcuffs(RemovingHandcuffsEventArgs ev) Parameters Type Name Description RemovingHandcuffsEventArgs ev The RemovingHandcuffsEventArgs instance. | Improve this Doc View Source OnReservedSlot(ReservedSlotsCheckEventArgs) Called before reserved slot is resolved for a Player . Declaration public static void OnReservedSlot(ReservedSlotsCheckEventArgs ev) Parameters Type Name Description ReservedSlotsCheckEventArgs ev The ReservedSlotsCheckEventArgs instance. | Improve this Doc View Source OnRevokingMute(RevokingMuteEventArgs) Called before unmuting a user. Declaration public static void OnRevokingMute(RevokingMuteEventArgs ev) Parameters Type Name Description RevokingMuteEventArgs ev The RevokingMuteEventArgs instance. | Improve this Doc View Source OnSearchPickupRequest(SearchingPickupEventArgs) Called before a Player searches a Pickup. Declaration public static void OnSearchPickupRequest(SearchingPickupEventArgs ev) Parameters Type Name Description SearchingPickupEventArgs ev The SearchingPickupEventArgs instance. | Improve this Doc View Source OnShooting(ShootingEventArgs) Called before a Player shoots a weapon. Declaration public static void OnShooting(ShootingEventArgs ev) Parameters Type Name Description ShootingEventArgs ev The ShootingEventArgs instance. | Improve this Doc View Source OnShot(ShotEventArgs) Called after a Player shoots a weapon. Declaration public static void OnShot(ShotEventArgs ev) Parameters Type Name Description ShotEventArgs ev The ShotEventArgs instance. | Improve this Doc View Source OnSpawned(SpawnedEventArgs) Called after a Player has spawned. Declaration public static void OnSpawned(SpawnedEventArgs ev) Parameters Type Name Description SpawnedEventArgs ev The SpawnedEventArgs instance. | Improve this Doc View Source OnSpawning(SpawningEventArgs) Called before spawning a Player . Declaration public static void OnSpawning(SpawningEventArgs ev) Parameters Type Name Description SpawningEventArgs ev The SpawningEventArgs instance. | Improve this Doc View Source OnSpawningRagdoll(SpawningRagdollEventArgs) Called before spawning a Player ragdoll. Declaration public static void OnSpawningRagdoll(SpawningRagdollEventArgs ev) Parameters Type Name Description SpawningRagdollEventArgs ev The SpawningRagdollEventArgs instance. | Improve this Doc View Source OnStayingOnEnvironmentalHazard(StayingOnEnvironmentalHazardEventArgs) Called when a Player stays on an environmental hazard. Declaration public static void OnStayingOnEnvironmentalHazard(StayingOnEnvironmentalHazardEventArgs ev) Parameters Type Name Description StayingOnEnvironmentalHazardEventArgs ev The StayingOnEnvironmentalHazardEventArgs instance. | Improve this Doc View Source OnStoppingGenerator(StoppingGeneratorEventArgs) Called before a Player turns off the generator by switching lever. Declaration public static void OnStoppingGenerator(StoppingGeneratorEventArgs ev) Parameters Type Name Description StoppingGeneratorEventArgs ev The StoppingGeneratorEventArgs instance. | Improve this Doc View Source OnThrowingProjectile(ThrownProjectileEventArgs) Called before throwing a grenade. Declaration public static void OnThrowingProjectile(ThrownProjectileEventArgs ev) Parameters Type Name Description ThrownProjectileEventArgs ev The ThrownProjectileEventArgs instance. | Improve this Doc View Source OnThrowingRequest(ThrowingRequestEventArgs) Called before receving a throwing request. Declaration public static void OnThrowingRequest(ThrowingRequestEventArgs ev) Parameters Type Name Description ThrowingRequestEventArgs ev The ThrowingRequestEventArgs instance. | Improve this Doc View Source OnTogglingFlashlight(TogglingFlashlightEventArgs) Called before a Player toggles the flashlight. Declaration public static void OnTogglingFlashlight(TogglingFlashlightEventArgs ev) Parameters Type Name Description TogglingFlashlightEventArgs ev The TogglingFlashlightEventArgs instance. | Improve this Doc View Source OnTogglingNoClip(TogglingNoClipEventArgs) Called before a Player toggles the NoClip mode. Declaration public static void OnTogglingNoClip(TogglingNoClipEventArgs ev) Parameters Type Name Description TogglingNoClipEventArgs ev The TogglingNoClipEventArgs instance. | Improve this Doc View Source OnTogglingOverwatch(TogglingOverwatchEventArgs) Called before a Player toggles overwatch. Declaration public static void OnTogglingOverwatch(TogglingOverwatchEventArgs ev) Parameters Type Name Description TogglingOverwatchEventArgs ev The TogglingOverwatchEventArgs instance. | Improve this Doc View Source OnTogglingWeaponFlashlight(TogglingWeaponFlashlightEventArgs) Called before a Player toggles the weapon's flashlight. Declaration public static void OnTogglingWeaponFlashlight(TogglingWeaponFlashlightEventArgs ev) Parameters Type Name Description TogglingWeaponFlashlightEventArgs ev The TogglingWeaponFlashlightEventArgs instance. | Improve this Doc View Source OnTransmitting(TransmittingEventArgs) Called after a Player presses the transmission key. Declaration public static void OnTransmitting(TransmittingEventArgs ev) Parameters Type Name Description TransmittingEventArgs ev The TransmittingEventArgs instance. | Improve this Doc View Source OnTriggeringTesla(TriggeringTeslaEventArgs) Called before a Player triggers a tesla. Declaration public static void OnTriggeringTesla(TriggeringTeslaEventArgs ev) Parameters Type Name Description TriggeringTeslaEventArgs ev The TriggeringTeslaEventArgs instance. | Improve this Doc View Source OnUnloadingWeapon(UnloadingWeaponEventArgs) Called before a Player unloads a weapon. Declaration public static void OnUnloadingWeapon(UnloadingWeaponEventArgs ev) Parameters Type Name Description UnloadingWeaponEventArgs ev The UnloadingWeaponEventArgs instance. | Improve this Doc View Source OnUnlockingGenerator(UnlockingGeneratorEventArgs) Called before a Player unlocks a generator. Declaration public static void OnUnlockingGenerator(UnlockingGeneratorEventArgs ev) Parameters Type Name Description UnlockingGeneratorEventArgs ev The UnlockingGeneratorEventArgs instance. | Improve this Doc View Source OnUsedItem(UsedItemEventArgs) Called after a Player used a medical item. Declaration public static void OnUsedItem(UsedItemEventArgs ev) Parameters Type Name Description UsedItemEventArgs ev The UsedItemEventArgs instance. | Improve this Doc View Source OnUsingItem(UsingItemEventArgs) Called before using a usable item. Declaration public static void OnUsingItem(UsingItemEventArgs ev) Parameters Type Name Description UsingItemEventArgs ev The UsingItemEventArgs instance. | Improve this Doc View Source OnUsingMicroHIDEnergy(UsingMicroHIDEnergyEventArgs) Called before a Player MicroHID energy is changed. Declaration public static void OnUsingMicroHIDEnergy(UsingMicroHIDEnergyEventArgs ev) Parameters Type Name Description UsingMicroHIDEnergyEventArgs ev The UsingMicroHIDEnergyEventArgs instance. | Improve this Doc View Source OnUsingRadioBattery(UsingRadioBatteryEventArgs) Called before a user's radio battery charge is changed. Declaration public static void OnUsingRadioBattery(UsingRadioBatteryEventArgs ev) Parameters Type Name Description UsingRadioBatteryEventArgs ev The UsingRadioBatteryEventArgs instance. | Improve this Doc View Source OnVerified(VerifiedEventArgs) Called after a Player has been verified. Declaration public static void OnVerified(VerifiedEventArgs ev) Parameters Type Name Description VerifiedEventArgs ev The VerifiedEventArgs instance. | Improve this Doc View Source OnVoiceChatting(VoiceChattingEventArgs) Invoked after a Player presses the voicechat key. Declaration public static void OnVoiceChatting(VoiceChattingEventArgs ev) Parameters Type Name Description VoiceChattingEventArgs ev The VoiceChattingEventArgs instance. Events | Improve this Doc View Source ActivatingGenerator Invoked before a Player turns on the generator by switching lever. Declaration public static event Events.CustomEventHandler<ActivatingGeneratorEventArgs> ActivatingGenerator Event Type Type Description Events.CustomEventHandler < ActivatingGeneratorEventArgs > | Improve this Doc View Source ActivatingWarheadPanel Invoked before activating the warhead panel. Declaration public static event Events.CustomEventHandler<ActivatingWarheadPanelEventArgs> ActivatingWarheadPanel Event Type Type Description Events.CustomEventHandler < ActivatingWarheadPanelEventArgs > | Improve this Doc View Source ActivatingWorkstation Invoked before activating a workstation. Declaration public static event Events.CustomEventHandler<ActivatingWorkstationEventArgs> ActivatingWorkstation Event Type Type Description Events.CustomEventHandler < ActivatingWorkstationEventArgs > | Improve this Doc View Source AimingDownSight Invoked before a Player triggers an aim action. Declaration public static event Events.CustomEventHandler<AimingDownSightEventArgs> AimingDownSight Event Type Type Description Events.CustomEventHandler < AimingDownSightEventArgs > | Improve this Doc View Source Banned Invoked after a Player has been banned from the server. Declaration public static event Events.CustomEventHandler<BannedEventArgs> Banned Event Type Type Description Events.CustomEventHandler < BannedEventArgs > | Improve this Doc View Source Banning Invoked before banning a Player from the server. Declaration public static event Events.CustomEventHandler<BanningEventArgs> Banning Event Type Type Description Events.CustomEventHandler < BanningEventArgs > | Improve this Doc View Source CancellingItemUse Invoked after a Player has stopped the use of a Usable . Declaration public static event Events.CustomEventHandler<CancellingItemUseEventArgs> CancellingItemUse Event Type Type Description Events.CustomEventHandler < CancellingItemUseEventArgs > | Improve this Doc View Source ChangedItem Invoked after a Player held Item changes. Declaration public static event Events.CustomEventHandler<ChangedItemEventArgs> ChangedItem Event Type Type Description Events.CustomEventHandler < ChangedItemEventArgs > | Improve this Doc View Source ChangingGroup Invoked before changing a Player group. Declaration public static event Events.CustomEventHandler<ChangingGroupEventArgs> ChangingGroup Event Type Type Description Events.CustomEventHandler < ChangingGroupEventArgs > | Improve this Doc View Source ChangingItem Invoked before a Player held Item changes. Declaration public static event Events.CustomEventHandler<ChangingItemEventArgs> ChangingItem Event Type Type Description Events.CustomEventHandler < ChangingItemEventArgs > | Improve this Doc View Source ChangingMicroHIDState Invoked before a Player MicroHID state is changed. Declaration public static event Events.CustomEventHandler<ChangingMicroHIDStateEventArgs> ChangingMicroHIDState Event Type Type Description Events.CustomEventHandler < ChangingMicroHIDStateEventArgs > | Improve this Doc View Source ChangingMoveState Invoked before a Player changes move state. Declaration public static event Events.CustomEventHandler<ChangingMoveStateEventArgs> ChangingMoveState Event Type Type Description Events.CustomEventHandler < ChangingMoveStateEventArgs > | Improve this Doc View Source ChangingRadioPreset Invoked before a user's radio preset is changed. Declaration public static event Events.CustomEventHandler<ChangingRadioPresetEventArgs> ChangingRadioPreset Event Type Type Description Events.CustomEventHandler < ChangingRadioPresetEventArgs > | Improve this Doc View Source ChangingRole Invoked before changing a Player role. Declaration public static event Events.CustomEventHandler<ChangingRoleEventArgs> ChangingRole Event Type Type Description Events.CustomEventHandler < ChangingRoleEventArgs > Remarks If IsAllowed is set to false when Escape is true , tickets will still be given to the escapee's team even though they will 'fail' to escape. Use Escaping to block escapes instead. | Improve this Doc View Source ChangingSpectatedPlayer Invoked after a Player changed spectated player. Declaration public static event Events.CustomEventHandler<ChangingSpectatedPlayerEventArgs> ChangingSpectatedPlayer Event Type Type Description Events.CustomEventHandler < ChangingSpectatedPlayerEventArgs > | Improve this Doc View Source ClosingGenerator Invoked before a Player closes a generator. Declaration public static event Events.CustomEventHandler<ClosingGeneratorEventArgs> ClosingGenerator Event Type Type Description Events.CustomEventHandler < ClosingGeneratorEventArgs > | Improve this Doc View Source DamagingShootingTarget Invoked before a Player damages a shooting target. Declaration public static event Events.CustomEventHandler<DamagingShootingTargetEventArgs> DamagingShootingTarget Event Type Type Description Events.CustomEventHandler < DamagingShootingTargetEventArgs > | Improve this Doc View Source DeactivatingWorkstation Invoked before deactivating a workstation. Declaration public static event Events.CustomEventHandler<DeactivatingWorkstationEventArgs> DeactivatingWorkstation Event Type Type Description Events.CustomEventHandler < DeactivatingWorkstationEventArgs > | Improve this Doc View Source Destroying Invoked before destroying a Player . Declaration public static event Events.CustomEventHandler<DestroyingEventArgs> Destroying Event Type Type Description Events.CustomEventHandler < DestroyingEventArgs > | Improve this Doc View Source Died Invoked after a Player died. Declaration public static event Events.CustomEventHandler<DiedEventArgs> Died Event Type Type Description Events.CustomEventHandler < DiedEventArgs > | Improve this Doc View Source DroppingAmmo Invoked before dropping ammo. Declaration public static event Events.CustomEventHandler<DroppingAmmoEventArgs> DroppingAmmo Event Type Type Description Events.CustomEventHandler < DroppingAmmoEventArgs > | Improve this Doc View Source DroppingItem Invoked before dropping an Item . Declaration public static event Events.CustomEventHandler<DroppingItemEventArgs> DroppingItem Event Type Type Description Events.CustomEventHandler < DroppingItemEventArgs > | Improve this Doc View Source DroppingNothing Invoked before dropping a null Item . Declaration public static event Events.CustomEventHandler<DroppingNothingEventArgs> DroppingNothing Event Type Type Description Events.CustomEventHandler < DroppingNothingEventArgs > | Improve this Doc View Source DryfiringWeapon Invoked before a Player dryfires a weapon. Declaration public static event Events.CustomEventHandler<DryfiringWeaponEventArgs> DryfiringWeapon Event Type Type Description Events.CustomEventHandler < DryfiringWeaponEventArgs > | Improve this Doc View Source Dying Invoked before a Player dies. Declaration public static event Events.CustomEventHandler<DyingEventArgs> Dying Event Type Type Description Events.CustomEventHandler < DyingEventArgs > | Improve this Doc View Source EnteringEnvironmentalHazard Invoked before a Player enters in an environmental hazard. Declaration public static event Events.CustomEventHandler<EnteringEnvironmentalHazardEventArgs> EnteringEnvironmentalHazard Event Type Type Description Events.CustomEventHandler < EnteringEnvironmentalHazardEventArgs > | Improve this Doc View Source EnteringKillerCollision Invoked before a Player enters killer collision. Declaration public static event Events.CustomEventHandler<EnteringKillerCollisionEventArgs> EnteringKillerCollision Event Type Type Description Events.CustomEventHandler < EnteringKillerCollisionEventArgs > | Improve this Doc View Source EnteringPocketDimension Invoked before a Player enters the pocket dimension. Declaration public static event Events.CustomEventHandler<EnteringPocketDimensionEventArgs> EnteringPocketDimension Event Type Type Description Events.CustomEventHandler < EnteringPocketDimensionEventArgs > | Improve this Doc View Source Escaping Invoked before a Player escapes. Declaration public static event Events.CustomEventHandler<EscapingEventArgs> Escaping Event Type Type Description Events.CustomEventHandler < EscapingEventArgs > | Improve this Doc View Source EscapingPocketDimension Invoked before a Player escapes the pocket dimension. Declaration public static event Events.CustomEventHandler<EscapingPocketDimensionEventArgs> EscapingPocketDimension Event Type Type Description Events.CustomEventHandler < EscapingPocketDimensionEventArgs > | Improve this Doc View Source ExitingEnvironmentalHazard Invoked when a Player exists from an environmental hazard. Declaration public static event Events.CustomEventHandler<ExitingEnvironmentalHazardEventArgs> ExitingEnvironmentalHazard Event Type Type Description Events.CustomEventHandler < ExitingEnvironmentalHazardEventArgs > | Improve this Doc View Source FailingEscapePocketDimension Invoked before a Player fails to escape the pocket dimension. Declaration public static event Events.CustomEventHandler<FailingEscapePocketDimensionEventArgs> FailingEscapePocketDimension Event Type Type Description Events.CustomEventHandler < FailingEscapePocketDimensionEventArgs > | Improve this Doc View Source FlippingCoin Invoked before a Player flips a coin. Declaration public static event Events.CustomEventHandler<FlippingCoinEventArgs> FlippingCoin Event Type Type Description Events.CustomEventHandler < FlippingCoinEventArgs > | Improve this Doc View Source Handcuffing Invoked before handcuffing a Player . Declaration public static event Events.CustomEventHandler<HandcuffingEventArgs> Handcuffing Event Type Type Description Events.CustomEventHandler < HandcuffingEventArgs > | Improve this Doc View Source Hurting Invoked before hurting a Player . Declaration public static event Events.CustomEventHandler<HurtingEventArgs> Hurting Event Type Type Description Events.CustomEventHandler < HurtingEventArgs > | Improve this Doc View Source Interacted Invoked after a Player interacted with something. Declaration public static event Events.CustomEventHandler<InteractedEventArgs> Interacted Event Type Type Description Events.CustomEventHandler < InteractedEventArgs > | Improve this Doc View Source InteractingDoor Invoked before a Player interacts with a door. Declaration public static event Events.CustomEventHandler<InteractingDoorEventArgs> InteractingDoor Event Type Type Description Events.CustomEventHandler < InteractingDoorEventArgs > | Improve this Doc View Source InteractingElevator Invoked before a Player interacts with an elevator. Declaration public static event Events.CustomEventHandler<InteractingElevatorEventArgs> InteractingElevator Event Type Type Description Events.CustomEventHandler < InteractingElevatorEventArgs > | Improve this Doc View Source InteractingLocker Invoked before a Player interacts with a locker. Declaration public static event Events.CustomEventHandler<InteractingLockerEventArgs> InteractingLocker Event Type Type Description Events.CustomEventHandler < InteractingLockerEventArgs > | Improve this Doc View Source InteractingShootingTarget Invoked before a Player interacts with a shooting target. Declaration public static event Events.CustomEventHandler<InteractingShootingTargetEventArgs> InteractingShootingTarget Event Type Type Description Events.CustomEventHandler < InteractingShootingTargetEventArgs > | Improve this Doc View Source IntercomSpeaking Invoked before a Player begins speaking to the intercom. Declaration public static event Events.CustomEventHandler<IntercomSpeakingEventArgs> IntercomSpeaking Event Type Type Description Events.CustomEventHandler < IntercomSpeakingEventArgs > | Improve this Doc View Source IssuingMute Invoked before muting a user. Declaration public static event Events.CustomEventHandler<IssuingMuteEventArgs> IssuingMute Event Type Type Description Events.CustomEventHandler < IssuingMuteEventArgs > | Improve this Doc View Source ItemAdded Invoked after a Player has an item added to their inventory. Declaration public static event Events.CustomEventHandler<ItemAddedEventArgs> ItemAdded Event Type Type Description Events.CustomEventHandler < ItemAddedEventArgs > | Improve this Doc View Source Joined Invoked after a Player has joined the server. Declaration public static event Events.CustomEventHandler<JoinedEventArgs> Joined Event Type Type Description Events.CustomEventHandler < JoinedEventArgs > | Improve this Doc View Source Jumping Invoked before a Player jumps. Declaration public static event Events.CustomEventHandler<JumpingEventArgs> Jumping Event Type Type Description Events.CustomEventHandler < JumpingEventArgs > | Improve this Doc View Source Kicked Invoked after a Player has been kicked from the server. Declaration public static event Events.CustomEventHandler<KickedEventArgs> Kicked Event Type Type Description Events.CustomEventHandler < KickedEventArgs > | Improve this Doc View Source Kicking Invoked before kicking a Player from the server. Declaration public static event Events.CustomEventHandler<KickingEventArgs> Kicking Event Type Type Description Events.CustomEventHandler < KickingEventArgs > | Improve this Doc View Source KillingPlayer Invoked before KillPlayer is called. Declaration public static event Events.CustomEventHandler<KillingPlayerEventArgs> KillingPlayer Event Type Type Description Events.CustomEventHandler < KillingPlayerEventArgs > | Improve this Doc View Source Landing Invoked after a Player lands. Declaration public static event Events.CustomEventHandler<LandingEventArgs> Landing Event Type Type Description Events.CustomEventHandler < LandingEventArgs > | Improve this Doc View Source Left Invoked after a Player has left the server. Declaration public static event Events.CustomEventHandler<LeftEventArgs> Left Event Type Type Description Events.CustomEventHandler < LeftEventArgs > | Improve this Doc View Source MakingNoise Invoked before a Player makes noise. Declaration public static event Events.CustomEventHandler<MakingNoiseEventArgs> MakingNoise Event Type Type Description Events.CustomEventHandler < MakingNoiseEventArgs > | Improve this Doc View Source OpeningGenerator Invoked before a Player opens a generator. Declaration public static event Events.CustomEventHandler<OpeningGeneratorEventArgs> OpeningGenerator Event Type Type Description Events.CustomEventHandler < OpeningGeneratorEventArgs > | Improve this Doc View Source PickingUpItem Invoked before picking up an Item . Declaration public static event Events.CustomEventHandler<PickingUpItemEventArgs> PickingUpItem Event Type Type Description Events.CustomEventHandler < PickingUpItemEventArgs > | Improve this Doc View Source PlayerDamageWindow Invoked before a Player damage a Window. Declaration public static event Events.CustomEventHandler<DamagingWindowEventArgs> PlayerDamageWindow Event Type Type Description Events.CustomEventHandler < DamagingWindowEventArgs > | Improve this Doc View Source PreAuthenticating Invoked before authenticating a Player . Declaration public static event Events.CustomEventHandler<PreAuthenticatingEventArgs> PreAuthenticating Event Type Type Description Events.CustomEventHandler < PreAuthenticatingEventArgs > | Improve this Doc View Source ProcessingHotkey Called before processing a hotkey. Declaration public static event Events.CustomEventHandler<ProcessingHotkeyEventArgs> ProcessingHotkey Event Type Type Description Events.CustomEventHandler < ProcessingHotkeyEventArgs > | Improve this Doc View Source ReceivingEffect Invoked before a Player receives a status effect. Declaration public static event Events.CustomEventHandler<ReceivingEffectEventArgs> ReceivingEffect Event Type Type Description Events.CustomEventHandler < ReceivingEffectEventArgs > | Improve this Doc View Source ReloadingWeapon Invoked before a Player reloads a weapon. Declaration public static event Events.CustomEventHandler<ReloadingWeaponEventArgs> ReloadingWeapon Event Type Type Description Events.CustomEventHandler < ReloadingWeaponEventArgs > | Improve this Doc View Source RemovingHandcuffs Invoked before freeing a handcuffed Player . Declaration public static event Events.CustomEventHandler<RemovingHandcuffsEventArgs> RemovingHandcuffs Event Type Type Description Events.CustomEventHandler < RemovingHandcuffsEventArgs > | Improve this Doc View Source ReservedSlot Invoked before reserved slot is finalized for a Player . Declaration public static event Events.CustomEventHandler<ReservedSlotsCheckEventArgs> ReservedSlot Event Type Type Description Events.CustomEventHandler < ReservedSlotsCheckEventArgs > | Improve this Doc View Source RevokingMute Invoked before unmuting a user. Declaration public static event Events.CustomEventHandler<RevokingMuteEventArgs> RevokingMute Event Type Type Description Events.CustomEventHandler < RevokingMuteEventArgs > | Improve this Doc View Source SearchingPickup Invoked before a Player searches a Pickup. Declaration public static event Events.CustomEventHandler<SearchingPickupEventArgs> SearchingPickup Event Type Type Description Events.CustomEventHandler < SearchingPickupEventArgs > | Improve this Doc View Source Shooting Invoked before a Player shoots a weapon. Declaration public static event Events.CustomEventHandler<ShootingEventArgs> Shooting Event Type Type Description Events.CustomEventHandler < ShootingEventArgs > | Improve this Doc View Source Shot Invoked after a Player gets shot. Declaration public static event Events.CustomEventHandler<ShotEventArgs> Shot Event Type Type Description Events.CustomEventHandler < ShotEventArgs > | Improve this Doc View Source Spawned Invoked after a Player has spawned. Declaration public static event Events.CustomEventHandler<SpawnedEventArgs> Spawned Event Type Type Description Events.CustomEventHandler < SpawnedEventArgs > | Improve this Doc View Source Spawning Invoked before spawning a Player . Declaration public static event Events.CustomEventHandler<SpawningEventArgs> Spawning Event Type Type Description Events.CustomEventHandler < SpawningEventArgs > | Improve this Doc View Source SpawningRagdoll Invoked before spawning a Player Ragdoll . Declaration public static event Events.CustomEventHandler<SpawningRagdollEventArgs> SpawningRagdoll Event Type Type Description Events.CustomEventHandler < SpawningRagdollEventArgs > | Improve this Doc View Source StayingOnEnvironmentalHazard Invoked when a Player stays on an environmental hazard. Declaration public static event Events.CustomEventHandler<StayingOnEnvironmentalHazardEventArgs> StayingOnEnvironmentalHazard Event Type Type Description Events.CustomEventHandler < StayingOnEnvironmentalHazardEventArgs > | Improve this Doc View Source StoppingGenerator Invoked before a Player turns off the generator by switching lever. Declaration public static event Events.CustomEventHandler<StoppingGeneratorEventArgs> StoppingGenerator Event Type Type Description Events.CustomEventHandler < StoppingGeneratorEventArgs > | Improve this Doc View Source ThrowingRequest Invoked before receving a throwing request an Throwable . Declaration public static event Events.CustomEventHandler<ThrowingRequestEventArgs> ThrowingRequest Event Type Type Description Events.CustomEventHandler < ThrowingRequestEventArgs > | Improve this Doc View Source ThrownProjectile Invoked afer throwing an Throwable . Declaration public static event Events.CustomEventHandler<ThrownProjectileEventArgs> ThrownProjectile Event Type Type Description Events.CustomEventHandler < ThrownProjectileEventArgs > | Improve this Doc View Source TogglingFlashlight Invoked before a Player toggles the flashlight. Declaration public static event Events.CustomEventHandler<TogglingFlashlightEventArgs> TogglingFlashlight Event Type Type Description Events.CustomEventHandler < TogglingFlashlightEventArgs > | Improve this Doc View Source TogglingNoClip Invoked before a Player toggles the NoClip mode. Declaration public static event Events.CustomEventHandler<TogglingNoClipEventArgs> TogglingNoClip Event Type Type Description Events.CustomEventHandler < TogglingNoClipEventArgs > | Improve this Doc View Source TogglingOverwatch Invoked before a Player toggles overwatch. Declaration public static event Events.CustomEventHandler<TogglingOverwatchEventArgs> TogglingOverwatch Event Type Type Description Events.CustomEventHandler < TogglingOverwatchEventArgs > | Improve this Doc View Source TogglingWeaponFlashlight Invoked before a Player toggles the weapon's flashlight. Declaration public static event Events.CustomEventHandler<TogglingWeaponFlashlightEventArgs> TogglingWeaponFlashlight Event Type Type Description Events.CustomEventHandler < TogglingWeaponFlashlightEventArgs > | Improve this Doc View Source Transmitting Invoked after a Player presses the transmission key. Declaration public static event Events.CustomEventHandler<TransmittingEventArgs> Transmitting Event Type Type Description Events.CustomEventHandler < TransmittingEventArgs > | Improve this Doc View Source TriggeringTesla Invoked before a Player triggers a tesla gate. Declaration public static event Events.CustomEventHandler<TriggeringTeslaEventArgs> TriggeringTesla Event Type Type Description Events.CustomEventHandler < TriggeringTeslaEventArgs > | Improve this Doc View Source UnloadingWeapon Invoked before a Player unloads a weapon. Declaration public static event Events.CustomEventHandler<UnloadingWeaponEventArgs> UnloadingWeapon Event Type Type Description Events.CustomEventHandler < UnloadingWeaponEventArgs > | Improve this Doc View Source UnlockingGenerator Invoked before a Player unlocks a generator. Declaration public static event Events.CustomEventHandler<UnlockingGeneratorEventArgs> UnlockingGenerator Event Type Type Description Events.CustomEventHandler < UnlockingGeneratorEventArgs > | Improve this Doc View Source UsedItem Invoked after a Player uses an Item . Declaration public static event Events.CustomEventHandler<UsedItemEventArgs> UsedItem Event Type Type Description Events.CustomEventHandler < UsedItemEventArgs > Remarks Invoked after UsingItem , if a player's class has changed during their health increase, won't fire. | Improve this Doc View Source UsingItem Invoked before using an Item . Declaration public static event Events.CustomEventHandler<UsingItemEventArgs> UsingItem Event Type Type Description Events.CustomEventHandler < UsingItemEventArgs > | Improve this Doc View Source UsingMicroHIDEnergy Invoked before a Player MicroHID energy is changed. Declaration public static event Events.CustomEventHandler<UsingMicroHIDEnergyEventArgs> UsingMicroHIDEnergy Event Type Type Description Events.CustomEventHandler < UsingMicroHIDEnergyEventArgs > | Improve this Doc View Source UsingRadioBattery Invoked before a user's radio battery charge is changed. Declaration public static event Events.CustomEventHandler<UsingRadioBatteryEventArgs> UsingRadioBattery Event Type Type Description Events.CustomEventHandler < UsingRadioBatteryEventArgs > | Improve this Doc View Source Verified Ivoked after a Player has been verified. Declaration public static event Events.CustomEventHandler<VerifiedEventArgs> Verified Event Type Type Description Events.CustomEventHandler < VerifiedEventArgs > | Improve this Doc View Source VoiceChatting Invoked after a Player presses the voicechat key. Declaration public static event Events.CustomEventHandler<VoiceChattingEventArgs> VoiceChatting Event Type Type Description Events.CustomEventHandler < VoiceChattingEventArgs > Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Handlers.Scp049.html": {
    "href": "api/Exiled.Events.Handlers.Scp049.html",
    "title": "Class Scp049 | EXILED Docs",
    "keywords": "Class Scp049 SCP-049 related events. Inheritance System.Object Scp049 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp049 Methods | Improve this Doc View Source OnActivatingSense(ActivatingSenseEventArgs) Called before SCP-049 starts the sense ability. Declaration public static void OnActivatingSense(ActivatingSenseEventArgs ev) Parameters Type Name Description ActivatingSenseEventArgs ev The ActivatingSenseEventArgs instance. | Improve this Doc View Source OnConsumingCorpse(ConsumingCorpseEventArgs) Called before SCP-049-2 consumes a corpse. Declaration public static void OnConsumingCorpse(ConsumingCorpseEventArgs ev) Parameters Type Name Description ConsumingCorpseEventArgs ev The ConsumingCorpseEventArgs instance. | Improve this Doc View Source OnFinishingRecall(FinishingRecallEventArgs) Called before SCP-049 finishes recalling a player. Declaration public static void OnFinishingRecall(FinishingRecallEventArgs ev) Parameters Type Name Description FinishingRecallEventArgs ev The FinishingRecallEventArgs instance. | Improve this Doc View Source OnSendingCall(SendingCallEventArgs) Called before SCP-049 starts the call ability. Declaration public static void OnSendingCall(SendingCallEventArgs ev) Parameters Type Name Description SendingCallEventArgs ev The SendingCallEventArgs instance. | Improve this Doc View Source OnStartingRecall(StartingRecallEventArgs) Called before SCP-049 starts to recall a player. Declaration public static void OnStartingRecall(StartingRecallEventArgs ev) Parameters Type Name Description StartingRecallEventArgs ev The StartingRecallEventArgs instance. Events | Improve this Doc View Source ActivatingSense Invoked before SCP-049 uses the sense ability. Declaration public static event Events.CustomEventHandler<ActivatingSenseEventArgs> ActivatingSense Event Type Type Description Events.CustomEventHandler < ActivatingSenseEventArgs > | Improve this Doc View Source ConsumingCorpse Invoked before SCP-049-2 consumes a corpse. Declaration public static event Events.CustomEventHandler<ConsumingCorpseEventArgs> ConsumingCorpse Event Type Type Description Events.CustomEventHandler < ConsumingCorpseEventArgs > | Improve this Doc View Source FinishingRecall Invoked before SCP-049 finishes recalling a player. Declaration public static event Events.CustomEventHandler<FinishingRecallEventArgs> FinishingRecall Event Type Type Description Events.CustomEventHandler < FinishingRecallEventArgs > | Improve this Doc View Source SendingCall Invoked before SCP-049 uses the call ability. Declaration public static event Events.CustomEventHandler<SendingCallEventArgs> SendingCall Event Type Type Description Events.CustomEventHandler < SendingCallEventArgs > | Improve this Doc View Source StartingRecall Invoked before SCP-049 begins recalling a player. Declaration public static event Events.CustomEventHandler<StartingRecallEventArgs> StartingRecall Event Type Type Description Events.CustomEventHandler < StartingRecallEventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp079.html": {
    "href": "api/Exiled.Events.Handlers.Scp079.html",
    "title": "Class Scp079 | EXILED Docs",
    "keywords": "Class Scp079 SCP-079 related events. Inheritance System.Object Scp079 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp079 Methods | Improve this Doc View Source OnChangingCamera(ChangingCameraEventArgs) Called before SCP-079 switches cameras. Declaration public static void OnChangingCamera(ChangingCameraEventArgs ev) Parameters Type Name Description ChangingCameraEventArgs ev The ChangingCameraEventArgs instance. | Improve this Doc View Source OnChangingSpeakerStatus(ChangingSpeakerStatusEventArgs) Called while interacting with a speaker with SCP-079. Declaration public static void OnChangingSpeakerStatus(ChangingSpeakerStatusEventArgs ev) Parameters Type Name Description ChangingSpeakerStatusEventArgs ev The ChangingSpeakerStatusEventArgs instance. | Improve this Doc View Source OnElevatorTeleporting(ElevatorTeleportingEventArgs) Called before SCP-079 teleports using an elevator. Declaration public static void OnElevatorTeleporting(ElevatorTeleportingEventArgs ev) Parameters Type Name Description ElevatorTeleportingEventArgs ev The ElevatorTeleportingEventArgs instance. | Improve this Doc View Source OnGainingExperience(GainingExperienceEventArgs) Called before gaining experience with SCP-079. Declaration public static void OnGainingExperience(GainingExperienceEventArgs ev) Parameters Type Name Description GainingExperienceEventArgs ev The GainingExperienceEventArgs instance. | Improve this Doc View Source OnGainingLevel(GainingLevelEventArgs) Called before gaining levels with SCP-079. Declaration public static void OnGainingLevel(GainingLevelEventArgs ev) Parameters Type Name Description GainingLevelEventArgs ev The GainingLevelEventArgs instance. | Improve this Doc View Source OnInteractingTesla(InteractingTeslaEventArgs) Called before triggering a tesla with SCP-079. Declaration public static void OnInteractingTesla(InteractingTeslaEventArgs ev) Parameters Type Name Description InteractingTeslaEventArgs ev The InteractingTeslaEventArgs instance. | Improve this Doc View Source OnLockingDown(LockingDownEventArgs) Called before SCP-079 lockdowns a room. Declaration public static void OnLockingDown(LockingDownEventArgs ev) Parameters Type Name Description LockingDownEventArgs ev The LockingDownEventArgs instance. | Improve this Doc View Source OnPinging(PingingEventArgs) Called before SCP-079 sends a ping. Declaration public static void OnPinging(PingingEventArgs ev) Parameters Type Name Description PingingEventArgs ev The PingingEventArgs instance. | Improve this Doc View Source OnRecontained(RecontainedEventArgs) Called after SCP-079 is recontained. Declaration public static void OnRecontained(RecontainedEventArgs ev) Parameters Type Name Description RecontainedEventArgs ev The RecontainedEventArgs instance. | Improve this Doc View Source OnRoomBlackout(RoomBlackoutEventArgs) Called before SCP-079 turns off the lights in a room. Declaration public static void OnRoomBlackout(RoomBlackoutEventArgs ev) Parameters Type Name Description RoomBlackoutEventArgs ev The PingingEventArgs instance. | Improve this Doc View Source OnTriggeringDoor(TriggeringDoorEventArgs) Called before interacting with a door with SCP-079. Declaration public static void OnTriggeringDoor(TriggeringDoorEventArgs ev) Parameters Type Name Description TriggeringDoorEventArgs ev The TriggeringDoorEventArgs instance. | Improve this Doc View Source OnZoneBlackout(ZoneBlackoutEventArgs) Called before SCP-079 turns off the lights in a zone. Declaration public static void OnZoneBlackout(ZoneBlackoutEventArgs ev) Parameters Type Name Description ZoneBlackoutEventArgs ev The PingingEventArgs instance. Events | Improve this Doc View Source ChangingCamera Invoked before SCP-079 switches cameras. Declaration public static event Events.CustomEventHandler<ChangingCameraEventArgs> ChangingCamera Event Type Type Description Events.CustomEventHandler < ChangingCameraEventArgs > | Improve this Doc View Source ChangingSpeakerStatus Invoked before SCP-079 changes a speaker status. Declaration public static event Events.CustomEventHandler<ChangingSpeakerStatusEventArgs> ChangingSpeakerStatus Event Type Type Description Events.CustomEventHandler < ChangingSpeakerStatusEventArgs > | Improve this Doc View Source ElevatorTeleporting Invoked before SCP-079 teleports using an elevator. Declaration public static event Events.CustomEventHandler<ElevatorTeleportingEventArgs> ElevatorTeleporting Event Type Type Description Events.CustomEventHandler < ElevatorTeleportingEventArgs > | Improve this Doc View Source GainingExperience Invoked before gaining experience with SCP-079. Declaration public static event Events.CustomEventHandler<GainingExperienceEventArgs> GainingExperience Event Type Type Description Events.CustomEventHandler < GainingExperienceEventArgs > | Improve this Doc View Source GainingLevel Invoked before gaining levels with SCP-079. Declaration public static event Events.CustomEventHandler<GainingLevelEventArgs> GainingLevel Event Type Type Description Events.CustomEventHandler < GainingLevelEventArgs > | Improve this Doc View Source InteractingTesla Invoked before triggering a tesla with SCP-079. Declaration public static event Events.CustomEventHandler<InteractingTeslaEventArgs> InteractingTesla Event Type Type Description Events.CustomEventHandler < InteractingTeslaEventArgs > | Improve this Doc View Source LockingDown Invoked before SCP-079 lockdowns a room. Declaration public static event Events.CustomEventHandler<LockingDownEventArgs> LockingDown Event Type Type Description Events.CustomEventHandler < LockingDownEventArgs > | Improve this Doc View Source Pinging Invoked before SCP-079 sends a ping. Declaration public static event Events.CustomEventHandler<PingingEventArgs> Pinging Event Type Type Description Events.CustomEventHandler < PingingEventArgs > | Improve this Doc View Source Recontained Invoked after SCP-079 recontainment. Declaration public static event Events.CustomEventHandler<RecontainedEventArgs> Recontained Event Type Type Description Events.CustomEventHandler < RecontainedEventArgs > | Improve this Doc View Source RoomBlackout Invoked before SCP-079 turns off the lights in a room. Declaration public static event Events.CustomEventHandler<RoomBlackoutEventArgs> RoomBlackout Event Type Type Description Events.CustomEventHandler < RoomBlackoutEventArgs > | Improve this Doc View Source TriggeringDoor Invoked before triggering a door with SCP-079. Declaration public static event Events.CustomEventHandler<TriggeringDoorEventArgs> TriggeringDoor Event Type Type Description Events.CustomEventHandler < TriggeringDoorEventArgs > | Improve this Doc View Source ZoneBlackout Invoked before SCP-079 turns off the lights in a zone. Declaration public static event Events.CustomEventHandler<ZoneBlackoutEventArgs> ZoneBlackout Event Type Type Description Events.CustomEventHandler < ZoneBlackoutEventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp096.html": {
    "href": "api/Exiled.Events.Handlers.Scp096.html",
    "title": "Class Scp096 | EXILED Docs",
    "keywords": "Class Scp096 SCP-096 related events. Inheritance System.Object Scp096 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp096 Methods | Improve this Doc View Source OnAddingTarget(AddingTargetEventArgs) Called before adding a target to SCP-096. Declaration public static void OnAddingTarget(AddingTargetEventArgs ev) Parameters Type Name Description AddingTargetEventArgs ev The AddingTargetEventArgs instance. | Improve this Doc View Source OnCalmingDown(CalmingDownEventArgs) Called before SCP-096 calms down. Declaration public static void OnCalmingDown(CalmingDownEventArgs ev) Parameters Type Name Description CalmingDownEventArgs ev The CalmingDownEventArgs instance. | Improve this Doc View Source OnCharging(ChargingEventArgs) Called before SCP-096 begins charging. Declaration public static void OnCharging(ChargingEventArgs ev) Parameters Type Name Description ChargingEventArgs ev The ChargingEventArgs instance. | Improve this Doc View Source OnEnraging(EnragingEventArgs) Called before SCP-096 is enraged. Declaration public static void OnEnraging(EnragingEventArgs ev) Parameters Type Name Description EnragingEventArgs ev The EnragingEventArgs instance. | Improve this Doc View Source OnStartPryingGate(StartPryingGateEventArgs) Called before SCP-096 begins prying open a gate. Declaration public static void OnStartPryingGate(StartPryingGateEventArgs ev) Parameters Type Name Description StartPryingGateEventArgs ev The StartPryingGateEventArgs instance. | Improve this Doc View Source OnTryingNotToCry(TryingNotToCryEventArgs) Called before SCP-096 starts trying not to cry. Declaration public static void OnTryingNotToCry(TryingNotToCryEventArgs ev) Parameters Type Name Description TryingNotToCryEventArgs ev The TryingNotToCryEventArgs instance. Events | Improve this Doc View Source AddingTarget Invoked before adding a target to SCP-096. Declaration public static event Events.CustomEventHandler<AddingTargetEventArgs> AddingTarget Event Type Type Description Events.CustomEventHandler < AddingTargetEventArgs > | Improve this Doc View Source CalmingDown Invoked before SCP-096 calms down. Declaration public static event Events.CustomEventHandler<CalmingDownEventArgs> CalmingDown Event Type Type Description Events.CustomEventHandler < CalmingDownEventArgs > | Improve this Doc View Source Charging Invoked before SCP-096 begins charging. Declaration public static event Events.CustomEventHandler<ChargingEventArgs> Charging Event Type Type Description Events.CustomEventHandler < ChargingEventArgs > | Improve this Doc View Source Enraging Invoked before SCP-096 is enraged. Declaration public static event Events.CustomEventHandler<EnragingEventArgs> Enraging Event Type Type Description Events.CustomEventHandler < EnragingEventArgs > | Improve this Doc View Source StartPryingGate Invoked before SCP-096 begins prying open a gate. Declaration public static event Events.CustomEventHandler<StartPryingGateEventArgs> StartPryingGate Event Type Type Description Events.CustomEventHandler < StartPryingGateEventArgs > | Improve this Doc View Source TryingNotToCry Invoked before SCP-096 tries not to cry. Declaration public static event Events.CustomEventHandler<TryingNotToCryEventArgs> TryingNotToCry Event Type Type Description Events.CustomEventHandler < TryingNotToCryEventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp106.html": {
    "href": "api/Exiled.Events.Handlers.Scp106.html",
    "title": "Class Scp106 | EXILED Docs",
    "keywords": "Class Scp106 SCP-106 related events. Inheritance System.Object Scp106 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp106 Methods | Improve this Doc View Source OnStalking(StalkingEventArgs) Called before SCP-106 use the stalk ability. Declaration public static void OnStalking(StalkingEventArgs ev) Parameters Type Name Description StalkingEventArgs ev The StalkingEventArgs instance. | Improve this Doc View Source OnTeleporting(TeleportingEventArgs) Called before SCP-106 teleports using the hunter atlas. Declaration public static void OnTeleporting(TeleportingEventArgs ev) Parameters Type Name Description TeleportingEventArgs ev The TeleportingEventArgs instance. Events | Improve this Doc View Source Stalking Invoked before SCP-106 use the stalk ability. Declaration public static event Events.CustomEventHandler<StalkingEventArgs> Stalking Event Type Type Description Events.CustomEventHandler < StalkingEventArgs > | Improve this Doc View Source Teleporting Invoked before SCP-106 teleports using the hunter atlas. Declaration public static event Events.CustomEventHandler<TeleportingEventArgs> Teleporting Event Type Type Description Events.CustomEventHandler < TeleportingEventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp173.html": {
    "href": "api/Exiled.Events.Handlers.Scp173.html",
    "title": "Class Scp173 | EXILED Docs",
    "keywords": "Class Scp173 SCP-173 related events. Inheritance System.Object Scp173 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp173 Methods | Improve this Doc View Source OnBlinking(BlinkingEventArgs) Called before players near SCP-173 blink. Declaration public static void OnBlinking(BlinkingEventArgs ev) Parameters Type Name Description BlinkingEventArgs ev The BlinkingEventArgs instance. | Improve this Doc View Source OnPlacingTantrum(PlacingTantrumEventArgs) Called before a tantrum is placed. Declaration public static void OnPlacingTantrum(PlacingTantrumEventArgs ev) Parameters Type Name Description PlacingTantrumEventArgs ev The PlacingTantrumEventArgs instance. | Improve this Doc View Source OnUsingBreakneckSpeeds(UsingBreakneckSpeedsEventArgs) Called before a using breakneck speeds. Declaration public static void OnUsingBreakneckSpeeds(UsingBreakneckSpeedsEventArgs ev) Parameters Type Name Description UsingBreakneckSpeedsEventArgs ev The UsingBreakneckSpeedsEventArgs instance. Events | Improve this Doc View Source Blinking Invoked before players near SCP-173 blink. Declaration public static event Events.CustomEventHandler<BlinkingEventArgs> Blinking Event Type Type Description Events.CustomEventHandler < BlinkingEventArgs > | Improve this Doc View Source PlacingTantrum Invoked before a tantrum is placed. Declaration public static event Events.CustomEventHandler<PlacingTantrumEventArgs> PlacingTantrum Event Type Type Description Events.CustomEventHandler < PlacingTantrumEventArgs > | Improve this Doc View Source UsingBreakneckSpeeds Invoked before using breakneck speeds. Declaration public static event Events.CustomEventHandler<UsingBreakneckSpeedsEventArgs> UsingBreakneckSpeeds Event Type Type Description Events.CustomEventHandler < UsingBreakneckSpeedsEventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp244.html": {
    "href": "api/Exiled.Events.Handlers.Scp244.html",
    "title": "Class Scp244 | EXILED Docs",
    "keywords": "Class Scp244 Scp244 related events. Inheritance System.Object Scp244 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp244 Methods | Improve this Doc View Source OnDamagingScp244(DamagingScp244EventArgs) Called before an Scp244 take damage. Declaration public static void OnDamagingScp244(DamagingScp244EventArgs ev) Parameters Type Name Description DamagingScp244EventArgs ev The DamagingScp244EventArgs instance. | Improve this Doc View Source OnOpeningScp244(OpeningScp244EventArgs) Called before Scp244 open because the angle was too low. Declaration public static void OnOpeningScp244(OpeningScp244EventArgs ev) Parameters Type Name Description OpeningScp244EventArgs ev The DamagingScp244EventArgs instance. | Improve this Doc View Source OnUsingScp244(UsingScp244EventArgs) Called before using a usable item. Declaration public static void OnUsingScp244(UsingScp244EventArgs ev) Parameters Type Name Description UsingScp244EventArgs ev The UsingScp244EventArgs instance. Events | Improve this Doc View Source DamagingScp244 Invoked before an Scp244 take damage. Declaration public static event Events.CustomEventHandler<DamagingScp244EventArgs> DamagingScp244 Event Type Type Description Events.CustomEventHandler < DamagingScp244EventArgs > | Improve this Doc View Source OpeningScp244 Invoked before an Scp244 open because the angle was too low. Declaration public static event Events.CustomEventHandler<OpeningScp244EventArgs> OpeningScp244 Event Type Type Description Events.CustomEventHandler < OpeningScp244EventArgs > | Improve this Doc View Source UsingScp244 Invoked before using an Item . Declaration public static event Events.CustomEventHandler<UsingScp244EventArgs> UsingScp244 Event Type Type Description Events.CustomEventHandler < UsingScp244EventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp330.html": {
    "href": "api/Exiled.Events.Handlers.Scp330.html",
    "title": "Class Scp330 | EXILED Docs",
    "keywords": "Class Scp330 Scp330 related events. Inheritance System.Object Scp330 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp330 Methods | Improve this Doc View Source OnDroppingScp330(DroppingScp330EventArgs) Called before a Player searches a Pickup. Declaration public static void OnDroppingScp330(DroppingScp330EventArgs ev) Parameters Type Name Description DroppingScp330EventArgs ev The DroppingScp330EventArgs instance. | Improve this Doc View Source OnEatenScp330(EatenScp330EventArgs) Called after the player has eaten a candy from SCP-330. Declaration public static void OnEatenScp330(EatenScp330EventArgs ev) Parameters Type Name Description EatenScp330EventArgs ev The EatenScp330EventArgs instance. | Improve this Doc View Source OnEatingScp330(EatingScp330EventArgs) Called before a player eats a candy from SCP-330. Declaration public static void OnEatingScp330(EatingScp330EventArgs ev) Parameters Type Name Description EatingScp330EventArgs ev The EatingScp330EventArgs instance. | Improve this Doc View Source OnInteractingScp330(InteractingScp330EventArgs) Called before a Player interacts with SCP-330. Declaration public static void OnInteractingScp330(InteractingScp330EventArgs ev) Parameters Type Name Description InteractingScp330EventArgs ev The InteractingScp330EventArgs instance. Events | Improve this Doc View Source DroppingScp330 Invoked before a Player drop a SCP-330 candy. Declaration public static event Events.CustomEventHandler<DroppingScp330EventArgs> DroppingScp330 Event Type Type Description Events.CustomEventHandler < DroppingScp330EventArgs > | Improve this Doc View Source EatenScp330 Invoked after the player has eaten a candy from SCP-330. Declaration public static event Events.CustomEventHandler<EatenScp330EventArgs> EatenScp330 Event Type Type Description Events.CustomEventHandler < EatenScp330EventArgs > | Improve this Doc View Source EatingScp330 Invoked before a player eats a candy from SCP-330. Declaration public static event Events.CustomEventHandler<EatingScp330EventArgs> EatingScp330 Event Type Type Description Events.CustomEventHandler < EatingScp330EventArgs > | Improve this Doc View Source InteractingScp330 Invoked before a Player interacts with SCP-330. Declaration public static event Events.CustomEventHandler<InteractingScp330EventArgs> InteractingScp330 Event Type Type Description Events.CustomEventHandler < InteractingScp330EventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp914.html": {
    "href": "api/Exiled.Events.Handlers.Scp914.html",
    "title": "Class Scp914 | EXILED Docs",
    "keywords": "Class Scp914 Handles SCP-914 related events. Inheritance System.Object Scp914 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp914 Methods | Improve this Doc View Source OnActivating(ActivatingEventArgs) Called before activating the SCP-914 machine. Declaration public static void OnActivating(ActivatingEventArgs ev) Parameters Type Name Description ActivatingEventArgs ev The ActivatingEventArgs instance. | Improve this Doc View Source OnChangingKnobSetting(ChangingKnobSettingEventArgs) Called before changing the SCP-914 machine knob setting. Declaration public static void OnChangingKnobSetting(ChangingKnobSettingEventArgs ev) Parameters Type Name Description ChangingKnobSettingEventArgs ev The ChangingKnobSettingEventArgs instance. | Improve this Doc View Source OnUpgradingInventoryItem(UpgradingInventoryItemEventArgs) Called before SCP-914 upgrades an item in a player's inventory. Declaration public static void OnUpgradingInventoryItem(UpgradingInventoryItemEventArgs ev) Parameters Type Name Description UpgradingInventoryItemEventArgs ev The UpgradingInventoryItemEventArgs instance. | Improve this Doc View Source OnUpgradingPickup(UpgradingPickupEventArgs) Called before SCP-914 upgrades a item. Declaration public static void OnUpgradingPickup(UpgradingPickupEventArgs ev) Parameters Type Name Description UpgradingPickupEventArgs ev The UpgradingPickupEventArgs instance. | Improve this Doc View Source OnUpgradingPlayer(UpgradingPlayerEventArgs) Called before SCP-914 upgrades a player. Declaration public static void OnUpgradingPlayer(UpgradingPlayerEventArgs ev) Parameters Type Name Description UpgradingPlayerEventArgs ev The UpgradingPlayerEventArgs instance. Events | Improve this Doc View Source Activating Invoked before activating the SCP-914 machine. Declaration public static event Events.CustomEventHandler<ActivatingEventArgs> Activating Event Type Type Description Events.CustomEventHandler < ActivatingEventArgs > | Improve this Doc View Source ChangingKnobSetting Invoked before changing the SCP-914 machine knob setting. Declaration public static event Events.CustomEventHandler<ChangingKnobSettingEventArgs> ChangingKnobSetting Event Type Type Description Events.CustomEventHandler < ChangingKnobSettingEventArgs > | Improve this Doc View Source UpgradingInventoryItem Invoked before SCP-914 upgrades an item in a player's inventory. Declaration public static event Events.CustomEventHandler<UpgradingInventoryItemEventArgs> UpgradingInventoryItem Event Type Type Description Events.CustomEventHandler < UpgradingInventoryItemEventArgs > | Improve this Doc View Source UpgradingPickup Invoked before SCP-914 upgrades a Pickup. Declaration public static event Events.CustomEventHandler<UpgradingPickupEventArgs> UpgradingPickup Event Type Type Description Events.CustomEventHandler < UpgradingPickupEventArgs > | Improve this Doc View Source UpgradingPlayer Invoked before SCP-914 upgrades a player. Declaration public static event Events.CustomEventHandler<UpgradingPlayerEventArgs> UpgradingPlayer Event Type Type Description Events.CustomEventHandler < UpgradingPlayerEventArgs >"
  },
  "api/Exiled.Events.Handlers.Scp939.html": {
    "href": "api/Exiled.Events.Handlers.Scp939.html",
    "title": "Class Scp939 | EXILED Docs",
    "keywords": "Class Scp939 Handles SCP-939 related events. Inheritance System.Object Scp939 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Scp939 Methods | Improve this Doc View Source OnChangingFocus(ChangingFocusEventArgs) Called before SCP-939 changes its target focus. Declaration public static void OnChangingFocus(ChangingFocusEventArgs ev) Parameters Type Name Description ChangingFocusEventArgs ev The ChangingFocusEventArgs instance. | Improve this Doc View Source OnLunging(LungingEventArgs) Called before SCP-939 uses its lunge ability. Declaration public static void OnLunging(LungingEventArgs ev) Parameters Type Name Description LungingEventArgs ev The LungingEventArgs instance. | Improve this Doc View Source OnPlacingAmnesticCloud(PlacingAmnesticCloudEventArgs) Called before SCP-939 uses its amnestic cloud ability. Declaration public static void OnPlacingAmnesticCloud(PlacingAmnesticCloudEventArgs ev) Parameters Type Name Description PlacingAmnesticCloudEventArgs ev The PlacingAmnesticCloudEventArgs instance. | Improve this Doc View Source OnPlayingSound(PlayingSoundEventArgs) Called before SCP-939 plays a sound. Declaration public static void OnPlayingSound(PlayingSoundEventArgs ev) Parameters Type Name Description PlayingSoundEventArgs ev The PlayingSoundEventArgs instance. | Improve this Doc View Source OnPlayingVoice(PlayingVoiceEventArgs) Called before SCP-939 plays a stolen voice. Declaration public static void OnPlayingVoice(PlayingVoiceEventArgs ev) Parameters Type Name Description PlayingVoiceEventArgs ev The PlacingAmnesticCloudEventArgs instance. | Improve this Doc View Source OnSavingVoice(SavingVoiceEventArgs) Called before SCP-939 plays a stolen voice. Declaration public static void OnSavingVoice(SavingVoiceEventArgs ev) Parameters Type Name Description SavingVoiceEventArgs ev The PlacingAmnesticCloudEventArgs instance. Events | Improve this Doc View Source ChangingFocus Invoked before SCP-939 changes its target focus. Declaration public static event Events.CustomEventHandler<ChangingFocusEventArgs> ChangingFocus Event Type Type Description Events.CustomEventHandler < ChangingFocusEventArgs > | Improve this Doc View Source Lunging Invoked before SCP-939 uses its lunge ability. Declaration public static event Events.CustomEventHandler<LungingEventArgs> Lunging Event Type Type Description Events.CustomEventHandler < LungingEventArgs > | Improve this Doc View Source PlacingAmnesticCloud Invoked before SCP-939 uses its amnestic cloud ability. Declaration public static event Events.CustomEventHandler<PlacingAmnesticCloudEventArgs> PlacingAmnesticCloud Event Type Type Description Events.CustomEventHandler < PlacingAmnesticCloudEventArgs > | Improve this Doc View Source PlayingSound Invoked before SCP-939 plays a sound effect. Declaration public static event Events.CustomEventHandler<PlayingSoundEventArgs> PlayingSound Event Type Type Description Events.CustomEventHandler < PlayingSoundEventArgs > | Improve this Doc View Source PlayingVoice Invoked before SCP-939 plays a stolen voice. Declaration public static event Events.CustomEventHandler<PlayingVoiceEventArgs> PlayingVoice Event Type Type Description Events.CustomEventHandler < PlayingVoiceEventArgs > | Improve this Doc View Source SavingVoice Invoked before SCP-939 will save Human voice. Declaration public static event Events.CustomEventHandler<SavingVoiceEventArgs> SavingVoice Event Type Type Description Events.CustomEventHandler < SavingVoiceEventArgs >"
  },
  "api/Exiled.Events.Handlers.Server.html": {
    "href": "api/Exiled.Events.Handlers.Server.html",
    "title": "Class Server | EXILED Docs",
    "keywords": "Class Server Server related events. Inheritance System.Object Server Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public static class Server Methods | Improve this Doc View Source OnAddingUnitName(AddingUnitNameEventArgs) Called before adding an unit name. Declaration public static void OnAddingUnitName(AddingUnitNameEventArgs ev) Parameters Type Name Description AddingUnitNameEventArgs ev The AddingUnitNameEventArgs instance. | Improve this Doc View Source OnEndingRound(EndingRoundEventArgs) Called before ending a round. Declaration public static void OnEndingRound(EndingRoundEventArgs ev) Parameters Type Name Description EndingRoundEventArgs ev The EndingRoundEventArgs instance. | Improve this Doc View Source OnLocalReporting(LocalReportingEventArgs) Called when sending a complaint about a player to the local server administrators. Declaration public static void OnLocalReporting(LocalReportingEventArgs ev) Parameters Type Name Description LocalReportingEventArgs ev The LocalReportingEventArgs instance. | Improve this Doc View Source OnReloadedConfigs() Called after the \"reload configs\" command is ran. Declaration public static void OnReloadedConfigs() | Improve this Doc View Source OnReloadedGameplay() Called after the \"reload gameplay\" command is ran. Declaration public static void OnReloadedGameplay() | Improve this Doc View Source OnReloadedPermissions() Called after the \"reload permissions\" command is ran. Declaration public static void OnReloadedPermissions() | Improve this Doc View Source OnReloadedPlugins() Called after the \"reload plugins\" command is ran. Declaration public static void OnReloadedPlugins() | Improve this Doc View Source OnReloadedRA() Called after the \"reload remoteadminconfigs\" command is ran. Declaration public static void OnReloadedRA() | Improve this Doc View Source OnReloadedTranslations() Called after the \"reload translations\" command is ran. Declaration public static void OnReloadedTranslations() | Improve this Doc View Source OnReportingCheater(ReportingCheaterEventArgs) Called when a player reports a cheater. Declaration public static void OnReportingCheater(ReportingCheaterEventArgs ev) Parameters Type Name Description ReportingCheaterEventArgs ev The ReportingCheaterEventArgs instance. | Improve this Doc View Source OnRespawningTeam(RespawningTeamEventArgs) Called before respawning a wave of Chaos Insurgency or NTF. Declaration public static void OnRespawningTeam(RespawningTeamEventArgs ev) Parameters Type Name Description RespawningTeamEventArgs ev The RespawningTeamEventArgs instance. | Improve this Doc View Source OnRestartingRound() Called before restarting a round. Declaration public static void OnRestartingRound() | Improve this Doc View Source OnRoundEnded(RoundEndedEventArgs) Called after the end of a round. Declaration public static void OnRoundEnded(RoundEndedEventArgs ev) Parameters Type Name Description RoundEndedEventArgs ev The RoundEndedEventArgs instance. | Improve this Doc View Source OnRoundStarted() Called after the start of a new round. Declaration public static void OnRoundStarted() | Improve this Doc View Source OnWaitingForPlayers() Called before waiting for players. Declaration public static void OnWaitingForPlayers() Events | Improve this Doc View Source AddingUnitName Invoked before adding an unit name. Declaration public static event Events.CustomEventHandler<AddingUnitNameEventArgs> AddingUnitName Event Type Type Description Events.CustomEventHandler < AddingUnitNameEventArgs > | Improve this Doc View Source EndingRound Invoked before ending a round. Declaration public static event Events.CustomEventHandler<EndingRoundEventArgs> EndingRound Event Type Type Description Events.CustomEventHandler < EndingRoundEventArgs > | Improve this Doc View Source LocalReporting Invoked when sending a complaint about a player to the local server administrators. Declaration public static event Events.CustomEventHandler<LocalReportingEventArgs> LocalReporting Event Type Type Description Events.CustomEventHandler < LocalReportingEventArgs > | Improve this Doc View Source ReloadedConfigs Invoked after the \"reload configs\" command is ran. Declaration public static event Events.CustomEventHandler ReloadedConfigs Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source ReloadedGameplay Invoked after the \"reload gameplay\" command is ran. Declaration public static event Events.CustomEventHandler ReloadedGameplay Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source ReloadedPermissions Invoked after the \"reload permissions\" command is ran. Declaration public static event Events.CustomEventHandler ReloadedPermissions Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source ReloadedPlugins Invoked after the \"reload plugins\" command is ran. Declaration public static event Events.CustomEventHandler ReloadedPlugins Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source ReloadedRA Invoked after the \"reload remoteadminconfigs\" command is ran. Declaration public static event Events.CustomEventHandler ReloadedRA Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source ReloadedTranslations Invoked after the \"reload translations\" command is ran. Declaration public static event Events.CustomEventHandler ReloadedTranslations Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source ReportingCheater Invoked when a player reports a cheater. Declaration public static event Events.CustomEventHandler<ReportingCheaterEventArgs> ReportingCheater Event Type Type Description Events.CustomEventHandler < ReportingCheaterEventArgs > | Improve this Doc View Source RespawningTeam Invoked before respawning a wave of Chaos Insurgency or NTF. Declaration public static event Events.CustomEventHandler<RespawningTeamEventArgs> RespawningTeam Event Type Type Description Events.CustomEventHandler < RespawningTeamEventArgs > | Improve this Doc View Source RestartingRound Invoked before the restart of a round. Declaration public static event Events.CustomEventHandler RestartingRound Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source RoundEnded Invoked after the end of a round. Declaration public static event Events.CustomEventHandler<RoundEndedEventArgs> RoundEnded Event Type Type Description Events.CustomEventHandler < RoundEndedEventArgs > | Improve this Doc View Source RoundStarted Invoked after the start of a new round. Declaration public static event Events.CustomEventHandler RoundStarted Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source WaitingForPlayers Invoked before waiting for players. Declaration public static event Events.CustomEventHandler WaitingForPlayers Event Type Type Description Events.CustomEventHandler"
  },
  "api/Exiled.Events.Handlers.Warhead.html": {
    "href": "api/Exiled.Events.Handlers.Warhead.html",
    "title": "Class Warhead | EXILED Docs",
    "keywords": "Class Warhead Handles warhead related events. Inheritance System.Object Warhead Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Handlers Assembly : Exiled.Events.dll Syntax public class Warhead Methods | Improve this Doc View Source OnChangingLeverStatus(ChangingLeverStatusEventArgs) Called before changing the warhead lever status. Declaration public static void OnChangingLeverStatus(ChangingLeverStatusEventArgs ev) Parameters Type Name Description ChangingLeverStatusEventArgs ev The ChangingLeverStatusEventArgs instance. | Improve this Doc View Source OnDetonated() Called after the warhead has been detonated. Declaration public static void OnDetonated() | Improve this Doc View Source OnDetonating() Called before detonating the warhead. Declaration [PluginEvent(ServerEventType.WarheadDetonation)] public bool OnDetonating() Returns Type Description System.Boolean Returns whether the event is allowed or not. | Improve this Doc View Source OnStarting(StartingEventArgs) Called before starting the warhead. Declaration public static void OnStarting(StartingEventArgs ev) Parameters Type Name Description StartingEventArgs ev The StartingEventArgs instance. | Improve this Doc View Source OnStopping(StoppingEventArgs) Called before stopping the warhead. Declaration public static void OnStopping(StoppingEventArgs ev) Parameters Type Name Description StoppingEventArgs ev The StoppingEventArgs instance. Events | Improve this Doc View Source ChangingLeverStatus Invoked before changing the warhead lever status. Declaration public static event Events.CustomEventHandler<ChangingLeverStatusEventArgs> ChangingLeverStatus Event Type Type Description Events.CustomEventHandler < ChangingLeverStatusEventArgs > | Improve this Doc View Source Detonated Invoked after the warhead has been detonated. Declaration public static event Events.CustomEventHandler Detonated Event Type Type Description Events.CustomEventHandler | Improve this Doc View Source Detonating Invoked before detonating the warhead. Declaration public static event Events.CustomEventHandler<DetonatingEventArgs> Detonating Event Type Type Description Events.CustomEventHandler < DetonatingEventArgs > | Improve this Doc View Source Starting Invoked before starting the warhead. Declaration public static event Events.CustomEventHandler<StartingEventArgs> Starting Event Type Type Description Events.CustomEventHandler < StartingEventArgs > | Improve this Doc View Source Stopping Invoked before stopping the warhead. Declaration public static event Events.CustomEventHandler<StoppingEventArgs> Stopping Event Type Type Description Events.CustomEventHandler < StoppingEventArgs > Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.html": {
    "href": "api/Exiled.Events.html",
    "title": "Namespace Exiled.Events | EXILED Docs",
    "keywords": "Namespace Exiled.Events Classes Config Events Patch and unpatch events into the game. Delegates Events.CustomEventHandler The custom System.EventHandler delegate, with empty parameters. Events.CustomEventHandler<TInterface> The custom System.EventHandler delegate."
  },
  "api/Exiled.Events.Patches.Events.Scp049.ActivatingSense.html": {
    "href": "api/Exiled.Events.Patches.Events.Scp049.ActivatingSense.html",
    "title": "Class ActivatingSense | EXILED Docs",
    "keywords": "Class ActivatingSense Patches PlayerRoles.PlayableScps.Scp049.Scp049SenseAbility.ServerProcessCmd(Mirror.NetworkReader) . Adds the ActivatingSense event. Inheritance System.Object ActivatingSense Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Patches.Events.Scp049 Assembly : Exiled.Events.dll Syntax public class ActivatingSense Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Patches.Events.Scp049.Consuming.html": {
    "href": "api/Exiled.Events.Patches.Events.Scp049.Consuming.html",
    "title": "Class Consuming | EXILED Docs",
    "keywords": "Class Consuming Patches RagdollAbilityBase{T}.ServerProcessCmd . Adds the ConsumingCorpse event. Inheritance System.Object Consuming Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Patches.Events.Scp049 Assembly : Exiled.Events.dll Syntax public class Consuming Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Patches.Events.Scp049.html": {
    "href": "api/Exiled.Events.Patches.Events.Scp049.html",
    "title": "Namespace Exiled.Events.Patches.Events.Scp049 | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Patches.Events.Scp049 Classes ActivatingSense Patches PlayerRoles.PlayableScps.Scp049.Scp049SenseAbility.ServerProcessCmd(Mirror.NetworkReader) . Adds the ActivatingSense event. Consuming Patches RagdollAbilityBase{T}.ServerProcessCmd . Adds the ConsumingCorpse event. SendingCall Patches PlayerRoles.PlayableScps.Scp049.Scp049CallAbility.ServerProcessCmd(Mirror.NetworkReader) . Adds the SendingCall event."
  },
  "api/Exiled.Events.Patches.Events.Scp049.SendingCall.html": {
    "href": "api/Exiled.Events.Patches.Events.Scp049.SendingCall.html",
    "title": "Class SendingCall | EXILED Docs",
    "keywords": "Class SendingCall Patches PlayerRoles.PlayableScps.Scp049.Scp049CallAbility.ServerProcessCmd(Mirror.NetworkReader) . Adds the SendingCall event. Inheritance System.Object SendingCall Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Patches.Events.Scp049 Assembly : Exiled.Events.dll Syntax public class SendingCall Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Patches.Events.Scp106.html": {
    "href": "api/Exiled.Events.Patches.Events.Scp106.html",
    "title": "Namespace Exiled.Events.Patches.Events.Scp106 | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Patches.Events.Scp106 Classes Stalking Patches PlayerRoles.PlayableScps.Scp106.Scp106StalkAbility.ServerProcessCmd(Mirror.NetworkReader) . To add the Stalking event."
  },
  "api/Exiled.Events.Patches.Events.Scp106.Stalking.html": {
    "href": "api/Exiled.Events.Patches.Events.Scp106.Stalking.html",
    "title": "Class Stalking | EXILED Docs",
    "keywords": "Class Stalking Patches PlayerRoles.PlayableScps.Scp106.Scp106StalkAbility.ServerProcessCmd(Mirror.NetworkReader) . To add the Stalking event. Inheritance System.Object Stalking Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Patches.Events.Scp106 Assembly : Exiled.Events.dll Syntax public class Stalking Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Events.Patches.Events.Scp330.html": {
    "href": "api/Exiled.Events.Patches.Events.Scp330.html",
    "title": "Namespace Exiled.Events.Patches.Events.Scp330 | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Patches.Events.Scp330 Classes InteractingScp330 Patches the Interactables.Interobjects.Scp330Interobject.ServerInteract(ReferenceHub,System.Byte) method to add the InteractingScp330 event."
  },
  "api/Exiled.Events.Patches.Events.Scp330.InteractingScp330.html": {
    "href": "api/Exiled.Events.Patches.Events.Scp330.InteractingScp330.html",
    "title": "Class InteractingScp330 | EXILED Docs",
    "keywords": "Class InteractingScp330 Patches the Interactables.Interobjects.Scp330Interobject.ServerInteract(ReferenceHub,System.Byte) method to add the InteractingScp330 event. Inheritance System.Object InteractingScp330 Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Patches.Events.Scp330 Assembly : Exiled.Events.dll Syntax public static class InteractingScp330"
  },
  "api/Exiled.Events.Patches.Generic.html": {
    "href": "api/Exiled.Events.Patches.Generic.html",
    "title": "Namespace Exiled.Events.Patches.Generic | EXILED Docs",
    "keywords": "Namespace Exiled.Events.Patches.Generic Classes IndividualFriendlyFire Checks friendly fire rules."
  },
  "api/Exiled.Events.Patches.Generic.IndividualFriendlyFire.html": {
    "href": "api/Exiled.Events.Patches.Generic.IndividualFriendlyFire.html",
    "title": "Class IndividualFriendlyFire | EXILED Docs",
    "keywords": "Class IndividualFriendlyFire Checks friendly fire rules. Inheritance System.Object IndividualFriendlyFire Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Events.Patches.Generic Assembly : Exiled.Events.dll Syntax public static class IndividualFriendlyFire Methods | Improve this Doc View Source CheckFriendlyFirePlayer(ReferenceHub, ReferenceHub) Checks if there can be damage between two players, according to the FF rules. Declaration public static bool CheckFriendlyFirePlayer(ReferenceHub attackerHub, ReferenceHub victimHub) Parameters Type Name Description ReferenceHub attackerHub The person attacking. ReferenceHub victimHub The person being attacked. Returns Type Description System.Boolean True if the attacker can damage the victim. | Improve this Doc View Source CheckFriendlyFirePlayerHitbox(ReferenceHub, ReferenceHub) Checks if there can be damage between two players, according to the FF rules. Declaration public static bool CheckFriendlyFirePlayerHitbox(ReferenceHub attackerHub, ReferenceHub victimHub) Parameters Type Name Description ReferenceHub attackerHub The person attacking. ReferenceHub victimHub The person being attacked. Returns Type Description System.Boolean True if the attacker can damage the victim. | Improve this Doc View Source CheckFriendlyFirePlayerRules(ReferenceHub, ReferenceHub, out Single) Checks if there can be damage between two players, according to the FF rules. Declaration public static bool CheckFriendlyFirePlayerRules(ReferenceHub attackerHub, ReferenceHub victimHub, out float ffMultiplier) Parameters Type Name Description ReferenceHub attackerHub The person attacking. ReferenceHub victimHub The person being attacked. System.Single ffMultiplier FF multiplier. Returns Type Description System.Boolean True if the attacker can damage the victim. Remarks Friendly fire multiplier is also provided back if needed."
  },
  "api/Exiled.Loader.AutoUpdateFiles.html": {
    "href": "api/Exiled.Loader.AutoUpdateFiles.html",
    "title": "Class AutoUpdateFiles | EXILED Docs",
    "keywords": "Class AutoUpdateFiles Automatically updates with Reference used to generate Exiled. Inheritance System.Object AutoUpdateFiles Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public static class AutoUpdateFiles Fields | Improve this Doc View Source RequiredSCPSLVersion Gets which SCP: SL version generated Exiled. Declaration public static readonly Version RequiredSCPSLVersion Field Value Type Description System.Version"
  },
  "api/Exiled.Loader.Config.html": {
    "href": "api/Exiled.Loader.Config.html",
    "title": "Class Config | EXILED Docs",
    "keywords": "Class Config The configs of the loader. Inheritance System.Object Config Implements IConfig Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public sealed class Config : IConfig Properties | Improve this Doc View Source ConfigType Gets or sets the config files distribution type. Declaration public ConfigType ConfigType { get; set; } Property Value Type Description ConfigType | Improve this Doc View Source Debug Declaration public bool Debug { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Environment Gets or sets the environment type. Declaration public EnvironmentType Environment { get; set; } Property Value Type Description EnvironmentType | Improve this Doc View Source ExiledDirectoryPath Gets or sets the Exiled directory path from which plugins will be loaded. Declaration public string ExiledDirectoryPath { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldLoadOutdatedExiled Gets or sets a value indicating whether outdated exiled should be loaded or not. Declaration public bool ShouldLoadOutdatedExiled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldLoadOutdatedPlugins Gets or sets a value indicating whether outdated plugins should be loaded or not. Declaration public bool ShouldLoadOutdatedPlugins { get; set; } Property Value Type Description System.Boolean Implements IConfig Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.ConfigManager.html": {
    "href": "api/Exiled.Loader.ConfigManager.html",
    "title": "Class ConfigManager | EXILED Docs",
    "keywords": "Class ConfigManager Used to handle plugin configs. Inheritance System.Object ConfigManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public static class ConfigManager Methods | Improve this Doc View Source Clear() Clears the configs. Declaration public static bool Clear() Returns Type Description System.Boolean Returns a value indicating whether configs have been cleared successfully or not. | Improve this Doc View Source LoadConfig(IPlugin<IConfig>, Dictionary<String, Object>) Loads the config of a plugin using the actual distribution. Declaration public static IConfig LoadConfig(this IPlugin<IConfig> plugin, Dictionary<string, object> rawConfigs = null) Parameters Type Name Description IPlugin < IConfig > plugin The plugin which config will be loaded. System.Collections.Generic.Dictionary < System.String , System.Object > rawConfigs The raw configs to detect if the plugin already has generated configs. Returns Type Description IConfig The IConfig of the plugin. | Improve this Doc View Source LoadDefaultConfig(IPlugin<IConfig>, Dictionary<String, Object>) Loads the config of a plugin using the default distribution. Declaration public static IConfig LoadDefaultConfig(this IPlugin<IConfig> plugin, Dictionary<string, object> rawConfigs) Parameters Type Name Description IPlugin < IConfig > plugin The plugin which config will be loaded. System.Collections.Generic.Dictionary < System.String , System.Object > rawConfigs The raw configs to detect if the plugin already has generated configs. Returns Type Description IConfig The IConfig of the plugin. | Improve this Doc View Source LoadSeparatedConfig(IPlugin<IConfig>) Loads the config of a plugin using the separated distribution. Declaration public static IConfig LoadSeparatedConfig(this IPlugin<IConfig> plugin) Parameters Type Name Description IPlugin < IConfig > plugin The plugin which its config will be loaded. Returns Type Description IConfig The IConfig of the plugin. | Improve this Doc View Source LoadSorted(String) Loads all plugin configs. Declaration public static SortedDictionary<string, IConfig> LoadSorted(string rawConfigs) Parameters Type Name Description System.String rawConfigs The raw configs to be loaded. Returns Type Description System.Collections.Generic.SortedDictionary < System.String , IConfig > Returns a dictionary of loaded configs. | Improve this Doc View Source Read() Read all plugin configs. Declaration public static string Read() Returns Type Description System.String Returns the read configs. | Improve this Doc View Source Reload() Reads, Loads and Saves plugin configs. Declaration public static bool Reload() Returns Type Description System.Boolean Returns a value indicating if the reloading process has been completed successfully or not. | Improve this Doc View Source ReloadRemoteAdmin() Reloads RemoteAdmin configs. Declaration public static void ReloadRemoteAdmin() | Improve this Doc View Source Save(SortedDictionary<String, IConfig>) Saves plugin configs. Declaration public static bool Save(SortedDictionary<string, IConfig> configs) Parameters Type Name Description System.Collections.Generic.SortedDictionary < System.String , IConfig > configs The configs to be saved. Returns Type Description System.Boolean Returns a value indicating whether the configs have been saved successfully or not. | Improve this Doc View Source SaveDefaultConfig(String) Saves default distribution configs. Declaration public static bool SaveDefaultConfig(string configs) Parameters Type Name Description System.String configs The configs to be saved, already serialized in yaml format. Returns Type Description System.Boolean Returns a value indicating whether the configs have been saved successfully or not. | Improve this Doc View Source SaveSeparatedConfig(String, String) Saves separated distribution plugin configs. Declaration public static bool SaveSeparatedConfig(this string pluginPrefix, string configs) Parameters Type Name Description System.String pluginPrefix The prefix of the plugin which its config is going to be saved. System.String configs The configs to be saved, already serialized in yaml format. Returns Type Description System.Boolean Returns a value indicating whether the configs have been saved successfully or not."
  },
  "api/Exiled.Loader.Features.Configs.CommentGatheringTypeInspector.html": {
    "href": "api/Exiled.Loader.Features.Configs.CommentGatheringTypeInspector.html",
    "title": "Class CommentGatheringTypeInspector | EXILED Docs",
    "keywords": "Class CommentGatheringTypeInspector Spurce: https://dotnetfiddle.net/8M6iIE . Inheritance System.Object CommentGatheringTypeInspector Namespace : Exiled.Loader.Features.Configs Assembly : Exiled.Loader.dll Syntax public sealed class CommentGatheringTypeInspector : TypeInspectorSkeleton Constructors | Improve this Doc View Source CommentGatheringTypeInspector(ITypeInspector) Initializes a new instance of the CommentGatheringTypeInspector class. Declaration public CommentGatheringTypeInspector(ITypeInspector innerTypeDescriptor) Parameters Type Name Description ITypeInspector innerTypeDescriptor The inner type description instance. Methods | Improve this Doc View Source GetProperties(Type, Object) Declaration public override IEnumerable<IPropertyDescriptor> GetProperties(Type type, object container) Parameters Type Name Description System.Type type System.Object container Returns Type Description System.Collections.Generic.IEnumerable < IPropertyDescriptor > Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.Configs.CommentsObjectDescriptor.html": {
    "href": "api/Exiled.Loader.Features.Configs.CommentsObjectDescriptor.html",
    "title": "Class CommentsObjectDescriptor | EXILED Docs",
    "keywords": "Class CommentsObjectDescriptor Source: https://dotnetfiddle.net/8M6iIE . Inheritance System.Object CommentsObjectDescriptor Namespace : Exiled.Loader.Features.Configs Assembly : Exiled.Loader.dll Syntax public sealed class CommentsObjectDescriptor : IObjectDescriptor Constructors | Improve this Doc View Source CommentsObjectDescriptor(IObjectDescriptor, String) Initializes a new instance of the CommentsObjectDescriptor class. Declaration public CommentsObjectDescriptor(IObjectDescriptor innerDescriptor, string comment) Parameters Type Name Description IObjectDescriptor innerDescriptor The inner descriptor instance. System.String comment The comment to be written. Properties | Improve this Doc View Source Comment Gets the comment to be written. Declaration public string Comment { get; } Property Value Type Description System.String | Improve this Doc View Source ScalarStyle Declaration public ScalarStyle ScalarStyle { get; } Property Value Type Description ScalarStyle | Improve this Doc View Source StaticType Declaration public Type StaticType { get; } Property Value Type Description System.Type | Improve this Doc View Source Type Declaration public Type Type { get; } Property Value Type Description System.Type | Improve this Doc View Source Value Declaration public object Value { get; } Property Value Type Description System.Object Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.Configs.CommentsObjectGraphVisitor.html": {
    "href": "api/Exiled.Loader.Features.Configs.CommentsObjectGraphVisitor.html",
    "title": "Class CommentsObjectGraphVisitor | EXILED Docs",
    "keywords": "Class CommentsObjectGraphVisitor Source: https://dotnetfiddle.net/8M6iIE . Inheritance System.Object CommentsObjectGraphVisitor Namespace : Exiled.Loader.Features.Configs Assembly : Exiled.Loader.dll Syntax public sealed class CommentsObjectGraphVisitor : ChainedObjectGraphVisitor Constructors | Improve this Doc View Source CommentsObjectGraphVisitor(IObjectGraphVisitor<IEmitter>) Initializes a new instance of the CommentsObjectGraphVisitor class. Declaration public CommentsObjectGraphVisitor(IObjectGraphVisitor<IEmitter> nextVisitor) Parameters Type Name Description IObjectGraphVisitor < IEmitter > nextVisitor The next visitor instance. Methods | Improve this Doc View Source EnterMapping(IPropertyDescriptor, IObjectDescriptor, IEmitter) Declaration public override bool EnterMapping(IPropertyDescriptor key, IObjectDescriptor value, IEmitter context) Parameters Type Name Description IPropertyDescriptor key IObjectDescriptor value IEmitter context Returns Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.html": {
    "href": "api/Exiled.Loader.Features.Configs.CommentsPropertyDescriptor.html",
    "title": "Class CommentsPropertyDescriptor | EXILED Docs",
    "keywords": "Class CommentsPropertyDescriptor Source: https://dotnetfiddle.net/8M6iIE . Inheritance System.Object CommentsPropertyDescriptor Namespace : Exiled.Loader.Features.Configs Assembly : Exiled.Loader.dll Syntax public sealed class CommentsPropertyDescriptor : IPropertyDescriptor Constructors | Improve this Doc View Source CommentsPropertyDescriptor(IPropertyDescriptor) Initializes a new instance of the CommentsPropertyDescriptor class. Declaration public CommentsPropertyDescriptor(IPropertyDescriptor baseDescriptor) Parameters Type Name Description IPropertyDescriptor baseDescriptor The base descriptor instance. Properties | Improve this Doc View Source CanWrite Declaration public bool CanWrite { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Order Declaration public int Order { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ScalarStyle Declaration public ScalarStyle ScalarStyle { get; set; } Property Value Type Description ScalarStyle | Improve this Doc View Source Type Declaration public Type Type { get; } Property Value Type Description System.Type | Improve this Doc View Source TypeOverride Declaration public Type TypeOverride { get; set; } Property Value Type Description System.Type Methods | Improve this Doc View Source GetCustomAttribute<T>() Declaration public T GetCustomAttribute<T>() where T : Attribute Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Read(Object) Declaration public IObjectDescriptor Read(object target) Parameters Type Name Description System.Object target Returns Type Description IObjectDescriptor | Improve this Doc View Source Write(Object, Object) Declaration public void Write(object target, object value) Parameters Type Name Description System.Object target System.Object value Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.Configs.CustomConverters.AttachmentIdentifiersConverter.html": {
    "href": "api/Exiled.Loader.Features.Configs.CustomConverters.AttachmentIdentifiersConverter.html",
    "title": "Class AttachmentIdentifiersConverter | EXILED Docs",
    "keywords": "Class AttachmentIdentifiersConverter Converts a System.Collections.Generic.IEnumerable<T> of InventorySystem.Items.Firearms.Attachments.AttachmentName to Yaml configs and vice versa. Inheritance System.Object AttachmentIdentifiersConverter Namespace : Exiled.Loader.Features.Configs.CustomConverters Assembly : Exiled.Loader.dll Syntax public sealed class AttachmentIdentifiersConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Declaration public bool Accepts(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean | Improve this Doc View Source ReadYaml(IParser, Type) Declaration public object ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser System.Type type Returns Type Description System.Object | Improve this Doc View Source WriteYaml(IEmitter, Object, Type) Declaration public void WriteYaml(IEmitter emitter, object value, Type type) Parameters Type Name Description IEmitter emitter System.Object value System.Type type Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.Configs.CustomConverters.ColorConverter.html": {
    "href": "api/Exiled.Loader.Features.Configs.CustomConverters.ColorConverter.html",
    "title": "Class ColorConverter | EXILED Docs",
    "keywords": "Class ColorConverter Converts UnityEngine.Color to Yaml configs and vice versa. Inheritance System.Object ColorConverter Namespace : Exiled.Loader.Features.Configs.CustomConverters Assembly : Exiled.Loader.dll Syntax public sealed class ColorConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Declaration public bool Accepts(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean | Improve this Doc View Source ReadYaml(IParser, Type) Declaration public object ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser System.Type type Returns Type Description System.Object | Improve this Doc View Source WriteYaml(IEmitter, Object, Type) Declaration public void WriteYaml(IEmitter emitter, object value, Type type) Parameters Type Name Description IEmitter emitter System.Object value System.Type type Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.Configs.CustomConverters.html": {
    "href": "api/Exiled.Loader.Features.Configs.CustomConverters.html",
    "title": "Namespace Exiled.Loader.Features.Configs.CustomConverters | EXILED Docs",
    "keywords": "Namespace Exiled.Loader.Features.Configs.CustomConverters Classes AttachmentIdentifiersConverter Converts a System.Collections.Generic.IEnumerable<T> of InventorySystem.Items.Firearms.Attachments.AttachmentName to Yaml configs and vice versa. ColorConverter Converts UnityEngine.Color to Yaml configs and vice versa. VectorsConverter Converts a Vector2, Vector3 or Vector4 to Yaml configs and vice versa."
  },
  "api/Exiled.Loader.Features.Configs.CustomConverters.VectorsConverter.html": {
    "href": "api/Exiled.Loader.Features.Configs.CustomConverters.VectorsConverter.html",
    "title": "Class VectorsConverter | EXILED Docs",
    "keywords": "Class VectorsConverter Converts a Vector2, Vector3 or Vector4 to Yaml configs and vice versa. Inheritance System.Object VectorsConverter Namespace : Exiled.Loader.Features.Configs.CustomConverters Assembly : Exiled.Loader.dll Syntax public sealed class VectorsConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Declaration public bool Accepts(Type type) Parameters Type Name Description System.Type type Returns Type Description System.Boolean | Improve this Doc View Source ReadYaml(IParser, Type) Declaration public object ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser System.Type type Returns Type Description System.Object | Improve this Doc View Source WriteYaml(IEmitter, Object, Type) Declaration public void WriteYaml(IEmitter emitter, object value, Type type) Parameters Type Name Description IEmitter emitter System.Object value System.Type type Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.Configs.html": {
    "href": "api/Exiled.Loader.Features.Configs.html",
    "title": "Namespace Exiled.Loader.Features.Configs | EXILED Docs",
    "keywords": "Namespace Exiled.Loader.Features.Configs Classes CommentGatheringTypeInspector Spurce: https://dotnetfiddle.net/8M6iIE . CommentsObjectDescriptor Source: https://dotnetfiddle.net/8M6iIE . CommentsObjectGraphVisitor Source: https://dotnetfiddle.net/8M6iIE . CommentsPropertyDescriptor Source: https://dotnetfiddle.net/8M6iIE . ValidatingNodeDeserializer Basic configs validation."
  },
  "api/Exiled.Loader.Features.Configs.ValidatingNodeDeserializer.html": {
    "href": "api/Exiled.Loader.Features.Configs.ValidatingNodeDeserializer.html",
    "title": "Class ValidatingNodeDeserializer | EXILED Docs",
    "keywords": "Class ValidatingNodeDeserializer Basic configs validation. Inheritance System.Object ValidatingNodeDeserializer Namespace : Exiled.Loader.Features.Configs Assembly : Exiled.Loader.dll Syntax public sealed class ValidatingNodeDeserializer : INodeDeserializer Constructors | Improve this Doc View Source ValidatingNodeDeserializer(INodeDeserializer) Initializes a new instance of the ValidatingNodeDeserializer class. Declaration public ValidatingNodeDeserializer(INodeDeserializer nodeDeserializer) Parameters Type Name Description INodeDeserializer nodeDeserializer The node deserializer instance. Methods | Improve this Doc View Source Deserialize(IParser, Type, Func<IParser, Type, Object>, out Object) Declaration public bool Deserialize(IParser parser, Type expectedType, Func<IParser, Type, object> nestedObjectDeserializer, out object value) Parameters Type Name Description IParser parser System.Type expectedType System.Func < IParser , System.Type , System.Object > nestedObjectDeserializer System.Object value Returns Type Description System.Boolean Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Features.html": {
    "href": "api/Exiled.Loader.Features.html",
    "title": "Namespace Exiled.Loader.Features | EXILED Docs",
    "keywords": "Namespace Exiled.Loader.Features Classes LoaderMessages A class that contains the different EXILED loader messages. MultiAdminFeatures This class implements all possible MultiAdmin features. PluginPriorityComparer Comparator implementation according to plugin priorities. Enums MultiAdminFeatures.ActionType MultiAdminFeatures.EventType MultiAdminFeatures.ModFeatures"
  },
  "api/Exiled.Loader.Features.LoaderMessages.html": {
    "href": "api/Exiled.Loader.Features.LoaderMessages.html",
    "title": "Class LoaderMessages | EXILED Docs",
    "keywords": "Class LoaderMessages A class that contains the different EXILED loader messages. Inheritance System.Object LoaderMessages Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader.Features Assembly : Exiled.Loader.dll Syntax public static class LoaderMessages Properties | Improve this Doc View Source Christmas Gets the christmas loader message. Declaration public static string Christmas { get; } Property Value Type Description System.String | Improve this Doc View Source Default Gets the default loader message. Declaration public static string Default { get; } Property Value Type Description System.String | Improve this Doc View Source EasterEgg Gets the easter egg loader message. Declaration public static string EasterEgg { get; } Property Value Type Description System.String | Improve this Doc View Source Halloween Gets the halloween loader message. Declaration public static string Halloween { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetMessage() Gets the loader message according to the actual month. Declaration public static string GetMessage() Returns Type Description System.String The correspondent loader message."
  },
  "api/Exiled.Loader.Features.MultiAdminFeatures.ActionType.html": {
    "href": "api/Exiled.Loader.Features.MultiAdminFeatures.ActionType.html",
    "title": "Enum MultiAdminFeatures.ActionType | EXILED Docs",
    "keywords": "Enum MultiAdminFeatures.ActionType Namespace : Exiled.Loader.Features Assembly : Exiled.Loader.dll Syntax public enum ActionType Fields Name Description SET_SUPPORTED_FEATURES Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.Loader.Features.MultiAdminFeatures.EventType.html": {
    "href": "api/Exiled.Loader.Features.MultiAdminFeatures.EventType.html",
    "title": "Enum MultiAdminFeatures.EventType | EXILED Docs",
    "keywords": "Enum MultiAdminFeatures.EventType Namespace : Exiled.Loader.Features Assembly : Exiled.Loader.dll Syntax public enum EventType Fields Name Description ROUND_END ROUND_START SERVER_FULL SERVER_START WAITING_FOR_PLAYERS Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.Loader.Features.MultiAdminFeatures.html": {
    "href": "api/Exiled.Loader.Features.MultiAdminFeatures.html",
    "title": "Class MultiAdminFeatures | EXILED Docs",
    "keywords": "Class MultiAdminFeatures This class implements all possible MultiAdmin features. Inheritance System.Object MultiAdminFeatures Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader.Features Assembly : Exiled.Loader.dll Syntax public static class MultiAdminFeatures Fields | Improve this Doc View Source MULTIADMIN_CONSOLE_PREFIX Declaration public const string MULTIADMIN_CONSOLE_PREFIX = \"-multiadmin\" Field Value Type Description System.String | Improve this Doc View Source MULTIADMIN_EVENT_SUFFIX Declaration public const string MULTIADMIN_EVENT_SUFFIX = \"event\" Field Value Type Description System.String | Improve this Doc View Source MULTIADMIN_PREFIX Declaration public const string MULTIADMIN_PREFIX = \"multiadmin\" Field Value Type Description System.String | Improve this Doc View Source MultiAdminKeySeparator Declaration public static readonly char[] MultiAdminKeySeparator Field Value Type Description System.Char [] | Improve this Doc View Source MultiAdminKeySeparatorStr Declaration public static readonly string MultiAdminKeySeparatorStr Field Value Type Description System.String | Improve this Doc View Source MultiAdminModFeatures Declaration public static readonly MultiAdminFeatures.ModFeatures MultiAdminModFeatures Field Value Type Description MultiAdminFeatures.ModFeatures | Improve this Doc View Source MultiAdminUsed Declaration public static readonly bool MultiAdminUsed Field Value Type Description System.Boolean | Improve this Doc View Source MultiAdminValueSeparator Declaration public static readonly char[] MultiAdminValueSeparator Field Value Type Description System.Char [] | Improve this Doc View Source MultiAdminValueSeparatorStr Declaration public static readonly string MultiAdminValueSeparatorStr Field Value Type Description System.String | Improve this Doc View Source MultiAdminVersion Declaration public static readonly string MultiAdminVersion Field Value Type Description System.String Methods | Improve this Doc View Source CallAction(MultiAdminFeatures.ActionType, Object) Declaration public static bool CallAction(MultiAdminFeatures.ActionType actionType, object value = null) Parameters Type Name Description MultiAdminFeatures.ActionType actionType System.Object value Returns Type Description System.Boolean | Improve this Doc View Source CallEvent(MultiAdminFeatures.EventType) Declaration public static bool CallEvent(MultiAdminFeatures.EventType eventType) Parameters Type Name Description MultiAdminFeatures.EventType eventType Returns Type Description System.Boolean | Improve this Doc View Source ConvertToMultiAdminAvailable(MultiAdminFeatures.ActionType) Declaration public static string ConvertToMultiAdminAvailable(MultiAdminFeatures.ActionType actionType) Parameters Type Name Description MultiAdminFeatures.ActionType actionType Returns Type Description System.String | Improve this Doc View Source ConvertToMultiAdminAvailable(MultiAdminFeatures.EventType) Declaration public static string ConvertToMultiAdminAvailable(MultiAdminFeatures.EventType eventType) Parameters Type Name Description MultiAdminFeatures.EventType eventType Returns Type Description System.String | Improve this Doc View Source PrepareStr(String) Declaration public static string PrepareStr(string value) Parameters Type Name Description System.String value Returns Type Description System.String"
  },
  "api/Exiled.Loader.Features.MultiAdminFeatures.ModFeatures.html": {
    "href": "api/Exiled.Loader.Features.MultiAdminFeatures.ModFeatures.html",
    "title": "Enum MultiAdminFeatures.ModFeatures | EXILED Docs",
    "keywords": "Enum MultiAdminFeatures.ModFeatures Namespace : Exiled.Loader.Features Assembly : Exiled.Loader.dll Syntax [Flags] public enum ModFeatures Fields Name Description All CustomEvents None Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.Loader.Features.PluginPriorityComparer.html": {
    "href": "api/Exiled.Loader.Features.PluginPriorityComparer.html",
    "title": "Class PluginPriorityComparer | EXILED Docs",
    "keywords": "Class PluginPriorityComparer Comparator implementation according to plugin priorities. Inheritance System.Object PluginPriorityComparer Implements System.Collections.Generic.IComparer < IPlugin < IConfig >> Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader.Features Assembly : Exiled.Loader.dll Syntax public sealed class PluginPriorityComparer : IComparer<IPlugin<IConfig>> Fields | Improve this Doc View Source Instance Public instance. Declaration public static readonly PluginPriorityComparer Instance Field Value Type Description PluginPriorityComparer Methods | Improve this Doc View Source Compare(IPlugin<IConfig>, IPlugin<IConfig>) Declaration public int Compare(IPlugin<IConfig> x, IPlugin<IConfig> y) Parameters Type Name Description IPlugin < IConfig > x IPlugin < IConfig > y Returns Type Description System.Int32 Implements System.Collections.Generic.IComparer<T> Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.html": {
    "href": "api/Exiled.Loader.html",
    "title": "Namespace Exiled.Loader | EXILED Docs",
    "keywords": "Namespace Exiled.Loader Classes AutoUpdateFiles Automatically updates with Reference used to generate Exiled. Config The configs of the loader. ConfigManager Used to handle plugin configs. Loader Used to handle plugins. LoaderPlugin The PluginAPI Plugin class for the EXILED Loader. PathExtensions Contains the extensions to get a path. TranslationManager Used to handle plugin translations. Enums Loader.TOKEN_ELEVATION_TYPE Loader.TOKEN_INFORMATION_CLASS"
  },
  "api/Exiled.Loader.Loader.html": {
    "href": "api/Exiled.Loader.Loader.html",
    "title": "Class Loader | EXILED Docs",
    "keywords": "Class Loader Used to handle plugins. Inheritance System.Object Loader Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public class Loader Constructors | Improve this Doc View Source Loader() Initializes a new instance of the Loader class. Declaration public Loader() Properties | Improve this Doc View Source Dependencies Gets plugin dependencies. Declaration public static List<Assembly> Dependencies { get; } Property Value Type Description System.Collections.Generic.List < System.Reflection.Assembly > | Improve this Doc View Source Deserializer Gets or sets the deserializer for configs and translations. Declaration public static IDeserializer Deserializer { get; set; } Property Value Type Description IDeserializer | Improve this Doc View Source Locations Gets a dictionary containing the file paths of assemblies. Declaration public static Dictionary<Assembly, string> Locations { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.Reflection.Assembly , System.String > | Improve this Doc View Source Plugins Gets the plugins list. Declaration public static SortedSet<IPlugin<IConfig>> Plugins { get; } Property Value Type Description System.Collections.Generic.SortedSet < IPlugin < IConfig >> | Improve this Doc View Source Random Gets the initialized global random class. Declaration public static Random Random { get; } Property Value Type Description System.Random | Improve this Doc View Source Serializer Gets or sets the serializer for configs and translations. Declaration public static ISerializer Serializer { get; set; } Property Value Type Description ISerializer | Improve this Doc View Source Version Gets the version of the assembly. Declaration public static Version Version { get; } Property Value Type Description System.Version Methods | Improve this Doc View Source CreatePlugin(Assembly) Create a plugin instance. Declaration public static IPlugin<IConfig> CreatePlugin(Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly The plugin assembly. Returns Type Description IPlugin < IConfig > Returns the created plugin instance or null . | Improve this Doc View Source DisablePlugins() Disables all plugins. Declaration public static void DisablePlugins() | Improve this Doc View Source EnablePlugins() Enables all plugins. Declaration public static void EnablePlugins() | Improve this Doc View Source GetPlugin(String) Gets a plugin with its prefix or name. Declaration public static IPlugin<IConfig> GetPlugin(string args) Parameters Type Name Description System.String args The name or prefix of the plugin (Using the prefix is recommended). Returns Type Description IPlugin < IConfig > The desired plugin, null if not found. | Improve this Doc View Source LoadAssembly(String) Loads an assembly. Declaration public static Assembly LoadAssembly(string path) Parameters Type Name Description System.String path The path to load the assembly from. Returns Type Description System.Reflection.Assembly Returns the loaded assembly or null . | Improve this Doc View Source LoadPlugins() Loads all plugins. Declaration public static void LoadPlugins() | Improve this Doc View Source ReloadPlugins() Reloads all plugins. Declaration public static void ReloadPlugins() | Improve this Doc View Source Run(Assembly[]) Runs the plugin manager, by loading all dependencies, plugins, configs and then enables all plugins. Declaration public void Run(Assembly[] dependencies = null) Parameters Type Name Description System.Reflection.Assembly [] dependencies The dependencies that could have been loaded by Exiled.Bootstrap. Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.Loader.TOKEN_ELEVATION_TYPE.html": {
    "href": "api/Exiled.Loader.Loader.TOKEN_ELEVATION_TYPE.html",
    "title": "Enum Loader.TOKEN_ELEVATION_TYPE | EXILED Docs",
    "keywords": "Enum Loader.TOKEN_ELEVATION_TYPE Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public enum TOKEN_ELEVATION_TYPE Fields Name Description TokenElevationTypeDefault TokenElevationTypeFull TokenElevationTypeLimited Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.Loader.Loader.TOKEN_INFORMATION_CLASS.html": {
    "href": "api/Exiled.Loader.Loader.TOKEN_INFORMATION_CLASS.html",
    "title": "Enum Loader.TOKEN_INFORMATION_CLASS | EXILED Docs",
    "keywords": "Enum Loader.TOKEN_INFORMATION_CLASS Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public enum TOKEN_INFORMATION_CLASS Fields Name Description MaxTokenInfoClass TokenAccessInformation TokenAuditPolicy TokenDefaultDacl TokenElevation TokenElevationType TokenGroups TokenGroupsAndPrivileges TokenHasRestrictions TokenImpersonationLevel TokenIntegrityLevel TokenLinkedToken TokenLogonSid TokenMandatoryPolicy TokenOrigin TokenOwner TokenPrimaryGroup TokenPrivileges TokenRestrictedSids TokenSandBoxInert TokenSessionId TokenSessionReference TokenSource TokenStatistics TokenType TokenUIAccess TokenUser TokenVirtualizationAllowed TokenVirtualizationEnabled Extension Methods ReflectionExtensions.CopyProperties(Object)"
  },
  "api/Exiled.Loader.LoaderPlugin.html": {
    "href": "api/Exiled.Loader.LoaderPlugin.html",
    "title": "Class LoaderPlugin | EXILED Docs",
    "keywords": "Class LoaderPlugin The PluginAPI Plugin class for the EXILED Loader. Inheritance System.Object LoaderPlugin Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public class LoaderPlugin Fields | Improve this Doc View Source Config The config for the EXILED Loader. Declaration [PluginConfig] public static Config Config Field Value Type Description Config Methods | Improve this Doc View Source Enable() Called by PluginAPI when the plugin is enabled. Declaration [PluginEntryPoint(\"Exiled Loader\", null, \"Loads the EXILED Plugin Framework.\", \"Exiled-Team\")] public void Enable() Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Loader.PathExtensions.html": {
    "href": "api/Exiled.Loader.PathExtensions.html",
    "title": "Class PathExtensions | EXILED Docs",
    "keywords": "Class PathExtensions Contains the extensions to get a path. Inheritance System.Object PathExtensions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public static class PathExtensions Methods | Improve this Doc View Source GetPath(IPlugin<IConfig>) Gets a path of a plugin. Declaration public static string GetPath(this IPlugin<IConfig> plugin) Parameters Type Name Description IPlugin < IConfig > plugin The IPlugin<TConfig> . Returns Type Description System.String The path of the plugin or null . Exceptions Type Condition System.ArgumentNullException The provided plugin is null . | Improve this Doc View Source GetPath(Assembly) Gets a path of an assembly. Declaration public static string GetPath(this Assembly assembly) Parameters Type Name Description System.Reflection.Assembly assembly The System.Reflection.Assembly . Returns Type Description System.String The path of the assembly or null . Exceptions Type Condition System.ArgumentNullException The provided assembly is null ."
  },
  "api/Exiled.Loader.TranslationManager.html": {
    "href": "api/Exiled.Loader.TranslationManager.html",
    "title": "Class TranslationManager | EXILED Docs",
    "keywords": "Class TranslationManager Used to handle plugin translations. Inheritance System.Object TranslationManager Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Loader Assembly : Exiled.Loader.dll Syntax public static class TranslationManager Methods | Improve this Doc View Source Clear() Clears the translations. Declaration public static bool Clear() Returns Type Description System.Boolean Returns a value indicating whether translations have been cleared successfully or not. | Improve this Doc View Source Load(String) Loads all plugin translations. Declaration public static SortedDictionary<string, ITranslation> Load(string rawTranslations) Parameters Type Name Description System.String rawTranslations The raw translations to be loaded. Returns Type Description System.Collections.Generic.SortedDictionary < System.String , ITranslation > Returns a dictionary of loaded translations. | Improve this Doc View Source LoadTranslation(IPlugin<IConfig>, Dictionary<String, Object>) Loads the translations of a plugin based on the actual distribution. Declaration public static ITranslation LoadTranslation(this IPlugin<IConfig> plugin, Dictionary<string, object> rawTranslations = null) Parameters Type Name Description IPlugin < IConfig > plugin The plugin which its translation has to be loaded. System.Collections.Generic.Dictionary < System.String , System.Object > rawTranslations The raw translations to check whether or not the plugin already has a translation config. Returns Type Description ITranslation The ITranslation of the desired plugin. | Improve this Doc View Source Read() Read all plugin translations. Declaration public static string Read() Returns Type Description System.String Returns the read translations. | Improve this Doc View Source Reload() Reads, Loads and Saves plugin translations. Declaration public static bool Reload() Returns Type Description System.Boolean Returns a value indicating if the reloading process has been completed successfully or not. | Improve this Doc View Source Save(SortedDictionary<String, ITranslation>) Saves plugin translations. Declaration public static bool Save(SortedDictionary<string, ITranslation> translations) Parameters Type Name Description System.Collections.Generic.SortedDictionary < System.String , ITranslation > translations The translations to be saved. Returns Type Description System.Boolean Returns a value indicating whether the translations have been saved successfully or not. | Improve this Doc View Source SaveDefaultTranslation(String) Saves default distribution translations. Declaration public static bool SaveDefaultTranslation(string translations) Parameters Type Name Description System.String translations The translations to be saved, already serialized in yaml format. Returns Type Description System.Boolean Returns a value indicating whether the translations have been saved successfully or not. | Improve this Doc View Source SaveSeparatedTranslation(String, String) Saves plugin translations based on the separated distribution. Declaration public static bool SaveSeparatedTranslation(this string pluginPrefix, string translations) Parameters Type Name Description System.String pluginPrefix The prefix of the plugin which its translation is going to be saved. System.String translations The translations to be saved, already serialized in yaml format. Returns Type Description System.Boolean Returns a value indicating whether the translations have been saved successfully or not."
  },
  "api/Exiled.Permissions.Commands.Permissions.Add.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Add.html",
    "title": "Class Add | EXILED Docs",
    "keywords": "Class Add Adds a permission to a group. Inheritance System.Object Add Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions Assembly : Exiled.Permissions.dll Syntax public class Add : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Commands.Permissions.Group.Add.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Group.Add.html",
    "title": "Class Add | EXILED Docs",
    "keywords": "Class Add Adds a group to permissions. Inheritance System.Object Add Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions.Group Assembly : Exiled.Permissions.dll Syntax public class Add : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Commands.Permissions.Group.Group.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Group.Group.html",
    "title": "Class Group | EXILED Docs",
    "keywords": "Class Group Handles commands about permissions groups. Inheritance System.Object CommandSystem.CommandHandler ParentCommand Group Implements CommandSystem.ICommandHandler CommandSystem.ICommand Inherited Members ParentCommand.Execute(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) CommandSystem.CommandHandler.Commands CommandSystem.CommandHandler.CommandAliases CommandSystem.CommandHandler.TryGetCommand(System.String, CommandSystem.ICommand) CommandSystem.CommandHandler.RegisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.UnregisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.ClearCommands() CommandSystem.CommandHandler.AllCommands System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions.Group Assembly : Exiled.Permissions.dll Syntax public class Group : ParentCommand, ICommandHandler, ICommand Constructors | Improve this Doc View Source Group() Initializes a new instance of the Group class. Declaration public Group() Properties | Improve this Doc View Source Aliases Declaration public override string[] Aliases { get; } Property Value Type Description System.String [] Overrides ParentCommand.Aliases | Improve this Doc View Source Command Declaration public override string Command { get; } Property Value Type Description System.String Overrides ParentCommand.Command | Improve this Doc View Source Description Declaration public override string Description { get; } Property Value Type Description System.String Overrides ParentCommand.Description Methods | Improve this Doc View Source ExecuteParent(ArraySegment<String>, ICommandSender, out String) Declaration protected override bool ExecuteParent(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Overrides ParentCommand.ExecuteParent(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) | Improve this Doc View Source LoadGeneratedCommands() Declaration public override void LoadGeneratedCommands() Overrides CommandSystem.CommandHandler.LoadGeneratedCommands() Implements CommandSystem.ICommandHandler CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Commands.Permissions.Group.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Group.html",
    "title": "Namespace Exiled.Permissions.Commands.Permissions.Group | EXILED Docs",
    "keywords": "Namespace Exiled.Permissions.Commands.Permissions.Group Classes Add Adds a group to permissions. Group Handles commands about permissions groups. Remove Removes a group to permissions."
  },
  "api/Exiled.Permissions.Commands.Permissions.Group.Remove.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Group.Remove.html",
    "title": "Class Remove | EXILED Docs",
    "keywords": "Class Remove Removes a group to permissions. Inheritance System.Object Remove Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions.Group Assembly : Exiled.Permissions.dll Syntax public class Remove : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Commands.Permissions.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.html",
    "title": "Namespace Exiled.Permissions.Commands.Permissions | EXILED Docs",
    "keywords": "Namespace Exiled.Permissions.Commands.Permissions Classes Add Adds a permission to a group. Permissions Handles commands about permissions. Reload Reloads all permissions. Remove Removes a permission from a group."
  },
  "api/Exiled.Permissions.Commands.Permissions.Permissions.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Permissions.html",
    "title": "Class Permissions | EXILED Docs",
    "keywords": "Class Permissions Handles commands about permissions. Inheritance System.Object CommandSystem.CommandHandler ParentCommand Permissions Implements CommandSystem.ICommandHandler CommandSystem.ICommand Inherited Members ParentCommand.Execute(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) CommandSystem.CommandHandler.Commands CommandSystem.CommandHandler.CommandAliases CommandSystem.CommandHandler.TryGetCommand(System.String, CommandSystem.ICommand) CommandSystem.CommandHandler.RegisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.UnregisterCommand(CommandSystem.ICommand) CommandSystem.CommandHandler.ClearCommands() CommandSystem.CommandHandler.AllCommands System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions Assembly : Exiled.Permissions.dll Syntax [CommandHandler(typeof(GameConsoleCommandHandler))] public class Permissions : ParentCommand, ICommandHandler, ICommand Constructors | Improve this Doc View Source Permissions() Initializes a new instance of the Permissions class. Declaration public Permissions() Properties | Improve this Doc View Source Aliases Declaration public override string[] Aliases { get; } Property Value Type Description System.String [] Overrides ParentCommand.Aliases | Improve this Doc View Source Command Declaration public override string Command { get; } Property Value Type Description System.String Overrides ParentCommand.Command | Improve this Doc View Source Description Declaration public override string Description { get; } Property Value Type Description System.String Overrides ParentCommand.Description Methods | Improve this Doc View Source ExecuteParent(ArraySegment<String>, ICommandSender, out String) Declaration protected override bool ExecuteParent(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Overrides ParentCommand.ExecuteParent(System.ArraySegment<System.String>, CommandSystem.ICommandSender, System.String) | Improve this Doc View Source LoadGeneratedCommands() Declaration public override void LoadGeneratedCommands() Overrides CommandSystem.CommandHandler.LoadGeneratedCommands() Implements CommandSystem.ICommandHandler CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Commands.Permissions.Reload.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Reload.html",
    "title": "Class Reload | EXILED Docs",
    "keywords": "Class Reload Reloads all permissions. Inheritance System.Object Reload Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions Assembly : Exiled.Permissions.dll Syntax public class Reload : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Commands.Permissions.Remove.html": {
    "href": "api/Exiled.Permissions.Commands.Permissions.Remove.html",
    "title": "Class Remove | EXILED Docs",
    "keywords": "Class Remove Removes a permission from a group. Inheritance System.Object Remove Implements CommandSystem.ICommand Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Commands.Permissions Assembly : Exiled.Permissions.dll Syntax public class Remove : ICommand Properties | Improve this Doc View Source Aliases Declaration public string[] Aliases { get; } Property Value Type Description System.String [] | Improve this Doc View Source Command Declaration public string Command { get; } Property Value Type Description System.String | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(ArraySegment<String>, ICommandSender, out String) Declaration public bool Execute(ArraySegment<string> arguments, ICommandSender sender, out string response) Parameters Type Name Description System.ArraySegment < System.String > arguments CommandSystem.ICommandSender sender System.String response Returns Type Description System.Boolean Implements CommandSystem.ICommand Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Config.html": {
    "href": "api/Exiled.Permissions.Config.html",
    "title": "Class Config | EXILED Docs",
    "keywords": "Class Config Inheritance System.Object Config Implements IConfig Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions Assembly : Exiled.Permissions.dll Syntax public sealed class Config : IConfig Constructors | Improve this Doc View Source Config() Initializes a new instance of the Config class. Declaration public Config() Properties | Improve this Doc View Source Debug Declaration public bool Debug { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Folder Gets the permissions folder path. Declaration public string Folder { get; } Property Value Type Description System.String | Improve this Doc View Source FullPath Gets the permissions full path. Declaration public string FullPath { get; } Property Value Type Description System.String | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldDebugBeShown Gets a value indicating whether the debug should be shown or not. Declaration public bool ShouldDebugBeShown { get; } Property Value Type Description System.Boolean Implements IConfig Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Extensions.html": {
    "href": "api/Exiled.Permissions.Extensions.html",
    "title": "Namespace Exiled.Permissions.Extensions | EXILED Docs",
    "keywords": "Namespace Exiled.Permissions.Extensions Classes Permissions"
  },
  "api/Exiled.Permissions.Extensions.Permissions.html": {
    "href": "api/Exiled.Permissions.Extensions.Permissions.html",
    "title": "Class Permissions | EXILED Docs",
    "keywords": "Class Permissions Inheritance System.Object Permissions Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Extensions Assembly : Exiled.Permissions.dll Syntax public static class Permissions Properties | Improve this Doc View Source DefaultGroup Gets the default group. Declaration public static Group DefaultGroup { get; } Property Value Type Description Group | Improve this Doc View Source Groups Gets groups list. Declaration public static Dictionary<string, Group> Groups { get; } Property Value Type Description System.Collections.Generic.Dictionary < System.String , Group > Methods | Improve this Doc View Source CheckPermission(CommandSender, String) Checks a sender's permission. Declaration public static bool CheckPermission(this CommandSender sender, string permission) Parameters Type Name Description CommandSender sender The sender to be checked. System.String permission The permission to be checked. Returns Type Description System.Boolean Returns a value indicating whether the user has the permission or not. | Improve this Doc View Source CheckPermission(ICommandSender, String) Checks a sender's permission. Declaration public static bool CheckPermission(this ICommandSender sender, string permission) Parameters Type Name Description CommandSystem.ICommandSender sender The sender to be checked. System.String permission The permission to be checked. Returns Type Description System.Boolean Returns a value indicating whether the user has the permission or not. | Improve this Doc View Source CheckPermission(Player, PlayerPermissions[]) Checks a player's permission. Declaration public static bool CheckPermission(this Player player, params PlayerPermissions[] permissions) Parameters Type Name Description Player player The player to be checked. PlayerPermissions [] permissions The permission for checking. Returns Type Description System.Boolean Returns a value indicating whether the user has the permission or not. | Improve this Doc View Source CheckPermission(Player, String) Checks a player's permission. Declaration public static bool CheckPermission(this Player player, string permission) Parameters Type Name Description Player player The player to be checked. System.String permission The permission to be checked. Returns Type Description System.Boolean true if the player's current or native group has permissions; otherwise, false . | Improve this Doc View Source Create() Create permissions. Declaration public static void Create() | Improve this Doc View Source Reload() Reloads permissions. Declaration public static void Reload() | Improve this Doc View Source Save() Save permissions. Declaration public static void Save()"
  },
  "api/Exiled.Permissions.Features.Group.html": {
    "href": "api/Exiled.Permissions.Features.Group.html",
    "title": "Class Group | EXILED Docs",
    "keywords": "Class Group Represents a player's group. Inheritance System.Object Group Inherited Members System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions.Features Assembly : Exiled.Permissions.dll Syntax public class Group Properties | Improve this Doc View Source CombinedPermissions Gets the combined permissions of the group plus all inherited groups. Declaration public List<string> CombinedPermissions { get; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source Inheritance Gets or sets the group inheritance. Declaration public List<string> Inheritance { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source IsDefault Gets or sets a value indicating whether group is the default one or not. Declaration public bool IsDefault { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Permissions Gets or sets the group permissions. Declaration public List<string> Permissions { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > Extension Methods ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "api/Exiled.Permissions.Features.html": {
    "href": "api/Exiled.Permissions.Features.html",
    "title": "Namespace Exiled.Permissions.Features | EXILED Docs",
    "keywords": "Namespace Exiled.Permissions.Features Classes Group Represents a player's group."
  },
  "api/Exiled.Permissions.html": {
    "href": "api/Exiled.Permissions.html",
    "title": "Namespace Exiled.Permissions | EXILED Docs",
    "keywords": "Namespace Exiled.Permissions Classes Config Permissions Handles all plugin-related permissions, for executing commands, doing actions and so on."
  },
  "api/Exiled.Permissions.Permissions.html": {
    "href": "api/Exiled.Permissions.Permissions.html",
    "title": "Class Permissions | EXILED Docs",
    "keywords": "Class Permissions Handles all plugin-related permissions, for executing commands, doing actions and so on. Inheritance System.Object Plugin < Config > Permissions Implements IPlugin < Config > System.IComparable < IPlugin < IConfig >> Inherited Members Plugin<Config>.Assembly Plugin<Config>.Name Plugin<Config>.Prefix Plugin<Config>.Author Plugin<Config>.Priority Plugin<Config>.Version Plugin<Config>.RequiredExiledVersion Plugin<Config>.IgnoreRequiredVersionCheck Plugin<Config>.Commands Plugin<Config>.Config Plugin<Config>.InternalTranslation Plugin<Config>.ConfigPath Plugin<Config>.TranslationPath Plugin<Config>.OnReloaded() Plugin<Config>.OnRegisteringCommands() Plugin<Config>.OnUnregisteringCommands() Plugin<Config>.CompareTo(IPlugin<IConfig>) System.Object.ToString() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.ReferenceEquals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() Namespace : Exiled.Permissions Assembly : Exiled.Permissions.dll Syntax public sealed class Permissions : Plugin<Config>, IPlugin<Config>, IComparable<IPlugin<IConfig>> Properties | Improve this Doc View Source Instance Gets the permissions instance. Declaration public static Permissions Instance { get; } Property Value Type Description Permissions Methods | Improve this Doc View Source OnDisabled() Declaration public override void OnDisabled() Overrides Exiled.API.Features.Plugin<Exiled.Permissions.Config>.OnDisabled() | Improve this Doc View Source OnEnabled() Declaration public override void OnEnabled() Overrides Exiled.API.Features.Plugin<Exiled.Permissions.Config>.OnEnabled() Implements IPlugin<TConfig> System.IComparable<T> Extension Methods ConfigManager.LoadConfig(IPlugin<IConfig>, Dictionary<String, Object>) ConfigManager.LoadDefaultConfig(IPlugin<IConfig>, Dictionary<String, Object>) ConfigManager.LoadSeparatedConfig(IPlugin<IConfig>) PathExtensions.GetPath(IPlugin<IConfig>) TranslationManager.LoadTranslation(IPlugin<IConfig>, Dictionary<String, Object>) ReflectionExtensions.CopyProperties(Object, Object)"
  },
  "docs/Contributing/Intro.html": {
    "href": "docs/Contributing/Intro.html",
    "title": "Contributing to EXILED | EXILED Docs",
    "keywords": "Contributing to EXILED This is a simple tutorial guiding you to contribute to our framework. Forking EXILED First, create a fork of our GitHub repository . Then, clone it to your computer like so: git clone https://github.com/your-username/EXILED.git Open a terminal in your forked EXILED folder and run git checkout dev . This will switch you to the dev branch, which all pull requests should be submitted to. Setting EXILED_REFERENCES If you haven't already, install the SCP: Secret Laboratory Dedicated Server through Steam or extract this zip file to an easily accessible folder. Windows users Open the Environment Variables menu by searching for Environment Variables in the Start Menu. Create a new environment variable titled EXILED_REFERENCES . The value should point to your_steamapps_directory/common/SCP Secret Laboratory Dedicated Server/SCPSL_Data/Managed , or to the folder where you extracted the zip file mentioned earlier. Linux users Add export EXILED_REFERENCES=\"PATH\" to your ~/.bashrc or similar file. PATH should point to your_steamapps_directory/common/SCP Secret Laboratory Dedicated Server/SCPSL_Data/Managed , or to the folder where you extracted the zip file mentioned earlier. You should now be able to open the EXILED directory in your favorite IDE. Once you are done, test your changes thoroughly, and then submit a pull request to the main EXILED repository. Make sure you are targeting the dev branch, not master ! Happy coding! Contributing docs Documentation is built using Docosaurus"
  },
  "docs/Installation/Automatic/Linux.html": {
    "href": "docs/Installation/Automatic/Linux.html",
    "title": "Automatic Linux Installation | EXILED Docs",
    "keywords": "Automatic Linux Installation Download Exiled.Installer-Linux from here . Move it into your server directory and run it using ./Exiled.Installer-Linux Make sure the server directory is the one where LocalAdmin executable is found. Usage Usage: Exiled.Installer [options] [[--] <additional arguments>...]] Options: -p, --path <path> (REQUIRED) Path to the folder with the SL server [default: YourWorkingFolder] --appdata <appdata> (REQUIRED) Forces the folder to be the AppData folder (useful for containers when pterodactyl runs as root) [default: YourAppDataPath] --pre-releases Includes pre-releases [default: False] --target-version <target-version> Target version for installation --github--token <github--token> Uses a token for auth in case the rate limit is exceeded (no permissions required) --exit Automatically exits the application anyway --get-versions Gets all possible versions for installation --version Show version information -?, -h, --help Show help and usage information Additional Arguments: Arguments passed to the application that is being run. Examples ##### Installation in a specific folder, specific version and specific appdata folder powershell title=\"Basic installation in the folder you are in\" .\\Exiled.Installer-Linux --pre-releases powershell title=\"Installation in a specific folder, specific version and specific appdata folder\" .\\Exiled.Installer-Linux -p /home/user/scpsl/server --appdata /home/user/scpsl --target-version 2.0.8"
  },
  "docs/Installation/Automatic/Windows.html": {
    "href": "docs/Installation/Automatic/Windows.html",
    "title": "Automatic Windows Installation | EXILED Docs",
    "keywords": "Automatic Windows Installation Download Exiled.Installer-Win.exe from here . Move it into your server directory and double click the .exe. Make sure the server directory is the one where LocalAdmin.exe is found. Usage Usage: Exiled.Installer [options] [[--] <additional arguments>...]] Options: -p, --path <path> (REQUIRED) Path to the folder with the SL server [default: YourWorkingFolder] --appdata <appdata> (REQUIRED) Forces the folder to be the AppData folder (useful for containers when pterodactyl runs as root) [default: YourAppDataPath] --pre-releases Includes pre-releases [default: False] --target-version <target-version> Target version for installation --github--token <github--token> Uses a token for auth in case the rate limit is exceeded (no permissions required) --exit Automatically exits the application anyway --get-versions Gets all possible versions for installation --version Show version information -?, -h, --help Show help and usage information Additional Arguments: Arguments passed to the application that is being run. Examples Using powershell. ```powershell title=\"Basic installation in the folder you are in\" .\\Exiled.Installer-Win --pre-releases ```powershell title=\"Installation in a specific folder, specific version and specific appdata folder\" .\\Exiled.Installer-Win -p D:\\Games\\SCPSL\\Server --appdata C --target-version 2.0.8"
  },
  "docs/Installation/Intro.html": {
    "href": "docs/Installation/Intro.html",
    "title": "Install automatically EXILED | EXILED Docs",
    "keywords": "Install automatically EXILED Automatic Installation Exiled has a tool that allows you to install automatically the framework for you. Guides Window Automatic Installation . Linux Automatic Installation . Manual Installation The old way. Guides Window Installation . Linux Installation ."
  },
  "docs/Installation/Manual/Windows or Linux.html": {
    "href": "docs/Installation/Manual/Windows or Linux.html",
    "title": "Manual Installation | EXILED Docs",
    "keywords": "Manual Installation You can download exiled manually following this steps: Pick a release You can select a release inside our official GitHub repo . Download the release Download the Exiled.tar.gz file and extract it with your favourite tool, we recommend 7Zip or WinRar . Installation Move the file Assembly-CSharp.dll to: (Your Server Folder)/SCPSL_Data/Managed and replace the file. Move the EXILED folder to %appdata% Note: Windows: This %appdata% folder is the one located inside AppData/Roaming , not just AppData . Linux: This %appdata% folder is the one called ~/.config ."
  },
  "docs/Intro.html": {
    "href": "docs/Intro.html",
    "title": "Exiled Introduction | EXILED Docs",
    "keywords": "Exiled Introduction About EXILED EXILED is a low level plugin framework for SCP: Secret Laboratory. It offers an event system for developers to hook in order to manipulate or change game code, or implement their own functions. All EXILED events are coded with Harmony using IL transpilers, meaning they require no direct editing of server Assemblies to function, which allows for two unique benefits. The entirety of the frameworks code can be freely published and shared. Allowing developers to better understand how it works, as well as contributing to the framework itself. Since all of the code related to the framework is done outside of the server assembly, things like small game updates will have little, if any, effect on the framework. Frequently Asked Questions What is EXILED? EXILED - short for \"EXtended In-runtime Library for External Development\" is a plugin framework for SCP: Secret Laboratory compatible with MP2. It is not a direct replacement for SMOD, but it's purpose is to implement an event-based framework using Harmony patches, that plugin developers can utilize to develop plugins for SCP:SL servers. How do I install EXILED? See the Installation page for installation information. How do I install plugins? All plugins contain a DLL file (found in its latest release) that is used to load the plugin. Place the plugin in the appropriate plugin folder. Windows: %AppData%\\EXILED\\Configs(ServerPortHere)-configs.yml Linux: ~/.config/EXILED/Configs(ServerPortHere)-configs.yml Where is plugin configuration stored? Plugin configuration is stored in a separate folder than the base-game config files. Windows: %AppData%\\EXILED\\Plugins Linux: ~/.config/EXILED/Plugins Is there a plugin for upgrading items in hand, inside SCP-914? No, this is unnecessary because this is a base-game feature! Simply set the 914_mode config_gameplay config to DroppedAndHeld . What is Harmony? Harmony is a library that examines the code of a program as it is being run, allowing developers to tap into those functions, and run their own code, either adding onto, or completely replacing, the code the program would normally run. The reason EXILED uses harmony is to allow easier updating of the framework in conjunction with game updates. Under ideal circumstances, a new game update will not break EXILED itself, and the only thing needed to make EXILED work again, is a very simple copy/paste of a few lines of code into the new Assembly-CSharp file. By keeping all of our code outside of the Assembly, other developers can have full, unhindered access to the entirety of EXILED's source code, making collaboration easier. Additionally, it means that our code will be mostly unaffected by game updates. Unless the game drastically changes code in a very specific function EXILED uses for an event patch, a game update may not even require EXILED itself to also be updated."
  },
  "docs/Plugins/Events.html": {
    "href": "docs/Plugins/Events.html",
    "title": "Events: What are they? | EXILED Docs",
    "keywords": ":::caution This tutorial assumes that you are familiar with C# and with setting up a plugin in the EXILED framework. See the tutorial if you are unfamiliar with setting up a plugin using EXILED. ::: Events: What are they? Events play a key role in the EXILED framework and all of the plugins utilizing it. Almost every plugin created using the EXILED framework uses events in one way or another. So, what are they? An event is a simple way of being informed when something happens. Events range from the round ending, to a player throwing an item or opening a door, to even SCP-096 being enraged! Events allow you to attach code that executes when something occurs before, during, or at the conclusion of a round. For example, say that you have the following method. public void OnDead() { // Show hint to player. } With EXILED, it is possible to achieve the desired result: Showing a hint to a player who dies. Event structure The EXILED framework consists of two different types of events: Events that can be disallowed, and those that cannot. Events that can be disallowed can prevent certain events from happening; as an example, preventing a player from dying when they normally should. The ability to prevent certain events from happening is what gives EXILED its beauty. All events are part of a static class called a handler . All handlers can be found in the Exiled.Events namespace. Every handler is related to a specific feature in the game (eg. Exiled.Events.Scp096 contains SCP-096 related events). Almost all events have a corresponding event argument class. The event argument provides the data of an event, as well as the ability to prevent it from occurring. All event arguments can be found in the Exiled.Events.EventArgs namespace, and all event arguments inherit from System.EventArgs . Example: Enraging event The following is the structure of the Exiled.Events.EventArgs.EnragingEventArgs . public class EnragingEventArgs : System.EventArgs { // Note: Constructor omitted. public Scp096 Scp096 { get; } // The SCP-096 instance. public Player Player { get; } // The player controlling SCP-096. public bool IsAllowed { get; set; } // Whether or not SCP-096 can be enraged. } Notice the IsAllowed property of the event. This property, which defaults to true , can be set to false to prevent SCP-096 from being enraged. For most events that can be disallowed, IsAllowed is set to true by default, and plugins can set it to false to prevent the event from occurring. However, in some cases, IsAllowed defaults to false and plugins can set it to true to allow the event to occur. An example of this behavior is the InteractingDoor event. IsAllowed will default to false in this event if a player cannot open a door, however plugins may set it to true to allow the player to open it regardless. Connecting events Events can be connected and disconnected by using the += and -= operators. These can be used in the plugin's OnEnabled and OnDisabled methods, respectively. // Base plugin class // This example assumes a method called \"OnEnraging\" exists in this class. For best practice, you should create a new class to handle events. using Exiled.Events; public override void OnEnabled() { Scp096.Enraging += OnEnraging; // Scp096 is the event handler, while Enraging is the name of the event. The += operator connects this event to the provided method. } public override void OnDisabled() { Scp096.Enraging -= OnEnraging; // The -= operator disconnects this event from the provided method. } // Some other class using Exiled.Events.EventArgs; public void OnEnraging(EnragingEventArgs ev) // ev is the arguments for the event. Every event has a different argument class with different parameters, so make sure to check its documentation. { Log.Info(ev.Player.Nickname + \" has just been enraged!\"); }"
  },
  "docs/Plugins/MoreEffectiveCoroutines.html": {
    "href": "docs/Plugins/MoreEffectiveCoroutines.html",
    "title": "MEC (More Effective Coroutines) | EXILED Docs",
    "keywords": ":::caution This tutorial assumes that you are familiar with C# and with setting up a plugin in the EXILED framework. See the Plugin Structure tutorial if you are unfamiliar with setting up a plugin using EXILED . ::: MEC (More Effective Coroutines) If you are unfamiliar with MEC, this will be a very brief and simple primer to get you started. MEC Coroutines are basically timed methods, that support waiting periods of time before continuing execution, without interrupting/sleeping the main game thread. MEC coroutines are safe to use with Unity, unlike traditional threading, which will crash the server. MEC is useful for plugins which require a pre-defined timeout between execution. As an example, an automatic nuke plugin would want to pause for a certain amount of seconds before activating the warhead. A supply drop plugin would want to wait in certain intervals before executing a supply drop. Both of these are possible with MEC. Setup Unlike other API provided by SCP:SL, MEC requires a reference to the Assembly-CSharp-firstpass DLL file. After referencing this file, a using MEC; statement allows MEC to be used. Coroutine MEC offers tons of features for controlling threads. For this tutorial, we are going to look at two of them: coroutines, and delayed calls. A coroutine is a method that is executed by MEC and supports delays. These methods must return type IEnumerator<float> and must be called by Timing.RunCoroutine(Method()) . An example can be seen below, using an infinite loop with a 5 second delay. using MEC; using Exiled.API.Features; public void SomeMethod() { Timing.RunCoroutine(MyCoroutine()); } public IEnumerator<float> MyCoroutine() { for (;;) //repeat the loop infinitely { Log.Info(\"Hey, I'm a infinite loop!\"); //Call Log.Info to print a line to the game console/server logs. yield return Timing.WaitForSeconds(5f); //Tells the coroutine to wait 5 seconds before continuing. Since this is at the end of the loop, it effectively stalls the loop from repeating for 5 seconds. } } This example prints, \"Hey, I'm an infinite loop!\" every 5 seconds infinitely. Coroutines can have multiple yield return statements. Delayed Calls A simpler method of running an action after a delay is using Timing.CallDelayed(float, Action) , which executes code after a given number of seconds passes. This method does not require a coroutine to be created, hence why it's useful. An example can be seen below, logging a message 5 seconds after the method is called. using MEC; using Exiled.API.Features; public void SomeMethod() { Timing.CallDelayed(5f, () => // Execute the provided method 5 seconds late. { Log.Info(\"This log was printed 5 seconds late!\"); }) } It is strongly recommended that you do some googling, or ask around in the EXILED Discord server if you are unfamiliar with MEC and would like to learn more, get advice, or need help. Questions, no matter how 'stupid' they are, will always be answered as helpfully and clearly as possible for plugin developers to excel. Better code is better for everyone."
  },
  "docs/Resources/Intro.html": {
    "href": "docs/Resources/Intro.html",
    "title": "Index | EXILED Docs",
    "keywords": "Index RoleType, Team, Side, Faction ItemType AmmoType DoorType RoomType ElevatorType DamageType Damage Handlers EffectType Keycard Permissions DoorLockType StructureType BloodType GeneratorState HotKeyButton IntercomStates BroadcastType Attachment Names Spawn Reasons Prefabs External resources Available Colors (en.scpslgame.com) Resources RoleType, Team, Side and Faction Roles md title=\"Latest Updated: 08/23/2021\" | Id | RoleType | Team | Side | Faction | |-----|----------------|------|-----------------|-----------------| | -1 | None | RIP | None | Others | | 0 | Scp173 | SCP | Scp | SCP | | 1 | ClassD | CDP | ChaosInsurgency | FoundationEnemy | | 2 | Spectator | RIP | None | Others | | 3 | Scp106 | SCP | Scp | SCP | | 4 | NtfSpecialist | MTF | Mtf | FoundationStaff | | 5 | Scp049 | SCP | Scp | SCP | | 6 | Scientist | RSC | Mtf | FoundationStaff | | 7 | Scp079 | SCP | Scp | SCP | | 8 | ChaosConscript | CHI | ChaosInsurgency | FoundationEnemy | | 9 | Scp096 | SCP | Scp | SCP | | 10 | Scp0492 | SCP | Scp | SCP | | 11 | NtfSergeant | MTF | Mtf | FoundationStaff | | 12 | NtfCaptain | MTF | Mtf | FoundationStaff | | 13 | NtfPrivate | MTF | Mtf | FoundationStaff | | 14 | Tutorial | TUT | Tutorial | Others | | 15 | FacilityGuard | MTF | Mtf | FoundationStaff | | 16 | Scp93953 | SCP | Scp | SCP | | 17 | Scp93989 | SCP | Scp | SCP | | 18 | ChaosRifleman | CHI | ChaosInsurgency | FoundationEnemy | | 19 | ChaosRepressor | CHI | ChaosInsurgency | FoundationEnemy | | 20 | ChaosMarauder | CHI | ChaosInsurgency | FoundationEnemy | ItemType Items md title=\"Latest Updated: 05/08/2022\" <Item> (<id>) None -1 KeycardJanitor 0 KeycardScientist 1 KeycardResearchCoordinator 2 KeycardZoneManager 3 KeycardGuard 4 KeycardNTFOfficer 5 KeycardContainmentEngineer 6 KeycardNTFLieutenant 7 KeycardNTFCommander 8 KeycardFacilityManager 9 KeycardChaosInsurgency 10 KeycardO5 11 Radio 12 GunCOM15 13 Medkit 14 Flashlight 15 MicroHID 16 SCP500 17 SCP207 18 Ammo12gauge 19 GunE11SR 20 GunCrossvec 21 Ammo556x45 22 GunFSP9 23 GunLogicer 24 GrenadeHE 25 GrenadeFlash 26 Ammo44cal 27 Ammo762x39 28 Ammo9x19 29 GunCOM18 30 SCP018 31 SCP268 32 Adrenaline 33 Painkillers 34 Coin 35 ArmorLight 36 ArmorCombat 37 ArmorHeavy 38 GunRevolver 39 GunAK 40 GunShotgun 41 SCP330 42 SCP2176 43 SCP244a 44 SCP244b 45 AmmoType Ammo md title=\"Latest Updated: 05/08/2022\" Nato9 Nato556 Nato762 Ammo12Gauge Ammo44Cal DoorType Doors md title=\"Latest Updated: 05/08/2022\" UnknownDoor Scp914Door GR18Inner Scp049Gate Scp049Armory Scp079First Scp079Second Scp096 Scp106Bottom Scp106Primary Scp106Secondary Scp173Gate Scp173Connector Scp173Armory Scp173Bottom GR18Gate Scp914Gate CheckpointEntrance CheckpointLczA CheckpointLczB EntranceDoor EscapePrimary EscapeSecondary ServersBottom GateA GateB HczArmory HeavyContainmentDoor HID HIDLeft HIDRight Intercom LczArmory LczCafe LczWc LightContainmentDoor NukeArmory NukeSurface PrisonDoor SurfaceGate Scp330 Scp330Chamber RoomType Rooms md title=\"Latest Updated: 05/08/2022\" Unknown LczArmory LczCurve LczStraight Lcz330 Lcz914 LczCrossing LczTCross LczCafe LczPlants LczToilets LczAirlock Lcz173 LczClassDSpawn LczChkpB LczGlassBox LczChkpA Hcz079 HczEzCheckpoint HczArmory Hcz939 HczHid Hcz049 HczChkpA HczCrossing Hcz106 HczNuke HczTesla HczServers HczChkpB HczTCross HczCurve Hcz096 EzVent EzIntercom EzGateA EzDownstairsPcs EzCurve EzPcs EzCrossing EzCollapsedTunnel EzConference EzStraight EzCafeteria EzUpstairsPcs EzGateB EzShelter Pocket Surface ElevatorType Elevators md title=\"Latest Updated: 05/08/2022\" Unknown GateA GateB Nuke Scp049 LczA LczB DamageType DamageType md title=\"Latest Updated: 05/08/2022\" Unknown Falldown Warhead Decontamination Asphyxiation Poison Bleeding MicroHid Tesla Scp Explosion Scp018 Scp207 Recontainment Crushed FemurBreaker PocketDimension FriendlyFireDetector SeveredHands Custom Scp049 Scp0492 Scp096 Scp173 Scp106 Scp939 Crossvec Logicer Revolver Shotgun AK Com15 Com18 Fsp9 E11Sr Hypothermia DamageHandlers Damage Handlers md title=\"Latest Updated: 05/08/2022\" All available DamageHandlers + Symbol ':' literally means \"inherits from\" * In C#, inheritance is a process in which one object acquires all the properties and behaviors of its parent object automatically. PlayerStatsSystem::DamageHandlerBase PlayerStatsSystem::StandardDamageHandler : DamageHandlerBase PlayerStatsSystem::AttackerDamageHandler : StandardDamageHandler PlayerStatsSystem::CustomReasonDamageHandler : StandardDamageHandler PlayerStatsSystem::UniversalDamageHandler : StandardDamageHandler PlayerStatsSystem::WarheadDamageHandler : StandardDamageHandler PlayerStatsSystem::RecontainmentDamageHandler : AttackerDamageHandler PlayerStatsSystem::FirearmDamageHandler : AttackerDamageHandler PlayerStatsSystem::ScpDamageHandler : AttackerDamageHandler PlayerStatsSystem::Scp096DamageHandler : AttackerDamageHandler PlayerStatsSystem::MicroHidDamageHandler : AttackerDamageHandler PlayerStatsSystem::ExplosionDamageHandler : AttackerDamageHandler PlayerStatsSystem::Scp018DamageHandler : AttackerDamageHandler EffectType Effects md title=\"Latest Updated: 05/08/2022\" Amnesia Asphyxiated Bleeding Blinded Burned Concussed Corroding Deafened Decontaminating Disabled Ensnared Exhausted Flashed Hemorrhage Invigorated BodyshotReduction Poisoned Scp207 Invisible SinkHole Visuals939 DamageReduction MovementBoost RainbowTaste SeveredHands Stained Visual173Blink Vitality Hypothermia Scp1853 KeycardPermissions Keycard Perms md title=\"Latest Updated: 05/08/2022\" <0> None <1> Checkpoints <2> ExitGates <4> Intercom <8> AlphaWarhead <16> ContainmentLevelOne <32> ContainmentLevelTwo <64> ContainmentLevelThree <128> ArmoryLevelOne <256> ArmoryLevelTwo <512> ArmoryLevelThree <1024> ScpOverride DoorLockType Lock Type md title=\"Latest Updated: 05/08/2022\" [0] <unlocked> None [1] Regular079 [2] Lockdown079 [4] Warhead [8] AdminCommand [16] DecontLockdown [32] DecontEvacuate [64] SpecialDoorFeature [128] NoPower [256] Isolation StructureType Structures md title=\"Latest Updated: 05/08/2022\" WorkStation LargeGunLocker RifleRack MiscLocker Generator RegularMedkit AdrenalineMedkit Scp018Pedestal Scp207Pedestal Scp244Pedestal Scp268Pedestal Scp500Pedestal Scp1853Pedestal Scp2176Pedestal BloodType Blood md title=\"Latest Updated: 02/13/2022\" Default Scp106 Spreaded Faded GeneratorState GeneratorState md title=\"Latest Updated: 02/13/2022\" [1] None [2] Unlocked [4] Open [8] Activating [16] Engaged HotKeyButton Hot Keys md title=\"Latest Updated: 02/13/2022\" Keycard PrimaryFirearm SecondaryFirearm Medical Grenade IntercomStates Intercom States md title=\"Latest Updated: 02/13/2022\" Ready Transmitting TransmittingBypass Restarting AdminSpeaking Muted Custom BroadcastType BroadcastType md title=\"Latest Updated: 02/13/2022\" Normal Monospaced AdminChat AttachmentNames Attachment Names md title=\"Latest Updated: 04/27/2022\" None IronSights DotSight HoloSight NightVisionSight AmmoSight ScopeSight StandardStock ExtendedStock RetractedStock LightweightStock HeavyStock RecoilReducingStock Foregrip Laser Flashlight AmmoCounter StandardBarrel ExtendedBarrel SoundSuppressor FlashHider MuzzleBrake MuzzleBooster StandardMagFMJ StandardMagAP StandardMagJHP ExtendedMagFMJ ExtendedMagAP ExtendedMagJHP DrumMagFMJ DrumMagAP DrumMagJHP LowcapMagFMJ LowcapMagAP LowcapMagJHP CylinderMag4 CylinderMag6 CylinderMag8 CarbineBody RifleBody ShortBarrel ShotgunChoke ShotgunExtendedBarrel NoRifleStock ShotgunSingleShot ShotgunDoubleShot SpawnReasons Spawn Reasons md title=\"Latest Updated: 02/13/2022\" None RoundStart LateJoin Respawn Died Escaped Revived ForceClass Overwatch Prefabs Available Prefabs md title=\"Latest Updated: 02/13/2022\" Guid | Name 43658aa2-f339-6044-eb2b-937db0c2c4bd | Player 5bfd1bbe-10a4-e184-4a2e-381314b3380c | PlaybackLobby 9a77040d-663e-8a14-a8a2-297249bce483 | Pickup 307eb9b0-d080-9dc4-78e6-673847876412 | Work Station 0b58d568-fcd7-5384-abce-593a7931d65d | SCP-173_Ragdoll f602bb4b-88de-d554-5976-5c2e18af4479 | Ragdoll_1 ea314e24-bddd-5264-5b08-dadd1bcfa75e | SCP-106_Ragdoll 2b0290fb-6764-8f44-48ab-9294fe063c8f | Ragdoll_4 05488a04-eda9-a724-18c9-bf2edbe23031 | Ragdoll_6 e12d94d4-66ef-c734-2af0-aef522db57cb | Ragdoll_7 9d7cf7ef-eec0-ece4-196c-4fd2c3cfd03a | Ragdoll_8 e53f7b09-ad63-f924-6a96-0be4381af7f0 | SCP-096_Ragdoll be41bb5a-3b5f-bc84-4ad4-d4e24dfa168f | Ragdoll_10 c87cf6f7-fc36-f144-6ae5-727c8c8f4b9b | Ragdoll_14 b8d25875-6346-0314-68a9-7d1b7ec71167 | SCP-939-53_Ragdoll d2e872e1-1133-0984-186d-d3cdc686883f | SCP-939-89_Ragdoll c69da0e5-a829-6a04-c8d9-f404a1073cfe | Grenade Flash 8063e113-c1f1-1514-7bc5-840ea8ee5f01 | Grenade Frag 38f8296e-fcf4-44f4-491b-b5dc69b8125b | Grenade SCP-018 33f5e0b4-fb1c-0134-493f-5d7aec09dc38 | EZ BreakableDoor 5fbbe939-51c2-ef74-a9ed-bc0abfefa132 | HCZ BreakableDoor b82d6236-b9f5-33d4-e8ee-8ee33fba6edd | LCZ BreakableDoor 3353122b-0ba2-5d14-fa64-886c45425967 | sportTargetPrefab 422b08ed-0bc0-6cb4-7a7f-81dd37c430c0 | dboyTargetPrefab 4f03f7fa-f417-ae84-382b-962c31614d1a | binaryTargetPrefab a0e7ee93-b802-e5a4-38bd-95e27cc133ea | TantrumObj 43c40e13-5a2a-b3a4-9ba8-29c7002cedaf | Tutorial_Ragdoll bf9a7ae6-aaea-0174-d807-e0d4adb1c524 | PrimitiveObjectToy 6996edbf-2adf-a5b4-e8ce-e089cf9710ae | LightSourceToy 19b3629a-3298-8324-0ad0-e841def23244 | RegularKeycardPickup ef69975c-5a03-b9c4-fa26-0b6145b05824 | ChaosKeycardPickup 8359dd57-d964-98c4-5871-586da0d50878 | RadioPickup 52f9fa65-832f-b0f4-ab15-0ac33a45b853 | Com15Pickup 06361fcf-1355-ea54-7a0b-d7a29244eae9 | MedkitPickup 9902569b-0bc8-cf74-b814-a69789ed8c5a | FlashlightPickup 35f6c267-d9b6-f5a4-4a87-5523b7424052 | MicroHidPickup 30d95cc3-8b1f-bd14-4b66-f7350cf3bae9 | SCP500Pickup 46572711-4d8b-f8a4-2a81-b1ca2ff15b5d | SCP207Pickup e7588f50-a788-bd44-89bf-f9dae4ab2071 | Ammo12gaPickup 9958e2c0-668f-9f14-c9ed-1cd97281f3d3 | E11SRPickup 7a39d145-d2d1-5724-7ad5-660cbe2f5757 | CrossvecPickup 0282bdfe-9880-d284-1807-2d4e11fc540d | Ammo556mmPickup d32145e1-e7d9-d674-fbaa-078247910c49 | Fsp9Pickup 4ce1ab59-83ff-aa14-db7a-65e79c48cf8e | LogicerPickup 3f98e495-a544-11b4-dbc3-a03797786f52 | HegPickup 6e4bfac7-e1c9-9af4-9a76-c025cc8bbb37 | FlashbangPickup 8627c2a9-e397-2164-08dd-97f9fddab207 | Ammo44calPickup ecba736b-7b69-0f14-ea94-7c9067dc7ea8 | Ammo762mmPickup 89a36c3a-be6b-5914-7b75-1287c79f19dc | Ammo9mmPickup 2a12ef7e-b39d-ed34-6979-571e541231b1 | Com18Pickup a1d0c7dd-6523-8a34-3b4a-5124f47b93dd | Scp018Projectile 6fbfc036-04fb-1f94-7af0-1335064c0198 | SCP268Pickup 9695f1b9-46d6-7054-c9af-a35a4fefafe1 | AdrenalinePrefab 9925eed6-900f-7444-880f-393468fa1a63 | PainkillersPickup 522f199f-ce6f-5814-9a67-f0191d0110a9 | CoinPickup 51703b4d-a309-11c4-8af7-bdb8d95214c0 | Light Armor Pickup 02e10b6d-9d4d-ed14-2b8b-f5219522da77 | Combat Armor Pickup 19d03dd5-b491-acc4-ea16-be8ad5a33783 | Heavy Armor Pickup 635a3623-281c-e5c4-297d-7f07cd6a0eef | RevolverPickup 1821b416-953c-98f4-c9b8-09d2c192b8b1 | AkPickup d6abff39-0c5c-1804-58de-ac4478538837 | ShotgunPickup 65141804-5071-27e4-c8c0-23c547ce629c | Scp330Pickup 830e7527-1f40-d0d4-3a3e-ff49f5a6176c | Scp2176Projectile 2401ec76-dce3-cf34-b858-7a9c7dc83b0b | SCP244APickup Variant 39825db8-2df8-eed4-caa5-a4c334c669a0 | SCP244BPickup Variant 68f13209-e652-6024-2b89-0f75fb88a998 | Scp268PedestalStructure Variant 17054030-9461-d104-5b92-9456c9eb0ab7 | Scp207PedestalStructure Variant f4149b66-c503-87a4-0b93-aabfe7c352da | Scp500PedestalStructure Variant a149d3eb-11bd-de24-f9dd-57187f5771ef | Scp018PedestalStructure Variant 5ad5dc6d-7bc5-3154-8b1a-3598b96e0d5b | LargeGunLockerStructure 850f84ad-e273-1824-8885-11ae5e01e2f4 | RifleRackStructure d54bead1-286f-3004-facd-74482a872ad8 | MiscLocker daf3ccde-4392-c0e4-882d-b7002185c6b8 | GeneratorStructure ad8a455f-062d-dea4-5b47-ac9217d4c58b | Spawnable Work Station Structure 5b227bd2-1ed2-8fc4-2aa1-4856d7cb7472 | RegularMedkitStructure db602577-8d4f-97b4-890b-8c893bfcd553 | AdrenalineMedkitStructure fff1c10c-a719-bea4-d95c-3e262ed03ab2 | Scp2176PedestalStructure Variant 53cd67d2-995b-3374-4892-4190ffd48ee9 | HegProjectile 2a6e5abb-7999-b8d4-a926-310e3e9e2a13 | FlashbangProjectile"
  },
  "README.html": {
    "href": "README.html",
    "title": "Exiled Docs | EXILED Docs",
    "keywords": "Exiled Docs This website is built using Docusaurus 2 , a modern static website generator. Installation of Dependencies $ yarn Local Development $ yarn start This command starts a local development server and opens up a browser window. Most changes are reflected live without having to restart the server."
  }
}